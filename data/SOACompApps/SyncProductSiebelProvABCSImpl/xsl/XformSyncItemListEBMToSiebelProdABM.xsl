<?xml version = '1.0' encoding = 'UTF-8'?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
<mapSources>
<source type="XSD">
<schema location="oramds:/apps/AIAMetaData/AIAComponents/EnterpriseObjectLibrary/Core/EBO/Item/V2/ItemEBM.xsd" />
<rootElement name="SyncItemListEBM" namespace="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/Item/V2" />
</source>
</mapSources>
<mapTargets>
<target type="WSDL">
<schema location="oramds:/apps/AIAMetaData/AIAComponents/ApplicationObjectLibrary/Siebel/V1/wsdls/SWIProductIntegrationIO.wsdl" />
<rootElement name="SWIProductImportUpsert_Input" namespace="http://siebel.com/asi/V0" />
</target>
</mapTargets>
<!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.3.0(build 070615.0525) AT [MON MAY 21 22:19:44 IST 2007]. -->?><xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="http://siebel.com/asi/V0" xmlns:fn="http://www.w3.org/2005/xpath-functions" xmlns:aia="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.core.xpath.AIAFunctions" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:coreeboitem="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/Item/V2" xmlns:ns7="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/CommonEBO/V1" xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:corecomEBO="http://xmlns.oracle.com/EnterpriseObjects/Core/CommonEBO/V1" xmlns:svcdoc="http://xmlns.oracle.com/Services/Documentation/V1" xmlns:ns1="http://schemas.xmlsoap.org/ws/2003/03/addressing" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:coreEBOcust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/CommonEBO/V1" xmlns:coreitemcust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/EBO/Item/V2" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:xacml-context="urn:oasis:names:tc:xacml:2.0:context:schema:cd:04" xmlns:corecomcust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/Common/V2" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:xsdLocal="http://www.siebel.com/xml/SWIProductIntegrationIO" xmlns:xacml="urn:oasis:names:tc:xacml:2.0:policy:schema:cd:04" xmlns:corecom="http://xmlns.oracle.com/EnterpriseObjects/Core/Common/V2" version="2.0" exclude-result-prefixes="xsl coreeboitem xsd corecomEBO svcdoc ns1 coreEBOcust coreitemcust xacml-context corecomcust xacml corecom ns7 xsdLocal bpws ehdr hwf xp20 xref ora ids orcl" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue">
	<xsl:include href="XformSyncItemListEBMToSiebelProdABM_Custom.xsl"/>
	<xsl:include href="XformUDAInterfaceCommsSiebelProductEBMToABM.xsl"/>
	<!-- import the extension templates stylesheet -->
	<xsl:include href="XformSyncItemListEBMToSiebelProdABM_UDA_Custom.xsl"/>
	<xsl:template match="/">
		<xsl:choose>
			<xsl:when test="$enableCustomExtensions">
				<xsl:variable name="preExtensionsResultTree">
					<xsl:apply-templates/>
				</xsl:variable>
				<xsl:apply-templates select="$preExtensionsResultTree" mode="ext"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:apply-templates/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>
	<xsl:param name="SimpleProdReleaseFlag"/>
	<xsl:param name="ComplexProdReleaseFlag"/>
	<xsl:param name="BatchName"/>
	<xsl:param name="SystemID"/>
	<xsl:param name="productSourcePIP"/>
	<xsl:param name="LanguageCodes"/>
	<xsl:variable name="LangId" type="xsd:string"/>
	<xsl:variable name="XREFSourceCol" select="$SystemID"/>
	<xsl:variable name="XREFTargetCol">
		<xsl:value-of select='"COMMON"'/>
	</xsl:variable>
	<xsl:variable name="DVMSourceCol" select="$SystemID"/>
	<xsl:variable name="DVMTargetCol">
		<xsl:value-of select='"COMMON"'/>
	</xsl:variable>
	<xsl:variable name="SimpleProductReleaseFlag">
		<xsl:value-of select="$SimpleProdReleaseFlag"/>
	</xsl:variable>
	<xsl:variable name="ComplexProductReleaseFlag">
		<xsl:value-of select="$ComplexProdReleaseFlag"/>
	</xsl:variable>
	<xsl:variable name="xslProductSourcePIP">
		<xsl:value-of select="$productSourcePIP"/>
	</xsl:variable>
	<xsl:variable name="OperationType" select="aia:getServiceProperty('{http://xmlns.oracle.com/ABCSImpl/Siebel/Core/SyncProductSiebelProvABCSImpl/V1}SyncProductSiebelProvABCSImpl','OPERATION_TYPE',false())"/>
	<xsl:variable name="UCTFormatEnabled" select="aia:getServiceProperty('{http://xmlns.oracle.com/ABCSImpl/Siebel/Core/SyncProductSiebelProvABCSImpl/V1}SyncProductSiebelProvABCSImpl','UTC_FORMAT_ENABLE',false())"/>
	<xsl:template match="/coreeboitem:SyncItemListEBM">
		<tns:SWIProductImportUpsert_Input>
			<xsl:if test='$xslProductSourcePIP="MDM"'>
				<tns:SyncChild>
					<xsl:value-of select="$OperationType"/>
				</tns:SyncChild>
			</xsl:if>
			<xsdLocal:ListOfProductImport>
				<xsdLocal:ProductIntegration>
					<xsdLocal:WorkspaceName>
						<xsl:value-of select="$BatchName"/>
					</xsdLocal:WorkspaceName>
					<xsdLocal:WorkspaceReuseFlag>Y</xsdLocal:WorkspaceReuseFlag>
					<xsdLocal:ListOfProductDefinition>
						<xsl:for-each select="/coreeboitem:SyncItemListEBM/coreeboitem:DataArea/coreeboitem:SyncItemList">
							<xsl:variable name="DataArea_Var" select="."/>
							<xsl:variable name="EntityType">
								<xsl:value-of select="corecomEBO:EntityTypeCode"/>
							</xsl:variable>
							<xsl:variable name="FullfillmentCode">
								<xsl:value-of select="corecomEBO:ItemClassification/corecomEBO:ClassificationCode[@listID='Fulfillment_Item_Code']"/>
							</xsl:variable>
							<xsl:if test="$EntityType='' or $EntityType='PRODUCT' or $EntityType='DISCOUNT' or $EntityType='OPTION_GROUP' or $EntityType='BUNDLE'">
								<xsdLocal:ProductDefinition>
									<xsdLocal:Id>
										<xsl:value-of select='xref:lookupXRef("oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref",$XREFTargetCol,corecom:ItemIdentification/corecom:BusinessComponentID,$XREFSourceCol,false())'/>
									</xsdLocal:Id>
									<xsl:if test='$xslProductSourcePIP="MDM"'>
										<xsdLocal:ActiveFlag>
											<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/ACTIVE_FLAG_SEBL.dvm",$DVMTargetCol,corecom:Status/corecom:Code,$DVMSourceCol,"")'/>
										</xsdLocal:ActiveFlag>
									</xsl:if>
									<xsl:if test="corecomEBO:ItemLogisticCharacteristics/corecomEBO:AutomaticExplodeIndicator!= ''">
										<xsdLocal:AutoExplodeFlag>
											<xsl:choose>
												<xsl:when test="corecomEBO:ItemLogisticCharacteristics/corecomEBO:AutomaticExplodeIndicator = true()">
													<xsl:text>Y</xsl:text>
												</xsl:when>
												<xsl:otherwise>
													<xsl:text>N</xsl:text>
												</xsl:otherwise>
											</xsl:choose>
										</xsdLocal:AutoExplodeFlag>
									</xsl:if>
									<xsl:if test="corecomEBO:ItemServiceCharacteristics/corecomEBO:BillableIndicator != ''">
										<xsdLocal:BillableFlag>
											<xsl:choose>
												<xsl:when test="corecomEBO:ItemServiceCharacteristics/corecomEBO:BillableIndicator = true()">
													<xsl:text>Y</xsl:text>
												</xsl:when>
												<xsl:otherwise>
													<xsl:text>N</xsl:text>
												</xsl:otherwise>
											</xsl:choose>
										</xsdLocal:BillableFlag>
									</xsl:if>
									<!-- MSISDNRequired field changes -->
									<xsl:if test="corecomEBO:ItemServiceCharacteristics/corecomEBO:MSISDNIndicator != ''">
										<xsdLocal:MSISDNRequiredFlag>
											<xsl:choose>
												<xsl:when test="corecomEBO:ItemServiceCharacteristics/corecomEBO:MSISDNIndicator = true()">
													<xsl:text>Y</xsl:text>
												</xsl:when>
												<xsl:otherwise>
													<xsl:text>N</xsl:text>
												</xsl:otherwise>
											</xsl:choose>
										</xsdLocal:MSISDNRequiredFlag>
									</xsl:if>
									<!-- MSISDNRequired field changes -->
									<!--                  <xsdLocal:BusinessUnitId><xsl:value-of select="xref:lookupXRef(&quot;ORGANIZATION_ID&quot;,$XREFTargetCol,corecom:ItemIdentification/corecom:ContextID[@schemeID=&quot;OPERATING_UNIT_ID&quot;],$XREFSourceCol,true())" /></xsdLocal:BusinessUnitId>-->
									<xsl:if test="corecomEBO:ItemOrderManagementCharacteristics/corecomEBO:EligibilityCheckRequiredIndicator != ''">
										<xsdLocal:CheckEligibilityFlag>
											<xsl:value-of select="corecomEBO:ItemOrderManagementCharacteristics/corecomEBO:EligibilityCheckRequiredIndicator"/>
										</xsdLocal:CheckEligibilityFlag>
									</xsl:if>
									<xsl:choose>
										<xsl:when test="(count(corecom:ItemIdentification/corecom:ContextID[@schemeID='OPERATING_UNIT_ID'])>1) or (count(corecom:ItemIdentification/corecom:ContextID[@schemeID='OPERATING_UNIT_ID'])=0)"><xsdLocal:BusinessUnitId>
													<xsl:value-of select="xref:lookupXRef(&quot;oramds:/apps/AIAMetaData/xref/INVENTORY_LOCATION_ID.xref&quot;,$XREFTargetCol,corecomEBO:InventoryLocation[1]/corecom:Identification/corecom:BusinessComponentID,concat($XREFSourceCol,'_INVLOC_BU'),true())"/>
												</xsdLocal:BusinessUnitId>
											</xsl:when>
											<xsl:otherwise>
												<xsdLocal:BusinessUnitId>
													<xsl:value-of select='xref:lookupXRef("oramds:/apps/AIAMetaData/xref/ORGANIZATION_ID.xref",$XREFTargetCol,corecom:ItemIdentification/corecom:ContextID[@schemeID="OPERATING_UNIT_ID"],$XREFSourceCol,true())'/>
												</xsdLocal:BusinessUnitId>
											</xsl:otherwise>
										</xsl:choose>
										<!--<xsdLocal:Description><xsl:value-of select="corecomEBO:Description"/></xsdLocal:Description>-->
										<!--Defect Fix 13932352-->
										<xsl:if test="corecomEBO:Description[@languageID=$LanguageCodes]/text()">
											<xsdLocal:Description>
												<xsl:value-of select="corecomEBO:Description[@languageID=$LanguageCodes]"/>
											</xsdLocal:Description>
										</xsl:if>
										<!--Defect Fix 13932352-->
										<xsl:if test="$xslProductSourcePIP='MDM'">
											<xsdLocal:EffectiveEndTime>
												<xsl:if test="corecom:EffectiveTimePeriod/corecom:EndDateTime != ''">
													<xsl:call-template name="ConvertEBODateTime">
														<xsl:with-param name="EBODateTime" select="corecom:EffectiveTimePeriod/corecom:EndDateTime"/>
													</xsl:call-template>
												</xsl:if>
											</xsdLocal:EffectiveEndTime>
											<xsdLocal:EffectiveStartTime>
												<xsl:if test="corecom:EffectiveTimePeriod/corecom:StartDateTime != ''">
													<xsl:call-template name="ConvertEBODateTime">
														<xsl:with-param name="EBODateTime" select="corecom:EffectiveTimePeriod/corecom:StartDateTime"/>
													</xsl:call-template>
												</xsl:if>
											</xsdLocal:EffectiveStartTime>
										</xsl:if>
										<xsdLocal:ExternalInventorySystemRef>
											<xsl:value-of select='concat(corecom:ItemIdentification/corecom:ID,"::",corecomEBO:InventoryLocation[1]/corecom:Identification/corecom:ID)'/>
										</xsdLocal:ExternalInventorySystemRef>
										<xsdLocal:IntegrationId>
											<xsl:value-of select="corecom:ItemIdentification/corecom:BusinessComponentID"/>
										</xsdLocal:IntegrationId>
										<!-- Defect Fix 14659836-->
										<!--<xsl:if test="corecomEBO:ItemSpecificationGroup[1]/corecom:SpecificationGroup[1]/corecom:Name='Inclusive_Eligibility'">				  <xsdLocal:InclusiveEligibilityFlag>					<xsl:value-of select="corecomEBO:ItemSpecificationGroup[1]/corecom:SpecificationGroup[1]/corecom:Specification/corecom:ValueText"/>													</xsdLocal:InclusiveEligibilityFlag></xsl:if>	-->
										<xsl:if test="corecomEBO:ItemSpecificationGroup[1]/corecom:SpecificationGroup[1]/corecom:Name='Inclusive_Eligibility'">
											<xsl:choose>
												<xsl:when test="corecomEBO:ItemSpecificationGroup[1]/corecom:SpecificationGroup[1]/corecom:Specification/corecom:ValueText != ''">
													<xsdLocal:InclusiveEligibilityFlag>
														<xsl:value-of select="corecomEBO:ItemSpecificationGroup[1]/corecom:SpecificationGroup[1]/corecom:Specification/corecom:ValueText"/>
													</xsdLocal:InclusiveEligibilityFlag>
												</xsl:when>
												<xsl:otherwise>
													<xsdLocal:InclusiveEligibilityFlag>
														<xsl:text>N</xsl:text>
													</xsdLocal:InclusiveEligibilityFlag>
												</xsl:otherwise>
											</xsl:choose>
										</xsl:if>
										<!--Defect Fix 11724422 END -->
										<xsl:if test="corecomEBO:InventoryCharacteristics/corecomEBO:StockingAllowedIndicator != ''">
											<xsdLocal:InventoryFlag>
												<xsl:choose>
													<xsl:when test="corecomEBO:InventoryCharacteristics/corecomEBO:StockingAllowedIndicator = true()">
														<xsl:text>Y</xsl:text>
													</xsl:when>
													<xsl:otherwise>
														<xsl:text>N</xsl:text>
													</xsl:otherwise>
												</xsl:choose>
											</xsdLocal:InventoryFlag>
										</xsl:if>
										<xsl:if test='$xslProductSourcePIP="MDM"'>
											<xsdLocal:LeadTime>
												<xsl:value-of select="corecomEBO:ItemPlanningCharacteristics/corecomEBO:ProcessingLeadTimeCharacteristics/corecomEBO:CumulativeTotalDuration"/>
											</xsdLocal:LeadTime>
											<xsl:if test="corecomEBO:PerUOMQuantity != ''">
												<xsdLocal:MaximumQuantity>
													<xsl:value-of select="corecomEBO:PerUOMQuantity"/>
												</xsdLocal:MaximumQuantity>
											</xsl:if>
										</xsl:if>
										<xsl:choose>
											<xsl:when test="corecomEBO:ItemOrderManagementCharacteristics/corecomEBO:OrderableIndicator = true()">
												<xsdLocal:OrderableFlag>
													<xsl:text>Y</xsl:text>
												</xsdLocal:OrderableFlag>
											</xsl:when>
											<xsl:when test="corecomEBO:ItemOrderManagementCharacteristics/corecomEBO:OrderableIndicator = false()">
												<xsdLocal:OrderableFlag>
													<xsl:text>N</xsl:text>
												</xsdLocal:OrderableFlag>
											</xsl:when>
										</xsl:choose>
										<xsl:if test='$xslProductSourcePIP="MDM"'>
											<xsdLocal:PriceType>
												<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/PRICE_TYPE.dvm",$DVMTargetCol,corecomEBO:ItemOrderManagementCharacteristics/corecomEBO:PriceTypeCode,$DVMSourceCol,"One-Time")'/>
											</xsdLocal:PriceType>
										</xsl:if>
										<xsdLocal:ProductId>
											<xsl:value-of select='xref:lookupXRef("oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref",$XREFTargetCol,corecom:ItemIdentification/corecom:BusinessComponentID,$XREFSourceCol,false())'/>
										</xsdLocal:ProductId>
										<xsdLocal:ProductName>
											<xsl:value-of select="corecomEBO:Name"/>
										</xsdLocal:ProductName>
										<xsdLocal:ProductSerializedFlag>
											<xsl:choose>
												<xsl:when test="corecomEBO:SerialControlIndicator = true()">
													<xsl:text>Y</xsl:text>
												</xsl:when>
												<xsl:otherwise>
													<xsl:text>N</xsl:text>
												</xsl:otherwise>
											</xsl:choose>
										</xsdLocal:ProductSerializedFlag>
										<xsdLocal:ProductType>
											<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/ITEM_TYPE.dvm",$DVMTargetCol,corecomEBO:TypeCode,$DVMSourceCol,"")'/>
										</xsdLocal:ProductType>
										<xsl:if test="$xslProductSourcePIP='MDM'">
											<xsdLocal:ProductVersion/>
										</xsl:if>
										<!-- Pull the Siebel value for associated BOMTypeCode from DVM -->
										<xsl:variable name="BOMItemTypeCode">
											<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/ITEM_BOM_ITEMTYPE_CODE.dvm",$DVMTargetCol,corecomEBO:ItemManufacturingCharacteristics/corecomEBO:BOMItemTypeCode,$DVMSourceCol,"")'/>
										</xsl:variable>
										<xsl:choose>
											<!--xsl:when test='corecomEBO:TypeCode = "Customizable"'-->
											<!-- Commented as TypeCode gives wrong context -->
											<!-- Use the Siebel value to do the comparision -->
											<xsl:when test='$BOMItemTypeCode = "Customizable"'>
												<xsdLocal:ReleaseFlag>
													<xsl:value-of select="$ComplexProductReleaseFlag"/>
												</xsdLocal:ReleaseFlag>
											</xsl:when>
											<xsl:otherwise>
												<xsdLocal:ReleaseFlag>
													<xsl:value-of select="$SimpleProductReleaseFlag"/>
												</xsdLocal:ReleaseFlag>
											</xsl:otherwise>
										</xsl:choose>
										<xsdLocal:SalesProductFlag>
											<xsl:choose>
												<xsl:when test="corecomEBO:ItemOrderManagementCharacteristics/corecomEBO:SaleableIndicator = true()">
													<xsl:text>Y</xsl:text>
												</xsl:when>
												<xsl:otherwise>
													<xsl:text>N</xsl:text>
												</xsl:otherwise>
											</xsl:choose>
										</xsdLocal:SalesProductFlag>
										<xsl:if test="corecom:ServiceIndicator != ''">
											<xsdLocal:ServiceFlag>
												<xsl:choose>
													<xsl:when test="corecom:ServiceIndicator = true()">
														<xsl:text>Y</xsl:text>
													</xsl:when>
													<xsl:otherwise>
														<xsl:text>N</xsl:text>
													</xsl:otherwise>
												</xsl:choose>
											</xsdLocal:ServiceFlag>
										</xsl:if>
										<xsl:if test='$xslProductSourcePIP="MDM"'>
											<xsl:if test="corecomEBO:ItemServiceCharacteristics/corecomEBO:ServiceInstanceIndicator != ''">
												<xsdLocal:ServiceInstanceFlag>
													<xsl:choose>
														<xsl:when test="corecomEBO:ItemServiceCharacteristics/corecomEBO:ServiceInstanceIndicator = true()">
															<xsl:text>Y</xsl:text>
														</xsl:when>
														<xsl:otherwise>
															<xsl:text>N</xsl:text>
														</xsl:otherwise>
													</xsl:choose>
												</xsdLocal:ServiceInstanceFlag>
											</xsl:if>
										</xsl:if>
										<xsl:if test="$xslProductSourcePIP='MDM'">
											<xsdLocal:ServiceTerms>
												<xsl:value-of select="corecomEBO:ItemServiceCharacteristics/corecomEBO:ContractTypeCode"/>
											</xsdLocal:ServiceTerms>
										</xsl:if>
										<xsl:if test="corecomEBO:ItemOrderManagementCharacteristics/corecomEBO:ShippableIndicator != ''">
											<xsdLocal:ShipFlag>
												<xsl:choose>
													<xsl:when test="corecomEBO:ItemOrderManagementCharacteristics/corecomEBO:ShippableIndicator = true()">
														<xsl:text>Y</xsl:text>
													</xsl:when>
													<xsl:otherwise>
														<xsl:text>N</xsl:text>
													</xsl:otherwise>
												</xsl:choose>
											</xsdLocal:ShipFlag>
										</xsl:if>
										<!--/xsl:if-->
										<xsdLocal:Status>
											<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/ITEM_STATUS_CODE.dvm",$DVMTargetCol,corecom:Status/corecom:Code,$DVMSourceCol,"")'/>
										</xsdLocal:Status>
										<xsdLocal:StructureType>
											<xsl:choose>
												<!--Defect Fix 13413659-->
												<xsl:when test='$xslProductSourcePIP="MDM"'>
													<xsl:if test="corecomEBO:StructureTypeCode != ''">
														<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/ITEM_UDA_STRUCTURE_TYPE.dvm",$DVMTargetCol,corecomEBO:StructureTypeCode,$DVMSourceCol,"None")'/>
													</xsl:if>
												</xsl:when>
												<!--Defect Fix 13413659 ends-->
												<xsl:otherwise>
													<xsl:value-of select="$BOMItemTypeCode"/>
												</xsl:otherwise>
											</xsl:choose>
										</xsdLocal:StructureType>
										<xsl:if test="corecomEBO:ItemServiceCharacteristics/corecomEBO:TrackInstanceIndicator != ''">
											<xsdLocal:TrackAsAssetFlag>
												<xsl:choose>
													<xsl:when test="corecomEBO:ItemServiceCharacteristics/corecomEBO:TrackInstanceIndicator = true()">
														<xsl:text>Y</xsl:text>
													</xsl:when>
													<xsl:otherwise>
														<xsl:text>N</xsl:text>
													</xsl:otherwise>
												</xsl:choose>
											</xsdLocal:TrackAsAssetFlag>
										</xsl:if>
										<xsdLocal:Type>
											<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/ITEM_ENTITY_TYPE.dvm",$DVMTargetCol,$EntityType,$DVMSourceCol,$EntityType)'/>
										</xsdLocal:Type>
										<xsdLocal:UnitofMeasure>
											<xsl:choose>
												<xsl:when test='$xslProductSourcePIP="MDM"'>
													<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/ITEM_UOM_CODE.dvm",$DVMTargetCol,corecomEBO:BaseUOMCode,$DVMSourceCol,corecomEBO:BaseUOMCode)'/>
												</xsl:when>
												<xsl:otherwise>
													<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/UNIT_OF_MEASURE.dvm",$DVMTargetCol,corecomEBO:BaseUOMCode,$DVMSourceCol,corecomEBO:BaseUOMCode)'/>
												</xsl:otherwise>
											</xsl:choose>
										</xsdLocal:UnitofMeasure>
										<xsl:if test='$xslProductSourcePIP="MDM"'>
											<xsdLocal:VendorPartNumber>
												<xsl:value-of select="corecom:ItemIdentification/corecom:SupplierItemID"/>
											</xsdLocal:VendorPartNumber>
											<xsl:variable name="BillingTypeCode">
												<xsl:value-of select="corecomEBO:ItemServiceCharacteristics/corecomEBO:BillingEntityTypeCode"/>
											</xsl:variable>
											<xsl:variable name="BillingServiceType">
												<xsl:value-of select="corecomEBO:ItemClassification/corecomEBO:ClassificationCode[@listID='Billing_Service_Type']"/>
											</xsl:variable>
											<xsdLocal:BillingServiceType>
												<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/APPLIES_TO.dvm",$DVMTargetCol,$BillingServiceType,$DVMSourceCol,$BillingServiceType)'/>
											</xsdLocal:BillingServiceType>
											<xsdLocal:BillingType>
												<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/ITEM_BILLING_TYPE_CODE.dvm",$DVMTargetCol,$BillingTypeCode,$DVMSourceCol,$BillingTypeCode)'/>
											</xsdLocal:BillingType>
											<xsdLocal:CompositionType>
												<!-- <xsl:value-of select="corecomEBO:ItemOrderManagementCharacteristics/corecomEBO:FulfillmentCompositionTypeCode" /> -->
												<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/ITEM_FULFILLMENT_COMPOSITION_TYPE_CODE.dvm",$DVMTargetCol,corecomEBO:ItemOrderManagementCharacteristics/corecomEBO:FulfillmentCompositionTypeCode,$DVMSourceCol,corecomEBO:ItemOrderManagementCharacteristics/corecomEBO:FulfillmentCompositionTypeCode)'/>
											</xsdLocal:CompositionType>
											<xsl:if test="corecomEBO:ToolIndicator!= ''">
												<xsdLocal:Tool>
													<xsl:choose>
														<xsl:when test="corecomEBO:ToolIndicator = true()">
															<xsl:text>Y</xsl:text>
														</xsl:when>
														<xsl:otherwise>
															<xsl:text>N</xsl:text>
														</xsl:otherwise>
													</xsl:choose>
												</xsdLocal:Tool>
											</xsl:if>
											<xsdLocal:FulfillmentItemCode>
												<xsl:value-of select="$FullfillmentCode"/>
											</xsdLocal:FulfillmentItemCode>
										</xsl:if>
										<xsl:if test="corecomEBO:ItemCatalog/corecom:Identification/corecom:BusinessComponentID!= ''">
											<xsdLocal:ProductClassId>
												<xsl:value-of select='xref:lookupXRef("oramds:/apps/AIAMetaData/xref/CLASSIFICATION_CLASSIFICATIONID.xref",$XREFTargetCol,corecomEBO:ItemCatalog/corecom:Identification/corecom:BusinessComponentID,$XREFSourceCol,false())'/>
											</xsdLocal:ProductClassId>
										</xsl:if>
										<!-- Product Marketing Charcteristics -->
										<xsl:if test="corecomEBO:ItemMarketingCharacteristics!= ''">
											<xsdLocal:TargetedIndustry>
												<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/ITEM_TARGET_INDUSTRY.dvm",$DVMTargetCol,corecomEBO:ItemMarketingCharacteristics/corecomEBO:TargetIndustryCode,$DVMSourceCol,corecomEBO:ItemMarketingCharacteristics/corecomEBO:TargetIndustryCode)'/>
											</xsdLocal:TargetedIndustry>
											<xsdLocal:TargetedMinAge>
												<xsl:value-of select="corecomEBO:ItemMarketingCharacteristics/corecomEBO:TargetMinimumAge"/>
											</xsdLocal:TargetedMinAge>
											<xsdLocal:TargetedMaxAge>
												<xsl:value-of select="corecomEBO:ItemMarketingCharacteristics/corecomEBO:TargetMaximumAge"/>
											</xsdLocal:TargetedMaxAge>
											<xsdLocal:TargetedPostalCode>
												<xsl:value-of select="corecomEBO:ItemMarketingCharacteristics/corecomEBO:TargetPostalCode"/>
											</xsdLocal:TargetedPostalCode>
											<xsdLocal:TargetedCountry>
												<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/ADDRESS_COUNTRYID.dvm",$DVMTargetCol,corecomEBO:ItemMarketingCharacteristics/corecomEBO:TargetCountryCode,$DVMSourceCol,corecomEBO:ItemMarketingCharacteristics/corecomEBO:TargetCountryCode)'/>
											</xsdLocal:TargetedCountry>
										</xsl:if>
										<!-- End of Marketing Characteristics -->
										<!-- Product Detail Service Characteristics -->
										<xsl:if test="corecomEBO:ItemServiceCharacteristics/corecomEBO:MeanTimeBetweenFailureDuration!= ''">
											<xsdLocal:MTBF>
												<xsl:value-of select="substring(corecomEBO:ItemServiceCharacteristics/corecomEBO:MeanTimeBetweenFailureDuration,2)"/>
											</xsdLocal:MTBF>
										</xsl:if>
										<xsl:if test="corecomEBO:ItemServiceCharacteristics/corecomEBO:MeanTimeToRepairDuration!= ''">
											<xsdLocal:MTTR>
												<xsl:value-of select="substring(corecomEBO:ItemServiceCharacteristics/corecomEBO:MeanTimeToRepairDuration,2)"/>
											</xsdLocal:MTTR>
										</xsl:if>
										<xsl:if test="corecomEBO:ItemServiceCharacteristics/corecomEBO:FieldReplacableIndicator!= ''">
											<xsdLocal:FieldReplaceable>
												<xsl:choose>
													<xsl:when test="corecomEBO:ItemServiceCharacteristics/corecomEBO:FieldReplacableIndicator = true()">
														<xsl:text>Y</xsl:text>
													</xsl:when>
													<xsl:otherwise>
														<xsl:text>N</xsl:text>
													</xsl:otherwise>
												</xsl:choose>
											</xsdLocal:FieldReplaceable>
										</xsl:if>
										<xsl:if test='$xslProductSourcePIP="MDM"'>
											<xsdLocal:ParentProduct>
												<xsl:value-of select="corecomEBO:RelatedItem/corecom:Identification/corecom:ID"/>
											</xsdLocal:ParentProduct>
										</xsl:if>
										<xsl:if test="corecomEBO:ItemServiceCharacteristics/corecomEBO:DefectiveReturnRequiredIndicator!= ''">
											<xsdLocal:ReturnIfDefective>
												<xsl:choose>
													<xsl:when test="corecomEBO:ItemServiceCharacteristics/corecomEBO:DefectiveReturnRequiredIndicator = true()">
														<xsl:text>Y</xsl:text>
													</xsl:when>
													<xsl:otherwise>
														<xsl:text>N</xsl:text>
													</xsl:otherwise>
												</xsl:choose>
											</xsdLocal:ReturnIfDefective>
										</xsl:if>
										<!-- End of Product Detail Service Characteristics -->
										<!-- Product Logistics Characteristics -->
										<xsdLocal:ItemSize>
											<xsl:choose>
												<xsl:when test='$xslProductSourcePIP="MDM"'>
													<xsl:value-of select="corecomEBO:ItemSpecificationGroup/corecom:SpecificationGroup/corecom:Specification[corecom:Name='Item_Size']/corecom:ValueNumeric"/>
												</xsl:when>
												<xsl:otherwise>
													<xsl:value-of select="corecomEBO:ItemPhysicalCharacteristics/corecomEBO:WidthMeasure"/>
												</xsl:otherwise>
											</xsl:choose>
										</xsdLocal:ItemSize>
										<xsl:if test="corecomEBO:ItemLogisticCharacteristics/corecomEBO:ModeOfTransportCodeCode!= ''">
											<xsdLocal:ShipMethod>
												<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/ITEM_LOGISTICS_SHIP_METHOD.dvm",$DVMTargetCol,corecomEBO:ItemLogisticCharacteristics/corecomEBO:ModeOfTransportCodeCode,$DVMSourceCol,corecomEBO:ItemLogisticCharacteristics/corecomEBO:ModeOfTransportCodeCode)'/>
											</xsdLocal:ShipMethod>
										</xsl:if>
										<xsl:if test="corecomEBO:ItemLogisticCharacteristics/corecom:CarrierPartyReference/corecom:PartyIdentification/corecom:ID!= ''">
											<xsdLocal:ShipCarrier>
												<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/ITEM_LOGISTICS_SHIP_CARRIER.dvm",$DVMTargetCol,corecomEBO:ItemLogisticCharacteristics/corecom:CarrierPartyReference/corecom:PartyIdentification/corecom:ID,$DVMSourceCol,corecomEBO:ItemLogisticCharacteristics/corecom:CarrierPartyReference/corecom:PartyIdentification/corecom:ID)'/>
											</xsdLocal:ShipCarrier>
										</xsl:if>
										<xsl:if test="corecomEBO:ItemLogisticCharacteristics/corecomEBO:BelowReorderQuantityAllocationAllowedIndicator!= ''">
											<xsdLocal:AllocateBelowSafetyFlag>
												<xsl:choose>
													<xsl:when test="corecomEBO:ItemLogisticCharacteristics/corecomEBO:BelowReorderQuantityAllocationAllowedIndicator = true()">
														<xsl:text>Y</xsl:text>
													</xsl:when>
													<xsl:otherwise>
														<xsl:text>N</xsl:text>
													</xsl:otherwise>
												</xsl:choose>
											</xsdLocal:AllocateBelowSafetyFlag>
										</xsl:if>
										<xsl:if test="corecomEBO:ItemLogisticCharacteristics/corecomEBO:AutomaticSubstitutionAllowedIndicator!= ''">
											<xsdLocal:AutoSubstituteFlag>
												<xsl:choose>
													<xsl:when test="corecomEBO:ItemLogisticCharacteristics/corecomEBO:AutomaticSubstitutionAllowedIndicator = true()">
														<xsl:text>Y</xsl:text>
													</xsl:when>
													<xsl:otherwise>
														<xsl:text>N</xsl:text>
													</xsl:otherwise>
												</xsl:choose>
											</xsdLocal:AutoSubstituteFlag>
										</xsl:if>
										<!-- End of Logistics Characteristics -->
										<!-- Product Detail Additional Information -->
										<xsl:if test="corecomEBO:AccessPassKey!= ''">
											<xsdLocal:DivisionCodeSAP>
												<xsl:value-of select="corecomEBO:AccessPassKey"/>
											</xsdLocal:DivisionCodeSAP>
										</xsl:if>
										<xsl:if test="corecom:ItemIdentification/corecom:GTIN!= ''">
											<xsdLocal:GlobalProductIdentifier>
												<xsl:value-of select="corecom:ItemIdentification/corecom:GTIN"/>
											</xsdLocal:GlobalProductIdentifier>
										</xsl:if>
										<!--xsdLocal:ModelProduct -->
										<xsl:if test="corecomEBO:ItemPurchasingCharacteristics/corecomEBO:TaxableIndicator!= ''">
											<xsdLocal:TaxableFlag>
												<xsl:choose>
													<xsl:when test="corecomEBO:ItemPurchasingCharacteristics/corecomEBO:TaxableIndicator = true()">
														<xsl:text>Y</xsl:text>
													</xsl:when>
													<xsl:otherwise>
														<xsl:text>N</xsl:text>
													</xsl:otherwise>
												</xsl:choose>
											</xsdLocal:TaxableFlag>
										</xsl:if>
										<xsl:if test="corecomEBO:ItemManufacturingCharacteristics/corecomEBO:SumComponentTaxIndicator!= ''">
											<xsdLocal:TaxSubcomponentFlag>
												<xsl:choose>
													<xsl:when test="corecomEBO:ItemManufacturingCharacteristics/corecomEBO:SumComponentTaxIndicator = true()">
														<xsl:text>Y</xsl:text>
													</xsl:when>
													<xsl:otherwise>
														<xsl:text>N</xsl:text>
													</xsl:otherwise>
												</xsl:choose>
											</xsdLocal:TaxSubcomponentFlag>
										</xsl:if>
										<xsl:if test="corecomEBO:ProjectResourceIndicator!= ''">
											<xsdLocal:ProjectResourceFlag>
												<xsl:choose>
													<xsl:when test="corecomEBO:ProjectResourceIndicator = true()">
														<xsl:text>Y</xsl:text>
													</xsl:when>
													<xsl:otherwise>
														<xsl:text>N</xsl:text>
													</xsl:otherwise>
												</xsl:choose>
											</xsdLocal:ProjectResourceFlag>
										</xsl:if>
										<xsl:if test="corecomEBO:IncentiveCompensationAvailableIndicator!= ''">
											<xsdLocal:Compensatable>
												<xsl:choose>
													<xsl:when test="corecomEBO:IncentiveCompensationAvailableIndicator = true()">
														<xsl:text>Y</xsl:text>
													</xsl:when>
													<xsl:otherwise>
														<xsl:text>N</xsl:text>
													</xsl:otherwise>
												</xsl:choose>
											</xsdLocal:Compensatable>
										</xsl:if>
										<!-- End of Product Detail Additional Information -->
										<xsl:if test="corecomEBO:ItemServiceCharacteristics/corecomEBO:SpecialRatingTypeCode!= ''">
											<xsdLocal:SpecialRatingType>
												<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/ITEM_BILLING_SPECIAL_RATING_TYPE.dvm",$DVMTargetCol,corecomEBO:ItemServiceCharacteristics/corecomEBO:SpecialRatingTypeCode,$DVMSourceCol,corecomEBO:ItemServiceCharacteristics/corecomEBO:SpecialRatingTypeCode)'/>
											</xsdLocal:SpecialRatingType>
										</xsl:if>
										<xsl:if test="corecomEBO:ItemServiceCharacteristics/corecomEBO:SpecialRatingMaximumQuantity!= ''">
											<xsdLocal:SpecialRatingMaxItems>
												<xsl:value-of select="corecomEBO:ItemServiceCharacteristics/corecomEBO:SpecialRatingMaximumQuantity"/>
											</xsdLocal:SpecialRatingMaxItems>
										</xsl:if>
										<xsl:if test='$xslProductSourcePIP="MDM"'>
											<xsdLocal:SuccessDependency>
												<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/ITEM_SUCCESS_DEPENDENCY.dvm",$DVMTargetCol,corecomEBO:ItemOrderManagementCharacteristics/corecomEBO:FulfillmentSuccessCode,$DVMSourceCol,corecomEBO:ItemOrderManagementCharacteristics/corecomEBO:FulfillmentSuccessCode)'/>
											</xsdLocal:SuccessDependency>
										</xsl:if>
										<xsl:if test='$xslProductSourcePIP="MDM"'>
											<xsl:message>
												<xsl:copy-of select="$xslProductSourcePIP"/>
											</xsl:message>
											<xsl:if test="corecomEBO:CompoundItemIndicator!= ''">
												<xsdLocal:CompoundProductFlag>
													<xsl:choose>
														<xsl:when test="corecomEBO:CompoundItemIndicator = true()">
															<xsl:text>Y</xsl:text>
														</xsl:when>
														<xsl:otherwise>
															<xsl:text>N</xsl:text>
														</xsl:otherwise>
													</xsl:choose>
												</xsdLocal:CompoundProductFlag>
											</xsl:if>
										</xsl:if>
										<xsl:if test='$xslProductSourcePIP="MDM"'>
											<xsdLocal:ProductLevel>
												<xsl:value-of select="corecomEBO:Level"/>
											</xsdLocal:ProductLevel>
										</xsl:if>
										<xsl:if test='$xslProductSourcePIP="MDM"'>
											<xsdLocal:Format>
												<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/ITEM_FORMAT.dvm",$DVMTargetCol,corecomEBO:ItemPhysicalCharacteristics/corecomEBO:TrainingFormatCode,$DVMSourceCol,corecomEBO:ItemPhysicalCharacteristics/corecomEBO:TrainingFormatCode)'/>
											</xsdLocal:Format>
										</xsl:if>
										<!-- Start Tax Code for Siebel R2.0 by Arup on 13/11/2015 -->
										<!--xsl:variable name="VarTaxCode" select="corecomEBO:ItemSpecificationGroup/corecom:SpecificationGroup[corecom:Name='Rate_Plan']/corecom:Specification[corecom:Name='Tax_Code']/corecom:ValueText"/-->
										<xsl:variable name="VarTaxCode" select="fn:distinct-values(/coreeboitem:SyncItemListEBM/coreeboitem:DataArea/coreeboitem:SyncItemList/corecomEBO:ItemSpecificationGroup/corecom:SpecificationGroup[corecom:Name='Rate_Plan'][1]/corecom:Specification[corecom:Name='Tax_Code']/corecom:ValueText)"/>
										<xsl:if test="$VarTaxCode != '' ">
											<xsdLocal:TSTaxCode>
												<xsl:value-of select="$VarTaxCode"/>
											</xsdLocal:TSTaxCode>
										</xsl:if>
										<!-- End Tax Code for Siebel R2.0 by Arup on 13/11/2015 -->
										<!-- Start Service ID Prefix for Siebel & OPH for R4.0 as part of B2B GAP 10 Ari 19 Feb 2016-->
										<xsl:variable name="ServiceIDVar" select="corecomEBO:Custom/coreEBOcust:TSServiceIdPrefix"/>
										<xsl:if test="$ServiceIDVar != '' ">
											<xsdLocal:TSServiceIdPrefix>
												<xsl:value-of select="$ServiceIDVar"/>
											</xsdLocal:TSServiceIdPrefix>
										</xsl:if>
										<!-- Start DI-1882  by surendra M-->
										<xsl:if test="corecomEBO:Custom/coreEBOcust:TSMoveFlag!= ''">
											<xsdLocal:TSMoveFlag>
												<xsl:choose>
													<xsl:when test="corecomEBO:Custom/coreEBOcust:TSMoveFlag = 'Y'">
														<xsl:text>Y</xsl:text>
													</xsl:when>
													<xsl:otherwise>
														<xsl:text>N</xsl:text>
													</xsl:otherwise>
												</xsl:choose>
											</xsdLocal:TSMoveFlag>
										</xsl:if>
										<!-- End DI-1882  by surendra M-->
										<!-- Start DI-1894 changes for siebel by Surendra on 05/06/2017 -->
										<xsl:if test="corecomEBO:Custom/coreEBOcust:TSReportFlag != ''">
											<xsdLocal:TSReportFlag>
												<xsl:choose>
													<xsl:when test="corecomEBO:Custom/coreEBOcust:TSReportFlag = 'Y'">
														<xsl:text>Y</xsl:text>
													</xsl:when>
													<xsl:otherwise>
														<xsl:text>N</xsl:text>
													</xsl:otherwise>
												</xsl:choose>
											</xsdLocal:TSReportFlag>
										</xsl:if>
										<!-- End DI-1894 changes for siebel by Surendra on 17/05/2017 -->
										<!-- Start DI-2184 changes in AIA for Siebel by Ashwath Prabhu on 27/07/2017 -->
										<xsl:if test="corecomEBO:Custom/coreEBOcust:TSTransferFlag != ''">
											<xsdLocal:TSTransferFlag>
												<xsl:choose>
													<xsl:when test="corecomEBO:Custom/coreEBOcust:TSTransferFlag = 'Y'">
														<xsl:text>Y</xsl:text>
													</xsl:when>
													<xsl:otherwise>
														<xsl:text>N</xsl:text>
													</xsl:otherwise>
												</xsl:choose>
											</xsdLocal:TSTransferFlag>
										</xsl:if>
										<!-- End DI-2184 changes in AIA for Siebel by Ashwath Prabhu on 27/07/2017 -->
										<!-- Start C2BSRDD-74 changes in AIA for R18.1 by Ashwath Prabhu on 10/10/2017-->
										<xsl:variable name="TSProductCategoryVar" select="corecomEBO:Custom/coreEBOcust:TSProductCategory"/>
										<xsl:if test="$TSProductCategoryVar != '' ">
											<xsdLocal:TSProductCategory>
												<xsl:value-of select="$TSProductCategoryVar"/>
											</xsdLocal:TSProductCategory>
										</xsl:if>
										<xsl:variable name="TSProductSub-CategoryVar" select="corecomEBO:Custom/coreEBOcust:TSProductSub-Category"/>
										<xsl:if test="$TSProductSub-CategoryVar != '' ">
											<xsdLocal:TSProductSub-Category>
												<xsl:value-of select="$TSProductSub-CategoryVar"/>
											</xsdLocal:TSProductSub-Category>
										</xsl:if>
										<!-- End C2BSRDD-74 changes in AIA for R18.1 by Ashwath Prabhu on 10/10/2017 -->
										<!-- Start MDU-376 changes in AIA for R18.2 by Ashwath Prabhu on 27/11/2017-->
										<xsl:variable name="TSMDUServiceTypeVar" select="corecomEBO:Custom/coreEBOcust:TSMDUServiceType"/>
										<xsl:if test="$TSMDUServiceTypeVar != '' ">
											<xsdLocal:TSMDUServiceType>
												<xsl:value-of select="$TSMDUServiceTypeVar"/>
											</xsdLocal:TSMDUServiceType>
										</xsl:if>
										<!-- End MDU-376 changes in AIA for R18.2 by Ashwath Prabhu on 27/11/2017-->
										<!-- ARFT Changes for non suspend flag by surendra M 21June2016-->
										<xsdLocal:TSNonSuspendFlag>
											<xsl:choose>
												<xsl:when test="corecomEBO:Custom/coreEBOcust:TSNonSuspendFlag = 'Y'">
													<xsl:text>Y</xsl:text>
												</xsl:when>
												<xsl:otherwise>
													<xsl:text>N</xsl:text>
												</xsl:otherwise>
											</xsl:choose>
										</xsdLocal:TSNonSuspendFlag>
										<!-- ARFT Changes for non suspend flag by surendra M 21June2016 -->
										<!-- End Service ID Prefix for Siebel & OPH for R4.0 as part of B2B GAP 10 Ari 19 Feb 2016 -->
										<!-- Start R1.3 Drop 2 Code Merge for Product Line SP & KO by Surendra on Aug 14th 2015 -->
										<!-- Added the ProductLineVar for B2B R4.0 GAP 10 change to correct the sequence -->
										<xsl:variable name="ProductLineVar" select="corecomEBO:ItemClassification/corecomEBO:ClassificationCode[@listID='Product_Line']"/>
										<xsl:if test="$ProductLineVar != '' ">
											<xsdLocal:TSProductLine>
												<xsl:value-of select="$ProductLineVar"/>
											</xsdLocal:TSProductLine>
										</xsl:if>
										<!-- End B2B GAP 10 -->
										<!-- End R1.3 Drop 2 Code Merge for Product Line SP & KO by Surendra on Aug 14th 2015 -->
										<xsdLocal:ListOfProductInvloc>
											<xsdLocal:ProductInvloc>
												<xsdLocal:IntegrationId>
													<xsl:value-of select="corecomEBO:InventoryLocation[1]/corecom:Identification/corecom:BusinessComponentID"/>
												</xsdLocal:IntegrationId>
												<xsdLocal:InventoryLocationID>
													<xsl:value-of select='xref:lookupXRef("oramds:/apps/AIAMetaData/xref/INVENTORY_LOCATION_ID.xref",$XREFTargetCol,corecomEBO:InventoryLocation[1]/corecom:Identification/corecom:BusinessComponentID,$XREFSourceCol,true())'/>
												</xsdLocal:InventoryLocationID>
											</xsdLocal:ProductInvloc>
										</xsdLocal:ListOfProductInvloc>
										<xsl:if test="$xslProductSourcePIP = 'MDM'">
											<!-- Commented for bug 12397853<xsl:if test="$ProductLineVar != '' "><xsdLocal:ListOfSwiAdminProductLineVbc><xsdLocal:ProductLineVbc><xsdLocal:ProductLineName><xsl:value-of select="$ProductLineVar"/></xsdLocal:ProductLineName></xsdLocal:ProductLineVbc></xsdLocal:ListOfSwiAdminProductLineVbc></xsl:if>end of comment for bug 12397853-->
											<!--Defect Fix - 9577048 begins -->
											<xsdLocal:ListOfSwiIssProductAttributesVbc>
												<xsl:for-each select="corecomEBO:ItemClassification/corecomEBO:ItemClassificationSpecificationOverride">
													<xsdLocal:ProductAttributesVbc>
														<!--MOBREL17.2 Code Changes for AttributeName and Name field changes for Mobile Delivery 17.2 Release Sprint 11 starts here -->
														<!--<xsdLocal:ListOfSwiIssAttributesLangVbc><xsdLocal:AttributesLangVbc><xsdLocal:DisplayName><xsl:value-of select="corecom:Identification/corecom:ID"/></xsdLocal:DisplayName><xsdLocal:Lang><xsl:text>ENU</xsl:text></xsdLocal:Lang></xsdLocal:AttributesLangVbc></xsdLocal:ListOfSwiIssAttributesLangVbc>-->
														<!--MOBREL17.2 Code Changes for AttributeName and Name field changes for Mobile Delivery 17.2 Release Sprint 11 ends here -->
														<xsdLocal:Id>
															<xsl:value-of select="corecom:Identification/corecom:ApplicationObjectKey/corecom:ID"/>
														</xsdLocal:Id>
														<xsdLocal:AttributeName>
															<!--<xsl:value-of select="corecom:Identification/corecom:ID"/>-->
															<xsl:choose>
																<xsl:when test="corecom:Identification/corecom:ContextID != ''">
																	<xsl:value-of select="corecom:Identification/corecom:ContextID"/>
																</xsl:when>
																<xsl:otherwise>
																	<!--Defect fix 16049714-->
																	<!--MOBREL17.2 Code Changes for AttributeName and Name field changes for Mobile Delivery 17.2 Release Sprint 11 starts here -->
																	<xsl:value-of select="corecom:Identification/corecom:ID"/>
																	<!-- <xsl:value-of select="ns7:Custom/corecomEBO:TSAttributeName"/>-->
																	<!--MOBREL17.2 Code Changes for AttributeName and Name field changes for Mobile Delivery 17.2 Release Sprint 11 ends here -->
																	<!--<xsl:value-of select="aia:getServiceProperty('{http://xmlns.oracle.com/ABCSImpl/PIM/Core/SyncItemCatalogCategoryPIMReqABCSImpl/V1}SyncItemCatalogCategoryPIMReqABCSImpl', 'DefaultValueSetID', false())"/> -->
																</xsl:otherwise>
															</xsl:choose>
														</xsdLocal:AttributeName>
														<xsdLocal:DefaultValue>
															<xsl:value-of select="corecomEBO:DefaultValue"/>
														</xsdLocal:DefaultValue>
														<xsdLocal:Description>
															<xsl:value-of select="corecomEBO:Description"/>
														</xsdLocal:Description>
														<xsl:if test="corecomEBO:HiddenIndicator!= ''">
															<xsdLocal:HiddenFlag>
																<xsl:choose>
																	<xsl:when test="corecomEBO:HiddenIndicator = true()">
																		<xsl:text>Y</xsl:text>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:text>N</xsl:text>
																	</xsl:otherwise>
																</xsl:choose>
															</xsdLocal:HiddenFlag>
														</xsl:if>
														<xsdLocal:Name>
															<!--Code Changes for AttributeName and Name field changes for Mobile Delivery 17.2 Release Sprint 11 starts here -->
															<xsl:value-of select="corecom:Identification/corecom:ID"/>
															<!--xsl:value-of select="ns7:Custom/corecomEBO:TSAttributeName"/-->
															<!--Code Changes for AttributeName and Name field changes for Mobile Delivery 17.2 Release Sprint 11 ends here -->
														</xsdLocal:Name>
														<xsl:if test="corecomEBO:ReadOnlyIndicator!= ''">
															<xsdLocal:ReadOnlyFlag>
																<xsl:choose>
																	<xsl:when test="corecomEBO:ReadOnlyIndicator = true()">
																		<xsl:text>Y</xsl:text>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:text>N</xsl:text>
																	</xsl:otherwise>
																</xsl:choose>
															</xsdLocal:ReadOnlyFlag>
														</xsl:if>
														<xsdLocal:RejectedVal>
															<xsl:value-of select="corecomEBO:ItemClassificationSpecificationExclusion/corecom:Value"/>
														</xsdLocal:RejectedVal>
														<xsl:if test="corecomEBO:RequiredIndicator!= ''">
															<xsdLocal:RequiredFlag>
																<xsl:choose>
																	<xsl:when test="corecomEBO:RequiredIndicator = true()">
																		<xsl:text>Y</xsl:text>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:text>N</xsl:text>
																	</xsl:otherwise>
																</xsl:choose>
															</xsdLocal:RequiredFlag>
														</xsl:if>
														<xsl:if test="corecomEBO:SearchableIndicator!= ''">
															<xsdLocal:ParametricSearchFlg>
																<xsl:choose>
																	<xsl:when test="corecomEBO:SearchableIndicator = true()">
																		<xsl:text>Y</xsl:text>
																	</xsl:when>
																	<xsl:otherwise>
																		<xsl:text>N</xsl:text>
																	</xsl:otherwise>
																</xsl:choose>
															</xsdLocal:ParametricSearchFlg>
														</xsl:if>
														<!--<xsdLocal1:SequenceNumber><xsl:value-of select="corecomEBO:DisplaySequenceNumber"/></xsdLocal1:SequenceNumber><xsdLocal1:UnitofMeasure><xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/UNIT_OF_MEASURE.dvm','COMMON',corecomEBO:UOMCode,/ns0:SyncClassificationSchemeListEBM/corecom:EBMHeader/corecom:Target/corecom:ID,'')"/></xsdLocal1:UnitofMeasure><xsl:call-template name="SwiIssProductAttributeVbcExt"/>-->
													</xsdLocal:ProductAttributesVbc>
												</xsl:for-each>
											</xsdLocal:ListOfSwiIssProductAttributesVbc>
											<!--Defect Fix - 9577048 ends -->
											<xsdLocal:ListOfSwiProductCompatibility-SubjectVbc>
												<xsl:for-each select="corecomEBO:RelatedItem">
													<xsl:variable name="ObjectProduct" select="corecomEBO:RelationshipCode[@listID='Object_Product']"/>
													<xsl:for-each select="corecomEBO:ItemCompatibility">
														<xsdLocal:ProductCompatibility-SubjectVbc>
															<xsdLocal:Id>
																<xsl:value-of select="corecom:Identification/corecom:ContextID"/>
															</xsdLocal:Id>
															<xsdLocal:AdjustmentGroup>
																<xsl:value-of select="corecomEBO:GroupName"/>
															</xsdLocal:AdjustmentGroup>
															<xsdLocal:EffectiveEndDate>
																<xsl:if test="corecom:EffectiveTimePeriod/corecom:EndDateTime != ''">
																	<xsl:call-template name="ConvertEBODateTime">
																		<xsl:with-param name="EBODateTime" select="corecom:EffectiveTimePeriod/corecom:EndDateTime"/>
																	</xsl:call-template>
																</xsl:if>
															</xsdLocal:EffectiveEndDate>
															<xsdLocal:EffectiveStartDate>
																<xsl:if test="corecom:EffectiveTimePeriod/corecom:StartDateTime != ''">
																	<xsl:call-template name="ConvertEBODateTime">
																		<xsl:with-param name="EBODateTime" select="corecom:EffectiveTimePeriod/corecom:StartDateTime"/>
																	</xsl:call-template>
																</xsl:if>
															</xsdLocal:EffectiveStartDate>
															<xsdLocal:RelProduct>
																<xsl:value-of select="$ObjectProduct"/>
															</xsdLocal:RelProduct>
															<xsdLocal:RelProductClass>
																<xsl:value-of select="corecom:ClassificationReference/corecom:Name"/>
															</xsdLocal:RelProductClass>
															<xsdLocal:RelProductLine>
																<xsl:value-of select="corecom:ClassificationReference/corecom:ClassificationCodeIdentification/corecom:ContextID[@schemeID='Object_Product_Line']"/>
															</xsdLocal:RelProductLine>
															<xsdLocal:Type>
																<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/RULE_TYPE.dvm",$DVMTargetCol,corecomEBO:TypeCode,$DVMSourceCol,corecomEBO:TypeCode)'/>
															</xsdLocal:Type>
														</xsdLocal:ProductCompatibility-SubjectVbc>
													</xsl:for-each>
												</xsl:for-each>
											</xsdLocal:ListOfSwiProductCompatibility-SubjectVbc>
											<!--MLS.PRD.FEAT.04 Synchronize the Product Names (i.e. Short Description from PH) in multiple languages published from Product Hub to Siebel Product Display names- STARTS.-->
											<xsdLocal:ListOfSwiProductDetailsLangVbc>
												<xsl:for-each select="corecomEBO:ShortDescription">
													<xsl:variable name="PositionForShortDescription" select="position()"/>
													<xsdLocal:ProductDetailsLangVbc>
														<xsl:message>
															<xsl:value-of select="$PositionForShortDescription"/>
														</xsl:message>
														<xsl:message>
															<xsl:value-of select="@CommonlanguageID"/>
														</xsl:message>
														<xsdLocal:Id/>
														<xsdLocal:DisplayName>
															<xsl:value-of select="."/>
														</xsdLocal:DisplayName>
														<xsdLocal:LangCode>
															<xsl:value-of select='dvm:lookupValue("oramds:/apps/AIAMetaData/dvm/LANGUAGE_CODE.dvm",$DVMTargetCol,@CommonlanguageID,$DVMSourceCol,@CommonlanguageID)'/>
														</xsdLocal:LangCode>
														<xsdLocal:LangName>
															<xsl:value-of select="@CommonlanguageID"/>
														</xsdLocal:LangName>
													</xsdLocal:ProductDetailsLangVbc>
												</xsl:for-each>
											</xsdLocal:ListOfSwiProductDetailsLangVbc>
											<!--MLS.PRD.FEAT.04 Ends-->
											<xsl:for-each select="corecomEBO:ItemSpecificationGroup/corecom:SpecificationGroup">
												<xsl:call-template name="ProcessAttributeGroupUDA">
													<xsl:with-param name="Name" select="corecom:Name"/>
													<xsl:with-param name="DataArea" select="$DataArea_Var"/>
												</xsl:call-template>
											</xsl:for-each>
										</xsl:if>
										<xsl:call-template name="ProductDefinitionExt"/>
									</xsdLocal:ProductDefinition>
								</xsl:if>
							</xsl:for-each>
							<xsl:call-template name="ListOfProductDefinitionExt"/>
						</xsdLocal:ListOfProductDefinition>
						<xsl:call-template name="ProductIntegration"/>
					</xsdLocal:ProductIntegration>
					<xsl:call-template name="ListOfProductImportExt"/>
				</xsdLocal:ListOfProductImport>
			</tns:SWIProductImportUpsert_Input>
		</xsl:template>
		<!--  User Defined Templates  -->
		<xsl:template name="lookupOrPopulateXRef">
			<xsl:param name="xrefTableName"/>
			<xsl:param name="xrefReferenceColumnName"/>
			<xsl:param name="xrefReferenceValue"/>
			<xsl:param name="xrefColumnName"/>
			<xsl:variable name="xrefValue" select="xref:lookupXRef($xrefTableName,$xrefReferenceColumnName,$xrefReferenceValue,$xrefColumnName,false())"/>
		</xsl:template>
		<!-- Convert DateTime template Convert EBO DateTime format to Siebel -->
		<xsl:template name="ConvertEBODateTime">
			<xsl:param name="EBODateTime" select="."/>
			<xsl:choose>
				<xsl:when test="$UCTFormatEnabled = 'N'">
					<xsl:value-of select='normalize-space(concat(string(substring($EBODateTime,6.0,2.0)),"/",string(substring($EBODateTime,9.0,2.0)),"/",string(substring($EBODateTime,1.0,4.0))," ",string(substring($EBODateTime,12.0,8.0))))'/>
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="$EBODateTime"/>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:template>
		<xsl:template name="FormatDate">
			<xsl:param name="DateTime"/>
			<!-- convert 1997-08-06T08:27:53.0 to 08/06/1997 08:27:53 -->
			<xsl:variable name="year">
				<xsl:value-of select="substring-before($DateTime,'-')"/>
			</xsl:variable>
			<xsl:variable name="mo-temp">
				<xsl:value-of select="substring-after($DateTime,'-')"/>
			</xsl:variable>
			<xsl:variable name="mo">
				<xsl:value-of select="substring-before($mo-temp,'-')"/>
			</xsl:variable>
			<xsl:variable name="day-temp">
				<xsl:value-of select="substring-after($mo-temp,'-')"/>
			</xsl:variable>
			<xsl:variable name="day">
				<xsl:value-of select="substring-before($day-temp,'T')"/>
			</xsl:variable>
			<xsl:variable name="time-temp">
				<xsl:value-of select="substring-after($day-temp,'T')"/>
			</xsl:variable>
			<xsl:variable name="hh">
				<xsl:value-of select="substring-before($time-temp,':')"/>
			</xsl:variable>
			<xsl:variable name="mm-temp">
				<xsl:value-of select="substring-after($time-temp,':')"/>
			</xsl:variable>
			<xsl:variable name="mm">
				<xsl:value-of select="substring-before($mm-temp,':')"/>
			</xsl:variable>
			<xsl:variable name="ss-temp">
				<xsl:value-of select="substring-after($mm-temp,':')"/>
			</xsl:variable>
			<xsl:variable name="ss">
				<xsl:value-of select="substring-before($ss-temp,'.')"/>
			</xsl:variable>
			<xsl:variable name="sTZD">
				<xsl:value-of select="substring-after($ss-temp,'.')"/>
			</xsl:variable>
			<xsl:value-of select="$mo"/>
			<xsl:value-of select="'/'"/>
			<xsl:value-of select="$day"/>
			<xsl:value-of select="'/'"/>
			<xsl:value-of select="$year"/>
			<xsl:value-of select="' '"/>
			<xsl:value-of select="$hh"/>
			<xsl:value-of select="':'"/>
			<xsl:value-of select="$mm"/>
			<xsl:value-of select="':'"/>
			<xsl:value-of select="$ss"/>
		</xsl:template>
	</xsl:stylesheet>