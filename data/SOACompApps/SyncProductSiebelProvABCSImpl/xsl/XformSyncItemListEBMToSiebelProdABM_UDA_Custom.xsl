<?xml version = '1.0' encoding = 'UTF-8'?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="oramds:/apps/AIAMetaData/AIAComponents/EnterpriseObjectLibrary/Core/EBO/Item/V2/ItemEBM.xsd"/>
      <rootElement name="SyncItemListEBM" namespace="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/Item/V2"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="oramds:/apps/AIAMetaData/AIAComponents/ApplicationObjectLibrary/Siebel/V1/wsdls/SWIProductIntegrationIO.wsdl"/>
      <rootElement name="SWIProductImportUpsert_Input" namespace="http://siebel.com/asi/V0"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.3.0(build 070615.0525) AT [MON MAY 21 22:19:44 IST 2007]. -->
?>
<xsl:stylesheet version="2.0" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:coreeboitem="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/Item/V2" xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:corecomEBO="http://xmlns.oracle.com/EnterpriseObjects/Core/CommonEBO/V1" xmlns:svcdoc="http://xmlns.oracle.com/Services/Documentation/V1" xmlns:ns1="http://schemas.xmlsoap.org/ws/2003/03/addressing" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:coreEBOcust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/CommonEBO/V1" xmlns:coreitemcust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/EBO/Item/V2" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:xacml-context="urn:oasis:names:tc:xacml:2.0:context:schema:cd:04" xmlns:corecomcust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/Common/V2" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:xsdLocal="http://www.siebel.com/xml/SWIProductIntegrationIO" xmlns:xacml="urn:oasis:names:tc:xacml:2.0:policy:schema:cd:04" xmlns:corecom="http://xmlns.oracle.com/EnterpriseObjects/Core/Common/V2" exclude-result-prefixes="xsl coreeboitem xsd corecomEBO svcdoc ns1 coreEBOcust coreitemcust xacml-context corecomcust xacml corecom xsdLocal bpws ehdr hwf xp20 xref ora ids orcl" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue">
    <xsl:variable name="enableCustomExtensions" select="false()"/>
    <!-- we deliver this template which traverses the tree and just copies everything to output -->
    <xsl:template match="@*|*" mode="ext">
        <xsl:copy>
            <!-- <xsl:apply-templates select="@*|node()" mode="ext"/> does not work.  seems like an xslparser bug. -->
            <!-- workaround is to split it into two separate apply-templates -->
            <xsl:apply-templates select="@*" mode="ext"/>
            <xsl:apply-templates select="node()" mode="ext"/>
        </xsl:copy>
    </xsl:template>
    <!-- customers can add their own extension templates here to match anything and modify as they need -->
    <!-- this template adds a Custom element inside the result2 element -->
 
    <!-- This is only for example it doesnt get activated unless enableCustomExtensions is true -->
 
    <xsl:template match="xsdLocal:BusinessUnitId" mode="ext">
        <xsl:copy>
            <xsl:apply-templates select="@*" mode="ext"/>
            <xsl:apply-templates select="node()" mode="ext"/>
        </xsl:copy>
        <!-- new custom content -->
        <xsl:for-each select="/coreeboitem:SyncItemListEBM/coreeboitem:DataArea/coreeboitem:SyncItemList/corecomEBO:ItemSpecificationGroup">
            <xsl:if test="corecom:SpecificationGroup/corecom:Name = 'ItemDetailDesc'">
                <xsdLocal:Description>
                    <xsl:for-each select="corecom:SpecificationGroup/corecom:Specification">
                        <xsl:if test="corecom:Name = 'DescriptionSource'">
                            <xsl:value-of select="corecom:ValueText"/>
                        </xsl:if>
                        <xsl:if test="corecom:Name = 'Label'">
                            <xsl:value-of select="corecom:ValueText"/>
                        </xsl:if>
                        <xsl:if test="corecom:Name = 'AttachedFile'">
                            <xsl:value-of select="corecom:ValueText"/>
                        </xsl:if>
                        <xsl:if test="corecom:Name = 'DisplayMode'">
                            <xsl:value-of select="corecom:ValueText"/>
                        </xsl:if>
                        <xsl:if test="corecom:Name = 'Sequence'">
                            <xsl:value-of select="corecom:ValueNumeric"/>
                        </xsl:if>
                    </xsl:for-each>
                </xsdLocal:Description>
            </xsl:if>
        </xsl:for-each>
    </xsl:template>
</xsl:stylesheet>
