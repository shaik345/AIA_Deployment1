<?xml version = '1.0' encoding = 'UTF-8'?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="oramds:/apps/AIAMetaData/AIAComponents/EnterpriseObjectLibrary/Industry/Communications/EBO/TroubleTicket/V1/TroubleTicketEBM.xsd"/>
      <rootElement name="UpdateTroubleTicketEBM" namespace="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/TroubleTicket/V1"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="oramds:/apps/AIAMetaData/AIAComponents/ApplicationObjectLibrary/Siebel/V1/wsdls/SWITroubleTicketIO.wsdl"/>
      <rootElement name="SWITroubleTicketInsertOrUpdate_Input" namespace="http://siebel.com/asi/"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.4.0(build 080718.0645) AT [FRI DEC 18 15:27:06 IST 2009]. -->
?>
<xsl:stylesheet version="1.0" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:svcdoc="http://xmlns.oracle.com/Services/Documentation/V1" xmlns:corecomEBO="http://xmlns.oracle.com/EnterpriseObjects/Core/CommonEBO/V1" xmlns:tns="http://siebel.com/asi/" xmlns:wsa="http://schemas.xmlsoap.org/ws/2003/03/addressing" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:xsd1="http://www.siebel.com/xml/SWITroubleTicketIO" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xacml-context="urn:oasis:names:tc:xacml:2.0:context:schema:cd:04" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:corecomcust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/Common/V2" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:updtt="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/TroubleTicket/V1" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:xacml="urn:oasis:names:tc:xacml:2.0:policy:schema:cd:04" xmlns:corecom="http://xmlns.oracle.com/EnterpriseObjects/Core/Common/V2" xmlns:coretroubleticketcust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/EBO/TroubleTicket/V1" xmlns:aia="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.core.xpath.AIAFunctions" xmlns:aiacommsdate="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.industry.comms.util.AIAGetDateOffset" exclude-result-prefixes="xsl xsd svcdoc corecomEBO wsa xacml-context corecomcust aia aiacommsdate updtt xacml corecom coretroubleticketcust tns soap xsd1 soapenc bpws ehdr hwf xp20 xref ora ids orcl" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue">
<xsl:import href="Xform_UpdateTroubleTicketEBM_to_SWITroubleTicketUpsert_Custom.xsl"/> 
  <xsl:variable name="DVMSourceCol" select="'COMMON'"/>
  <xsl:variable name="XREFSourceCol" select="'COMMON'"/>
  <xsl:variable name="TargetSystemID">

    <xsl:choose>
      <xsl:when test="boolean(/updtt:UpdateTroubleTicketEBM/corecom:EBMHeader/corecom:Target/corecom:ID/text())">
        <xsl:value-of select="/updtt:UpdateTroubleTicketEBM/corecom:EBMHeader/corecom:Target/corecom:ID"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="aia:getServiceProperty('{http://xmlns.oracle.com/ABCSImpl/Siebel/Industry/Comms/UpdateTroubleTicketSiebelCommsProvABCSImpl/V1}UpdateTroubleTicketSiebelCommsProvABCSImpl','Default.SystemID',true())"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:variable>
<xsl:variable name="OrderOriginatingSystemCode">
            <xsl:value-of select="/updtt:UpdateTroubleTicketEBM/updtt:DataArea/updtt:UpdateTroubleTicket/updtt:OrderFailure[1]/corecom:SalesOrderLineReference/corecom:SalesOrderIdentification/corecom:ID/@schemeAgencyID"/>

</xsl:variable>  
    <xsl:variable name="DVMTargetCol" select="$TargetSystemID"/>
  <xsl:variable name="XREFTargetCol" select="$OrderOriginatingSystemCode"/>
  <xsl:template match="/">
    <tns:SWITroubleTicketInsertOrUpdate_Input>
      <xsd1:UTCCanonical>Y</xsd1:UTCCanonical>
      <xsd1:ListOfSWITroubleTicketIO>
        <xsd1:TroubleTicket>
          <xsd1:Id>
            <xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/TROUBLETICKET_TROUBLETICKETID.xref',$XREFSourceCol,/updtt:UpdateTroubleTicketEBM/updtt:DataArea/updtt:UpdateTroubleTicket/corecom:Identification/corecom:BusinessComponentID,$DVMTargetCol,false())"/>
          </xsd1:Id>
          <xsl:variable name="StatusVar">
              <xsl:if test="boolean(/updtt:UpdateTroubleTicketEBM/updtt:DataArea/updtt:UpdateTroubleTicket/corecom:Status/corecom:Code/text())">
                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/TROUBLETICKET_STATUS.dvm',$DVMSourceCol,/updtt:UpdateTroubleTicketEBM/updtt:DataArea/updtt:UpdateTroubleTicket/corecom:Status/corecom:Code,$DVMTargetCol,'')"/>
              </xsl:if>
            </xsl:variable>
            <xsl:if test="$StatusVar!=''">
                <xsd1:Status>
                    <xsl:value-of select="$StatusVar"/>
                </xsd1:Status>
            </xsl:if>
            <xsd1:ListOfSWIOrderFailure>
            <xsl:for-each select="/updtt:UpdateTroubleTicketEBM/updtt:DataArea/updtt:UpdateTroubleTicket/updtt:OrderFailure">
              <xsl:variable name="ApplicationOrderID">
                <xsl:call-template name="IdentifyApplicationID">
                  <xsl:with-param name="XREFSourceCol" select="$XREFSourceCol"/>
                  <xsl:with-param name="XREFTargetCol" select="$XREFTargetCol"/>
                  <xsl:with-param name="ApplicationID" select="corecom:SalesOrderLineReference/corecom:SalesOrderIdentification/corecom:ApplicationObjectKey/corecom:ID[@schemeID='SALESORDER_ID' and @schemeAgencyID=$OrderOriginatingSystemCode]"/>
                  <xsl:with-param name="CommonID" select="corecom:SalesOrderLineReference/corecom:SalesOrderIdentification/corecom:BusinessComponentID"/>
                  <xsl:with-param name="XREFTableName" select="'oramds:/apps/AIAMetaData/xref/SALESORDER_ID.xref'"/>
                </xsl:call-template>
              </xsl:variable>
              <xsd1:SWIOrderFailure>
                <xsd1:ApplicationErrorCode>
                  <xsl:value-of select="substring(corecom:Failure/corecom:Status/corecom:ReasonCode,1,100)"/>
                </xsd1:ApplicationErrorCode>
                <xsl:call-template name="AreaOfFailure">
                  <xsl:with-param name="DVMSourceCol" select="$DVMSourceCol"/>
                  <xsl:with-param name="DVMTargetCol" select="$DVMTargetCol"/>
                  <xsl:with-param name="FailureSystemCode" select="corecom:Failure/corecom:SystemCode"/>
                </xsl:call-template>
                <xsd1:CommonOrderId>
                  <xsl:choose>
                    <xsl:when test="boolean(corecom:SalesOrderLineReference/corecom:SalesOrderIdentification/corecom:BusinessComponentID/text())">
                      <xsl:value-of select="corecom:SalesOrderLineReference/corecom:SalesOrderIdentification/corecom:BusinessComponentID"/>
                    </xsl:when>
                    <xsl:otherwise>
                      <xsl:choose>
                        <xsl:when test="$ApplicationOrderID!=''">
                          <xsl:value-of select="$ApplicationOrderID"/>
                        </xsl:when>
                        <xsl:otherwise>
                          <xsl:value-of select="'N/A'"/>
                        </xsl:otherwise>
                      </xsl:choose>
                    </xsl:otherwise>
                  </xsl:choose>
                </xsd1:CommonOrderId>
                <xsl:variable name="ApplicationOrderItemID">
                    <xsl:call-template name="IdentifyApplicationID">
                        <xsl:with-param name="XREFSourceCol" select="$XREFSourceCol"/>
                        <xsl:with-param name="XREFTargetCol" select="$XREFTargetCol"/>
                        <xsl:with-param name="ApplicationID" select="corecom:SalesOrderLineReference/corecom:SalesOrderLineIdentification/corecom:ApplicationObjectKey/corecom:ID[@schemeID='SALESORDER_LINEID' and @schemeAgencyID=$OrderOriginatingSystemCode]"/>
                        <xsl:with-param name="CommonID" select="corecom:SalesOrderLineReference/corecom:SalesOrderLineIdentification/corecom:BusinessComponentID"/>
                        <xsl:with-param name="XREFTableName" select="'oramds:/apps/AIAMetaData/xref/SALESORDER_LINEID.xref'"/>
                    </xsl:call-template>
                </xsl:variable>
                <xsl:variable name="OrderLineID">
                    <xsl:choose>
                        <xsl:when test="boolean(corecom:SalesOrderLineReference/corecom:SalesOrderLineIdentification/corecom:BusinessComponentID/text())">
                            <xsl:value-of select="corecom:SalesOrderLineReference/corecom:SalesOrderLineIdentification/corecom:BusinessComponentID"/>
                        </xsl:when>
                        <xsl:otherwise>
                           <xsl:value-of select="$ApplicationOrderItemID"/>
                        </xsl:otherwise>
                    </xsl:choose>
                </xsl:variable>
                <xsd1:CommonOrderItemId>
                <xsl:choose>
                    <xsl:when test="$OrderLineID!=''">
                        <xsl:value-of select="$OrderLineID"/>
                    </xsl:when>
                    <xsl:otherwise>
                        <xsl:value-of select="concat('{key # ',orcl:generate-guid(),'}')"/>
                    </xsl:otherwise>
                </xsl:choose>
                </xsd1:CommonOrderItemId>
                <xsd1:FailureInformation>
                  <xsl:value-of select="substring(corecom:Failure/corecom:Status/corecom:Description,1,2000)"/>
                </xsd1:FailureInformation>
                <xsd1:FailureSystemCode>
                  <xsl:value-of select="corecom:Failure/corecom:SystemCode"/>
                </xsd1:FailureSystemCode>
                <xsd1:FulfillmentSystemTransactionId>
                  <xsl:value-of select="corecom:SalesOrderLineReference/corecom:SalesOrderIdentification/corecom:AlternateObjectKey/corecom:ID[@schemeID='FULFILLMENTSYSTEM_ID']"/>
                </xsd1:FulfillmentSystemTransactionId>
                <xsd1:OrderId>
                  <xsl:value-of select="$ApplicationOrderID"/>
                </xsd1:OrderId>
                <xsd1:OrderLineItemId>
                  <xsl:variable name="ApplicationOrderLineItemID">
                    <xsl:call-template name="IdentifyApplicationID">
                      <xsl:with-param name="XREFSourceCol" select="$XREFSourceCol"/>
                      <xsl:with-param name="XREFTargetCol" select="$XREFTargetCol"/>
                      <xsl:with-param name="ApplicationID" select="corecom:SalesOrderLineReference/corecom:SalesOrderLineIdentification/corecom:ApplicationObjectKey/corecom:ID[@schemeID='SALESORDER_LINEID' and @schemeAgencyID=$OrderOriginatingSystemCode]"/>
                      <xsl:with-param name="CommonID" select="corecom:SalesOrderLineReference/corecom:SalesOrderLineIdentification/corecom:BusinessComponentID"/>
                      <xsl:with-param name="XREFTableName" select="'oramds:/apps/AIAMetaData/xref/SALESORDER_LINEID.xref'"/>
                    </xsl:call-template>
                  </xsl:variable>
                  <xsl:if test="$ApplicationOrderLineItemID != ''">
                    <xsl:value-of select="$ApplicationOrderLineItemID"/>
                  </xsl:if>
                </xsd1:OrderLineItemId>
                <xsd1:Priority>
                  <xsl:variable name="PriorityVar">
                    <xsl:if test="boolean(updtt:PriorityCode/text())">
                      <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/TROUBLETICKET_PRIORITY.dvm',$DVMSourceCol,updtt:PriorityCode,$DVMTargetCol,'')"/>
                    </xsl:if>
                  </xsl:variable>
                  <xsl:if test="$PriorityVar!=''">
                    <xsl:value-of select="$PriorityVar"/>
                  </xsl:if>
                </xsd1:Priority>
                <xsd1:ServiceOfFailure>
                  <xsl:value-of select="substring(corecom:Failure/corecom:SubSystemCode,1,200)"/>
                </xsd1:ServiceOfFailure>
                <xsd1:Severity>
                  <xsl:variable name="SeverityVar">
                    <xsl:if test="boolean(corecom:Failure/corecom:SeverityCode/text())">
                      <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/TROUBLETICKET_SEVERITY.dvm',$DVMSourceCol,corecom:Failure/corecom:SeverityCode,$DVMTargetCol,'')"/>
                    </xsl:if>
                  </xsl:variable>
                  <xsl:if test="$SeverityVar!=''">
                    <xsl:value-of select="$SeverityVar"/>
                  </xsl:if>
                </xsd1:Severity>
                <xsd1:Sub-Area>
         <xsl:call-template name="SubAreaOfFailure">
                  <xsl:with-param name="DVMSourceCol" select="$DVMSourceCol"/>
                  <xsl:with-param name="DVMTargetCol" select="$DVMTargetCol"/>
                  <xsl:with-param name="FailureSubSystemCode" select="corecom:Failure/corecom:SubSystemCode"/>
                </xsl:call-template>
                </xsd1:Sub-Area>
                <xsd1:TimeOfFirstFailure>
                  <xsl:if test="boolean(corecom:Failure/corecom:RecoveryTimePeriod/corecom:StartDateTime/text())">
                  <xsl:value-of select="aiacommsdate:getDateUTCFormat(corecom:Failure/corecom:RecoveryTimePeriod/corecom:StartDateTime)"/>
                  </xsl:if>
                </xsd1:TimeOfFirstFailure>
                <xsl:call-template name="SWIOrderFailure_ext"/>
              </xsd1:SWIOrderFailure>
            </xsl:for-each>
            <xsl:call-template name="ListOfSWIOrderFailure_ext"/>
          </xsd1:ListOfSWIOrderFailure>
            <xsl:call-template name="TroubleTicket_ext"/>
        </xsd1:TroubleTicket>
        <xsl:call-template name="ListOfSWITroubleTicketIO_ext"/>
      </xsd1:ListOfSWITroubleTicketIO>
    </tns:SWITroubleTicketInsertOrUpdate_Input>
  </xsl:template>
    <xsl:template name="AreaOfFailure">
    <xsl:param name="DVMSourceCol"/>
    <xsl:param name="DVMTargetCol"/>
    <xsl:param name="FailureSystemCode"/>
    <xsd1:Area>
      <xsl:variable name="FaultingSystemType">
	  
	  <!--start TT code change Ari 13/12/2016 -->
        <!--xsl:choose>
          <xsl:when test="$FailureSystemCode!=&quot;AIA&quot;">
            <xsl:value-of select="aia:getSystemType($FailureSystemCode)"/>
          </xsl:when>
          <xsl:otherwise-->
            <xsl:value-of select="$FailureSystemCode"/>
          <!--/xsl:otherwise>
        </xsl:choose-->
		
		<!--End TT code change Ari 13/12/2016 -->
      </xsl:variable>
      <xsl:variable name="AreaOfFailureVar">
        <xsl:if test="$FaultingSystemType!=&quot;&quot;">
          <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/TROUBLETICKET_AREA.dvm',$DVMSourceCol,$FailureSystemCode,$DVMTargetCol,'')"/>
        </xsl:if>
      </xsl:variable>
      <xsl:if test="$AreaOfFailureVar !=''">
        <xsl:value-of select="$AreaOfFailureVar"/>
      </xsl:if>
    </xsd1:Area>
  </xsl:template>
  <xsl:template name="SubAreaOfFailure">
    <xsl:param name="DVMSourceCol"/>
    <xsl:param name="DVMTargetCol"/>
    <xsl:param name="FailureSubSystemCode"/>
      <xsl:variable name="SubAreaOfFailureVar">
        <xsl:if test="$FailureSubSystemCode!=&quot;&quot;">
          <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/TROUBLETICKET_SUBAREA.dvm',$DVMSourceCol,$FailureSubSystemCode,$DVMTargetCol,'')"/>
        </xsl:if>
      </xsl:variable>
      <xsl:if test="$SubAreaOfFailureVar !=''">
        <xsl:value-of select="$SubAreaOfFailureVar"/>
      </xsl:if>
  </xsl:template>
  <xsl:template name="IdentifyApplicationID">
    <xsl:param name="XREFSourceCol"/>
    <xsl:param name="XREFTargetCol"/>
    <xsl:param name="ApplicationID"/>
    <xsl:param name="CommonID"/>
    <xsl:param name="XREFTableName"/>
    <xsl:variable name="ApplicationIDFromXref">
      <xsl:if test="$CommonID!=''">
        <xsl:value-of select="xref:lookupXRef($XREFTableName,$XREFSourceCol,$CommonID,$XREFTargetCol,false())"/>
      </xsl:if>
    </xsl:variable>
    <xsl:choose>
      <xsl:when test="$ApplicationIDFromXref!=&quot;&quot;">
        <xsl:value-of select="$ApplicationIDFromXref"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$ApplicationID"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>  
</xsl:stylesheet>
