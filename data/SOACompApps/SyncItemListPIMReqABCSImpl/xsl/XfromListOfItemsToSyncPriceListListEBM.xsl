<?xml version = '1.0' encoding = 'UTF-8'?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="oramds:/apps/AIAMetaData/AIAComponents/ApplicationObjectLibrary/PIM/V1/schemas/ListOfItems.xsd"/>
      <rootElement name="listOfItems" namespace="http://xmlns.oracle.com/apps/ego/item/service/out"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="oramds:/apps/AIAMetaData/AIAComponents/EnterpriseObjectLibrary/Core/EBO/PriceList/V2/PriceListEBM.xsd"/>
      <rootElement name="SyncPriceListListEBM" namespace="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/PriceList/V2"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.4.0(build 080718.0645) AT [FRI JUL 10 19:41:46 PDT 2009]. -->
?>
<xsl:stylesheet version="2.0" xmlns:ns0="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/PriceList/V2" xmlns:ns2="http://xmlns.oracle.com/PIM/QueryItemListPIMAdapter" 
xmlns:ebi="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.core.xpath.AIAFunctions" xmlns:aia="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.core.xpath.AIAFunctions" xmlns:oans1="http://xmlns.oracle.com/svc" xmlns:corepricelistcust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/EBO/PriceList/V2" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:svcdoc="http://xmlns.oracle.com/Services/Documentation/V1" xmlns:corecomEBO="http://xmlns.oracle.com/EnterpriseObjects/Core/CommonEBO/V1" xmlns:wsa="http://schemas.xmlsoap.org/ws/2003/03/addressing" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:xacml-context="urn:oasis:names:tc:xacml:2.0:context:schema:cd:04" xmlns:corecomcust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/Common/V2" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:xacml="urn:oasis:names:tc:xacml:2.0:policy:schema:cd:04" xmlns:corecom="http://xmlns.oracle.com/EnterpriseObjects/Core/Common/V2" xmlns:ns1="http://xmlns.oracle.com/apps/ego/item/service/out" xmlns:item="http://xmlns.oracle.com/apps/ego/item/service" exclude-result-prefixes="xsl oans1 xsd xsi ns0 ns1 corepricelistcust svcdoc corecomEBO wsa xacml-context corecomcust xacml corecom bpws ehdr hwf xp20 xref ora ids orcl" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue">
  <xsl:include href="XfromListOfItemsToSyncPriceListListEBM_Custom.xsl"/>
  <xsl:param name="SystemID"/>
  <xsl:param name="BatchID"/>
  <xsl:param name="WorkpaceName"/>
  <xsl:param name="AutoRelase"/>
  <!--xsl:variable name="SystemID">
    <xsl:value-of select='"PIM_01"'/>
  </xsl:variable-->
  <!--xsl:variable name="BatchID">
    <xsl:value-of select='"429"'/>
  </xsl:variable-->
  <xsl:variable name="senderNodeVariable" select="aia:getEBMHeaderSenderSystemNode($SystemID,'')"/>
  <xsl:variable name="SenderId" select="$SystemID"/>
  <xsl:variable name="XREFSourceCol" select="$SystemID"/>
  <xsl:variable name="XREFTargetCol">
    <xsl:value-of select="&quot;COMMON&quot;"/>
  </xsl:variable>
  <xsl:variable name="DVMSourceCol" select="$SystemID"/>
  <xsl:variable name="DVMTargetCol">
    <xsl:value-of select="&quot;COMMON&quot;"/>
  </xsl:variable>
  <xsl:variable name="offset" select="aia:getSystemModuleProperty('PIM',concat($SenderId,'.SERVER_TIMEZONE'),true())"/>
  <xsl:variable name="SenderBatchId" select="$BatchID"/>
  <xsl:template match="/">
    <ns0:SyncPriceListListEBM>
      <corecom:EBMHeader>
        <corecom:EBMID>
          <xsl:variable name="messageIdVariable" select="orcl:generate-guid()"/>
          <xsl:value-of select="$messageIdVariable"/>
        </corecom:EBMID>
        <corecom:EBMName>
          <xsl:text disable-output-escaping="no">{http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/PriceList/V2}SyncPriceListListEBM</xsl:text>
        </corecom:EBMName>
        <corecom:EBOName>
          <xsl:text disable-output-escaping="no">{http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/PriceList/V2}PriceListEBO</xsl:text>
        </corecom:EBOName>
        <corecom:CreationDateTime>
          <xsl:value-of select="xp20:current-dateTime()"/>
        </corecom:CreationDateTime>
        <corecom:VerbCode>
          <xsl:text disable-output-escaping="no">Sync</xsl:text>
        </corecom:VerbCode>
        <corecom:MessageProcessingInstruction>
          <xsl:variable name="ConfigServiceName" select="'{http://xmlns.oracle.com/ABCSImpl/PIM/Core/SyncItemListPIMReqABCSImpl/V1}SyncItemListPIMReqABCSImpl'"/>
          <xsl:variable name="RouteToCAVS" select="aia:getServiceProperty($ConfigServiceName, 'Routing.PriceListEBSV2.SyncPriceListList.RouteToCAVS', false())='true'"/>
          <corecom:EnvironmentCode>
            <xsl:choose>
              <xsl:when test="$RouteToCAVS">
                <xsl:text>CAVS</xsl:text>
              </xsl:when>
              <xsl:otherwise>
                <xsl:variable name="EnvCode" select="aia:getServiceProperty($ConfigServiceName, 'Routing.PriceListEBSV2.SyncPriceListList.MessageProcessingInstruction.EnvironmentCode', false())"/>
                <xsl:choose>
                  <xsl:when test="$EnvCode!=''">
                    <xsl:value-of select="$EnvCode"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text>PRODUCTION</xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:otherwise>
            </xsl:choose>
          </corecom:EnvironmentCode>
          <xsl:if test="$RouteToCAVS">
            <corecom:DefinitionID>
              <xsl:value-of select="aia:getServiceProperty($ConfigServiceName, 'Routing.PriceListEBSV2.SyncPriceListList.CAVS.EndpointURI', false())"/>
            </corecom:DefinitionID>
          </xsl:if>
        </corecom:MessageProcessingInstruction>
        <corecom:Sender>
          <xsl:variable name="senderNodeVariable" select="aia:getEBMHeaderSenderSystemNode($SystemID,'')"/>
          <corecom:ID>
            <xsl:value-of select="$senderNodeVariable/ID"/>
          </corecom:ID>
          <corecom:Description>
            <xsl:value-of select="$senderNodeVariable/Description"/>
          </corecom:Description>
          <corecom:IPAddress>
            <xsl:value-of select="$senderNodeVariable/IPAddress"/>
          </corecom:IPAddress>
          <corecom:SenderMessageID/>
          <corecom:CallingServiceName>
            <xsl:value-of select="$senderNodeVariable/CallingServiceName"/>
          </corecom:CallingServiceName>
          <corecom:Application>
            <corecom:ID>
              <xsl:value-of select="$senderNodeVariable/Application/ID"/>
            </corecom:ID>
            <corecom:Version>
              <xsl:value-of select="$senderNodeVariable/Application/Version"/>
            </corecom:Version>
          </corecom:Application>
          <corecom:ContactName>
            <xsl:value-of select="$senderNodeVariable/ContactName"/>
          </corecom:ContactName>
          <corecom:ContactEmail>
            <xsl:value-of select="$senderNodeVariable/ContactEmail"/>
          </corecom:ContactEmail>
          <corecom:ContactPhoneNumber>
            <xsl:value-of select="$senderNodeVariable/ContactPhone"/>
          </corecom:ContactPhoneNumber>
          <corecom:WSAddress>
            <wsa:ReplyTo>
              <wsa:ServiceName>SyncItemListPIMReqABCSImpl</wsa:ServiceName>
            </wsa:ReplyTo>
          </corecom:WSAddress>
          <xsl:call-template name="SenderType_ext"/>
        </corecom:Sender>
        <corecom:Target>
          <corecom:ID>
            <xsl:text disable-output-escaping="no">ValueWillBePopulatedLater</xsl:text>
          </corecom:ID>
          <xsl:call-template name="TargetType_ext"/>
        </corecom:Target>
        <corecom:BusinessScope>
          <corecom:ID>
            <xsl:value-of select="$SenderBatchId"/>
          </corecom:ID>
          <corecom:InstanceID>
            <xsl:text disable-output-escaping="no">Pim-to-Siebel-Product-SyncPriceList-Synchronization-Process-Request</xsl:text>
          </corecom:InstanceID>
          <corecom:BusinessScopeTypeCode>
            <xsl:text disable-output-escaping="no">BusinessProcessMessage</xsl:text>
          </corecom:BusinessScopeTypeCode>
          <corecom:EnterpriseServiceName>
            <xsl:text disable-output-escaping="no">{http://xmlns.oracle.com/EnterpriseServices/Core/PriceList/V2}PriceListEBSV2</xsl:text>
          </corecom:EnterpriseServiceName>
          <corecom:EnterpriseServiceOperationName>
            <xsl:text disable-output-escaping="no">SyncPriceListList</xsl:text>
          </corecom:EnterpriseServiceOperationName>
          <xsl:call-template name="BusinessScopeType_ext"/>
        </corecom:BusinessScope>
        <corecom:EBMTracking>
          <corecom:SequenceNumber>
            <xsl:text disable-output-escaping="no">1</xsl:text>
          </corecom:SequenceNumber>
          <corecom:ExecutionUnitName>
            <xsl:text disable-output-escaping="no">{http://xmlns.oracle.com/ABCSImpl/PIM/Core/SyncItemListPIMReqABCSImpl/V1}SyncItemListPIMReqABCSImpl</xsl:text>
          </corecom:ExecutionUnitName>
          <corecom:ImplementationCode>
            <xsl:text disable-output-escaping="no">BPEL</xsl:text>
          </corecom:ImplementationCode>
          <corecom:ActivityDateTime>
            <xsl:value-of select="xp20:current-dateTime()"/>
          </corecom:ActivityDateTime>
          <xsl:call-template name="EBMTrackingType_ext"/>
        </corecom:EBMTracking>
        <corecom:MessageBatch>
          <corecom:ID>
            <xsl:value-of select="$SenderBatchId"/>
          </corecom:ID>
          <corecom:Name>
            <xsl:choose>
              <xsl:when test="$WorkpaceName=''">
                <xsl:value-of select="AIA-Default"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="$WorkpaceName"/>
              </xsl:otherwise>
            </xsl:choose>
          </corecom:Name>
          <corecom:BatchParameter>
            <corecom:Name>
              <xsl:text disable-output-escaping="no">WORKSPACE_RELEASE_FLAG</xsl:text>
            </corecom:Name>
            <corecom:Value>
              <xsl:value-of select="$AutoRelase"/>
              <!--<xsl:text disable-output-escaping="no">N</xsl:text>-->
            </corecom:Value>
          </corecom:BatchParameter>
        </corecom:MessageBatch>
        <xsl:call-template name="EBMHeaderType_ext"/>
      </corecom:EBMHeader>
      <xsl:for-each select="/ns2:QueryItemListPIMAdapterProcessResponse/item:ItemQueryOut/listOfItems/Item">
        <xsl:variable name="CurItem" select="."/>
        <xsl:variable name="PricingCode" select="ItemRevision/RevisionAttributeGroup[AttributeGroupName='Prod_Details_Definitions']/ItemUDA[Name='Pricing_Code']/CharValue"/>
        <xsl:variable name="PIMItemOrgID" select="concat(MainCharacteristics/InventoryItemId,&quot;::&quot;,MainCharacteristics/OrganizationId,&quot;::&quot;,MainCharacteristics/OperatingUnitId)"/>
        <xsl:variable name="PIMItemID" select="MainCharacteristics/InventoryItemId"/>
        <xsl:variable name="PIMOrgID" select="MainCharacteristics/OrganizationId"/>
        <xsl:variable name="EntityType">
         <xsl:for-each select="AttributeGroup[AttributeGroupName='Additional_Entity_Details']">
           <xsl:for-each select="ItemUDA[Name='Entity_Type']">
             <xsl:value-of select="CharValue"/>
           </xsl:for-each>
         </xsl:for-each>
        </xsl:variable>
        <xsl:if test="$PricingCode != &quot;NONE&quot;">
          <ns0:DataArea>
            <corecom:Sync>
              <xsl:attribute name="responseCode">
                <xsl:text disable-output-escaping="no">ID</xsl:text>
              </xsl:attribute>
            </corecom:Sync>
            <ns0:SyncPriceListList>
              <!--<xsl:for-each select="Organization/OrganizationAttributeGroup">
              <xsl:call-template name="ProcessAttributeGroupUDA">
                <xsl:with-param name="Name" select="AttributeGroupName"/>
              </xsl:call-template>
            </xsl:for-each>
             <xsl:for-each select="AttributeGroup">
              <xsl:call-template name="ProcessAttributeGroupUDA">
                <xsl:with-param name="Name" select="AttributeGroupName"/>
              </xsl:call-template>
            </xsl:for-each>
            <xsl:for-each select="ItemRevision/RevisionAttributeGroup">
              <xsl:call-template name="ProcessAttributeGroupUDA">
                <xsl:with-param name="Name" select="AttributeGroupName"/>
              </xsl:call-template>
            </xsl:for-each>-->
              <xsl:variable name="SimplePriceList" select="ItemRevision/RevisionAttributeGroup[AttributeGroupName='Simple_Price_List']"/>
              <xsl:variable name="BillingProductsEvent" select="ItemRevision/RevisionAttributeGroup[AttributeGroupName='Billing_Products_Event_Map']"/>
              <xsl:variable name="RatePlan" select="ItemRevision/RevisionAttributeGroup[AttributeGroupName='Rate_Plan']"/>
              <xsl:variable name="PlanTier" select="ItemRevision/RevisionAttributeGroup[AttributeGroupName='Tier_Group']"/>
              <xsl:variable name="PlanImpact" select="ItemRevision/RevisionAttributeGroup[AttributeGroupName='Balance_Impact']"/>
              <xsl:variable name="RateData" select="ItemRevision/RevisionAttributeGroup[AttributeGroupName='Rate_Data']"/>
              <xsl:variable name="DayTimeRange" select="ItemRevision/RevisionAttributeGroup[AttributeGroupName='Day_Time_Range']"/>
              <xsl:variable name="WeekRange" select="ItemRevision/RevisionAttributeGroup[AttributeGroupName='Days_of_the_Week_Range']"/>
              <xsl:variable name="DestinationSystems" select="AttributeGroup[AttributeGroupName='Destination_Sys_Specification']"/>
              <xsl:variable name="BillingAttributes" select="ItemRevision/RevisionAttributeGroup[AttributeGroupName='Billing_Prod_Attr_General']"/>
              <xsl:variable name="CommsProductInfo" select="ItemRevision/RevisionAttributeGroup[AttributeGroupName='Comms_Product_Info']"/>
              <xsl:variable name="ItemInfoCore" select="AttributeGroup[AttributeGroupName='Additional_Entity_Details']"/>
              <xsl:variable name="AddtlBillingInfo" select="AttributeGroup[AttributeGroupName='Additional_Billing_Information']"/>
			  						<!-- START: Changes to send PIMID from AIA to PDC by Arup 11/09/2015-->
              <xsl:variable name="ProductMoreInfo" select="ItemRevision/RevisionAttributeGroup[AttributeGroupName='Prod_Detail_More_Info']"/>
						<!-- END: Changes to send PIMID from AIA to PDC by Arup 11/09/2015-->               

              <xsl:if test="$PricingCode = 'STANDARD'">
                <xsl:for-each select="$SimplePriceList">
				<!--Multiple Pricelist Changes for standard offer desing -->
				<xsl:variable name="Pricelist_Value" select="ItemUDA[Name='Price_List_Name']/CharValue"/>				
                  <ns0:Name>
                    <!--<xsl:value-of select="ItemUDA[Name='Price_List_Name']/CharValue"/>-->
					<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PRICELIST.dvm',$DVMSourceCol,$Pricelist_Value,$DVMTargetCol,$Pricelist_Value)"/>
                  </ns0:Name>
				  <!-- Multiple PriceList changed End-->												
                  <xsl:variable name="Currency" select="ItemUDA[Name='Currency']/CharValue"/>
                  <ns0:CurrencyCode>
                    <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CURRENCY_CODE.dvm',$DVMSourceCol,$Currency,$DVMTargetCol,$Currency)"/>
                  </ns0:CurrencyCode>
                  <ns0:PriceListLine>
                    <corecom:Identification>
                      <xsl:variable name="PriceListLineCommonID">
                        <xsl:call-template name="lookupOrPopulateXRef">
                          <xsl:with-param name="xrefTableName" select="&quot;oramds:/apps/AIAMetaData/xref/PRICELINE_ID.xref&quot;"/>
                          <xsl:with-param name="xrefReferenceColumnName" select="$XREFSourceCol"/>
                          <xsl:with-param name="xrefReferenceValue" select="$PIMItemOrgID"/>
                          <xsl:with-param name="xrefColumnName" select="$XREFTargetCol"/>
                        </xsl:call-template>
                      </xsl:variable>
                      <corecom:BusinessComponentID>
                        <xsl:value-of select="$PriceListLineCommonID"/>
                      </corecom:BusinessComponentID>
                      <corecom:ID>
                        <xsl:value-of select="$PIMItemID"/>
                      </corecom:ID>
                      <corecom:ApplicationObjectKey>
                        <corecom:ID>
                          <xsl:value-of select="$PIMItemID"/>
                        </corecom:ID>
                        <corecom:ContextID schemeID="ORGANIZATION_ID">
                          <xsl:value-of select="$PIMOrgID"/>
                        </corecom:ContextID>
                      </corecom:ApplicationObjectKey>
                      <xsl:for-each select="ItemRevision">
                        <corecom:Revision>
                          <corecom:Number>
                            <xsl:value-of select="RevisionId"/>
                          </corecom:Number>
                          <corecom:Code>
                            <xsl:value-of select="Revision"/>
                          </corecom:Code>
                          <corecom:Description>
                            <xsl:value-of select="Description"/>
                          </corecom:Description>
                          <corecom:EffectiveDate>
                            <xsl:call-template name="formatDate">
                              <xsl:with-param name="formatDateParam" select="EffectivityDate"/>
                            </xsl:call-template>
                          </corecom:EffectiveDate>
                          <corecom:Label>
                            <xsl:value-of select="RevisionLabel"/>
                          </corecom:Label>
                          <corecom:Reason>
                            <xsl:value-of select="RevisionReason"/>
                          </corecom:Reason>
                        </corecom:Revision>
                      </xsl:for-each>
                    </corecom:Identification>
                    <ns0:Description>
                      <xsl:value-of select="ItemUDA[Name='Description']/CharValue"/>
                    </ns0:Description>
                    <ns0:PricingSchemeCode>
                      <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PRICE_SCHEMECODE.dvm',$DVMSourceCol,$PricingCode,$DVMTargetCol,$PricingCode)"/>
                    </ns0:PricingSchemeCode>
                    <corecom:EffectiveTimePeriod>
                      <corecom:StartDateTime>
                        <xsl:call-template name="formatUDADate">
                          <xsl:with-param name="formatDateParam" select="ItemUDA[Name='Start_Date']/DatetimeValue"/>
                        </xsl:call-template>
                      </corecom:StartDateTime>
                      <corecom:EndDateTime>
                        <xsl:call-template name="formatUDADate">
                          <xsl:with-param name="formatDateParam" select="ItemUDA[Name='End_Date']/DatetimeValue"/>
                        </xsl:call-template>
                      </corecom:EndDateTime>
                    </corecom:EffectiveTimePeriod>
                    <!-- <ns0:PriceListBreak>
                    <ns0:LinePriceBreak>
                        <ns0:DiscountPercent>
                            <xsl:value-of select="ItemUDA[Name='Volume_Discount']/CharValue"/>
                        </ns0:DiscountPercent>
                    </ns0:LinePriceBreak>
                </ns0:PriceListBreak>-->
                    <ns0:LinePrice>
                      <corecom:Identification>
                        <xsl:variable name="PIMPriceType" select="ItemUDA[Name='Price_Type']/CharValue"/>
                        <xsl:variable name="PIMEventID">
                          <xsl:value-of select="concat($PIMItemOrgID,dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PRICETYPE_EVENT.dvm',$DVMSourceCol,$PIMPriceType,$DVMTargetCol,$PIMPriceType))"/>
                        </xsl:variable>
                        <xsl:variable name="LinePriceCommonID">
                          <xsl:call-template name="lookupOrPopulateXRef">
                            <xsl:with-param name="xrefTableName" select="&quot;oramds:/apps/AIAMetaData/xref/PRICELINETYPE_ID.xref&quot;"/>
                            <xsl:with-param name="xrefReferenceColumnName" select="$XREFSourceCol"/>
                            <xsl:with-param name="xrefReferenceValue" select="$PIMEventID"/>
                            <xsl:with-param name="xrefColumnName" select="$XREFTargetCol"/>
                          </xsl:call-template>
                        </xsl:variable>
                        <corecom:BusinessComponentID>
                          <xsl:value-of select="$LinePriceCommonID"/>
                        </corecom:BusinessComponentID>
                        <corecom:ID>
                          <xsl:value-of select="$PIMEventID"/>
                        </corecom:ID>
                      </corecom:Identification>
                      <xsl:variable name="Price_Type" select="ItemUDA[Name='Price_Type']/CharValue"/>
                      <ns0:TypeCode>
                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/LINEPRICE_TYPECODE.dvm',$DVMSourceCol,$Price_Type,$DVMTargetCol,$Price_Type)"/>
                      </ns0:TypeCode>
                      <xsl:variable name="Charge_Period" select="ItemUDA[Name='Charge_Period']/CharValue"/>
                      <ns0:BillingTimePeriodCode>
                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PRICE_BILLINGPERIODCODE.dvm',$DVMSourceCol,$Charge_Period,$DVMTargetCol,$Charge_Period)"/>
                      </ns0:BillingTimePeriodCode>
                      <xsl:variable name="PLPricing_Commit_Type" select="ItemUDA[Name='Pricing_Commit_Type']/CharValue"/>
                      <ns0:OverrideTypeCode>
                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PRICE_OVERRIDETYPECODE.dvm',$DVMSourceCol,$PLPricing_Commit_Type,$DVMTargetCol,$PLPricing_Commit_Type)"/>
                      </ns0:OverrideTypeCode>
                      <xsl:variable name="PLDynamic_Discount_Method" select="ItemUDA[Name='Dynamic_Discount_Method']/CharValue"/>
                      <ns0:DiscountOverrideTypeCode>
                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PRICE_DISCOUNTTYPECODE.dvm',$DVMSourceCol,$PLDynamic_Discount_Method,$DVMTargetCol,$PLDynamic_Discount_Method)"/>
                      </ns0:DiscountOverrideTypeCode>
                      <ns0:MarkupPricePercent>
                        <xsl:value-of select="ItemUDA[Name='Service_Price_Percent']/NumberValue"/>
                      </ns0:MarkupPricePercent>
                      <xsl:variable name="PLService_Pricing_Method" select="ItemUDA[Name='Service_Pricing_Method']/CharValue"/>
                      <ns0:MarkupPriceBasisCode>
                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PRICE_MARKUPBASISCODE.dvm',$DVMSourceCol,$PLService_Pricing_Method,$DVMTargetCol,$PLService_Pricing_Method)"/>
                      </ns0:MarkupPriceBasisCode>
                      <corecom:MinimumUnitSalePrice>
                        <xsl:value-of select="ItemUDA[Name='Minimum_Price']/NumberValue"/>
                      </corecom:MinimumUnitSalePrice>
                      <corecom:MaximumUnitSalePrice>
                        <xsl:value-of select="ItemUDA[Name='Maximum_Price']/NumberValue"/>
                      </corecom:MaximumUnitSalePrice>
                      <corecom:PromotionalUnitPrice>
                        <corecom:Amount>
                          <xsl:value-of select="ItemUDA[Name='Promotional_Price']/NumberValue"/>
                        </corecom:Amount>
                      </corecom:PromotionalUnitPrice>
                      <corecom:AttributeBasedPricingMatrixReference>
                        <corecom:AttributeBasedPricingMatrixIdentification>
                          <corecom:ID>
                            <xsl:value-of select="ItemUDA[Name='Attribute_Adjustment']/CharValue"/>
                          </corecom:ID>
                        </corecom:AttributeBasedPricingMatrixIdentification>
                      </corecom:AttributeBasedPricingMatrixReference>
                      <corecom:VolumeDiscountPlanReference>
                        <corecom:VolumeDiscountPlanIdentification>
                          <corecom:ID>
                            <xsl:value-of select="ItemUDA[Name='Volume_Discount']/CharValue"/>
                          </corecom:ID>
                        </corecom:VolumeDiscountPlanIdentification>
                      </corecom:VolumeDiscountPlanReference>
                      <corecom:UnitListPrice>
                        <corecom:Amount>
                          <xsl:value-of select="ItemUDA[Name='List_Price']/NumberValue"/>
                        </corecom:Amount>
                      </corecom:UnitListPrice>
                    </ns0:LinePrice>
                    <corecom:ItemReference>
                      <corecom:ItemIdentification>
                        <xsl:variable name="PIMIntegrationID">
                         <xsl:choose>
                          <xsl:when test="$EntityType != 'PRODUCT_LINE'">
                           <xsl:call-template name="lookupOrPopulateXRef">
                             <xsl:with-param name="xrefTableName" select="&quot;oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref&quot;"/>
                             <xsl:with-param name="xrefReferenceColumnName" select="$XREFSourceCol"/>
                             <xsl:with-param name="xrefReferenceValue" select="concat($CurItem/MainCharacteristics/InventoryItemId,&quot;::&quot;,$CurItem/MainCharacteristics/OrganizationId,&quot;::&quot;,$CurItem/MainCharacteristics/OperatingUnitId)"/>
                             <xsl:with-param name="xrefColumnName" select="$XREFTargetCol"/>
                           </xsl:call-template>
                          </xsl:when>
                          <xsl:otherwise>
                            <xsl:call-template name="lookupOrPopulateXRef">
                             <xsl:with-param name="xrefTableName" select="&quot;oramds:/apps/AIAMetaData/xref/PRODUCTLINE_ID.xref&quot;"/>
                             <xsl:with-param name="xrefReferenceColumnName" select="$XREFSourceCol"/>
                             <xsl:with-param name="xrefReferenceValue" select="concat($CurItem/MainCharacteristics/InventoryItemId,&quot;::&quot;,$CurItem/MainCharacteristics/OrganizationId,&quot;::&quot;,$CurItem/MainCharacteristics/OperatingUnitId)"/>
                             <xsl:with-param name="xrefColumnName" select="$XREFTargetCol"/>
                           </xsl:call-template>
                          </xsl:otherwise>
                         </xsl:choose>
                        </xsl:variable>
                        <corecom:BusinessComponentID>
                          <xsl:value-of select="$PIMIntegrationID"/>
                        </corecom:BusinessComponentID>
                        <corecom:ID>
                          <xsl:value-of select="$CurItem/MainCharacteristics/InventoryItemId"/>
                        </corecom:ID>
                        <corecom:ContextID schemeID="OPERATING_UNIT_ID">
                          <xsl:call-template name="lookupOrPopulateXRef">
                            <xsl:with-param name="xrefTableName" select="&quot;oramds:/apps/AIAMetaData/xref/ORGANIZATION_ID.xref&quot;"/>
                            <xsl:with-param name="xrefReferenceColumnName" select="$XREFSourceCol"/>
                            <xsl:with-param name="xrefReferenceValue" select="$CurItem/MainCharacteristics/OperatingUnitId"/>
                            <xsl:with-param name="xrefColumnName" select="$XREFTargetCol"/>
                          </xsl:call-template>
                        </corecom:ContextID>
                        <corecom:ContextID schemeID="SEGMENT1">
                          <xsl:value-of select="$CurItem/MainCharacteristics/ConcatenatedSegments"/>
                        </corecom:ContextID>
                        <corecom:ContextID>
                          <xsl:value-of select="$CurItem/MainCharacteristics/MasterOrganizationId"/>
                        </corecom:ContextID>
                        <corecom:ContextID schemeID="ORGANIZATION_CODE">
                          <xsl:value-of select="$CurItem/MainCharacteristics/OrganizationCode"/>
                        </corecom:ContextID>
                        <corecom:ApplicationObjectKey>
                          <corecom:ID>
                            <xsl:value-of select="$CurItem/MainCharacteristics/InventoryItemId"/>
                          </corecom:ID>
                          <corecom:ContextID schemeID="ORGANIZATION_ID">
                            <xsl:value-of select="$CurItem/MainCharacteristics/OrganizationId"/>
                          </corecom:ContextID>
                          <corecom:ContextID schemeID="OPERATING_UNIT_ID">
                            <xsl:value-of select="$CurItem/MainCharacteristics/OperatingUnitId"/>
                          </corecom:ContextID>
                        </corecom:ApplicationObjectKey>
                        <xsl:variable name="PIMCurrentActiveRevisionId">
                          <xsl:value-of select="$CurItem/MainCharacteristics/RevisionId"/>
                        </xsl:variable>
                        <xsl:for-each select="$CurItem/ItemRevision">
                          <xsl:if test="RevisionId = $PIMCurrentActiveRevisionId">
                            <corecom:Revision>
                              <corecom:Number>
                                <xsl:value-of select="RevisionId"/>
                              </corecom:Number>
                              <corecom:Code>
                                <xsl:value-of select="Revision"/>
                              </corecom:Code>
                              <corecom:Description>
                                <xsl:value-of select="Description"/>
                              </corecom:Description>
                              <corecom:EffectiveDate>
                                <xsl:call-template name="formatDate">
                                  <xsl:with-param name="formatDateParam" select="EffectivityDate"/>
                                </xsl:call-template>
                              </corecom:EffectiveDate>
                              <corecom:Label>
                                <xsl:value-of select="RevisionLabel"/>
                              </corecom:Label>
                              <corecom:Reason>
                                <xsl:value-of select="RevisionReason"/>
                              </corecom:Reason>
                            </corecom:Revision>
                          </xsl:if>
                        </xsl:for-each>
                      </corecom:ItemIdentification>
                      <corecom:Name>
                        <xsl:value-of select="$CurItem/MainCharacteristics/ConcatenatedSegments"/>
                      </corecom:Name>
					  <!-- Defect Fix 13932352-->
                     <!-- <corecom:Description>
                        <xsl:value-of select="$CurItem/MainCharacteristics/Description"/>
                      </corecom:Description>-->
					  <xsl:for-each select="$CurItem/MainCharacteristics/MainCharTransalation">
					  
					  
						<!-- START: Changes to send PIMID from AIA to PDC by Arup 11/09/2015--> 
						<corecom:Description>
						<xsl:value-of select="concat($CurItem/MainCharacteristics/Description, '|', $ProductMoreInfo[ItemUDA[Name=&quot;Global_Product_Identifier&quot;]/CharValue])"/>
                        </corecom:Description>
                      </xsl:for-each>
					  
                      <xsl:variable name="LongDescription" select="$CurItem/MainCharacteristics/LongDescription"/>
                      <xsl:if test="$LongDescription">
                        <corecom:Description>
						<xsl:value-of select="concat($LongDescription, '|', $ProductMoreInfo[ItemUDA[Name=&quot;Global_Product_Identifier&quot;]/CharValue])"/>
                          <!--xsl:value-of select="$CurItem/MainCharacteristics/Description"/-->
                        </corecom:Description>
						<!-- END: Changes to send PIMID from AIA to PDC by Arup 11/09/2015-->
						
						
                      </xsl:if>
					  <!-- Defect Fix ends-->
                    </corecom:ItemReference>
                  </ns0:PriceListLine>
                </xsl:for-each>
              </xsl:if>
              <xsl:if test="$PricingCode = 'BILLING'">
                <ns0:PriceListLine>
                  <corecom:Identification>
                    <xsl:variable name="PriceListLineCommonID">
                      <xsl:call-template name="lookupOrPopulateXRef">
                        <xsl:with-param name="xrefTableName" select="&quot;oramds:/apps/AIAMetaData/xref/PRICELINE_ID.xref&quot;"/>
                        <xsl:with-param name="xrefReferenceColumnName" select="$XREFSourceCol"/>
                        <xsl:with-param name="xrefReferenceValue" select="$PIMItemOrgID"/>
                        <xsl:with-param name="xrefColumnName" select="$XREFTargetCol"/>
                      </xsl:call-template>
                    </xsl:variable>
                    <corecom:BusinessComponentID>
                      <xsl:value-of select="$PriceListLineCommonID"/>
                    </corecom:BusinessComponentID>
                    <corecom:ID>
                      <xsl:value-of select="$PIMItemID"/>
                    </corecom:ID>
                  </corecom:Identification>
                  <xsl:for-each select="$BillingProductsEvent[not(ItemUDA[Name='Event']/CharValue = preceding-sibling::./ItemUDA[Name='Event']/CharValue)]">
                    <!--<xsl:for-each select="$BillingProductsEvent">-->
                    <xsl:variable name="PIMEvent" select="ItemUDA[Name='Event']/CharValue"/>
                    <xsl:variable name="EventRP" select="$BillingProductsEvent[ItemUDA[Name='Event']/CharValue=$PIMEvent]"/>
                    <!-- <xsl:variable name='EventRatePlanID' select="ItemUDA[Name='Rate_Plan_ID']/NumberValue"/>-->
                    <ns0:LinePrice>
                      <corecom:Identification>
                        <xsl:variable name="PIMEvent" select="ItemUDA[Name='Event']/CharValue"/>
                        <xsl:variable name="PIMEventID">
                          <xsl:value-of select="concat($PIMItemOrgID,dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PRICETYPE_EVENT.dvm',$DVMSourceCol,$PIMEvent,'COMMON',$PIMEvent))" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"/>
                        </xsl:variable>
                        <xsl:variable name="LinePriceCommonID">
                          <xsl:call-template name="lookupOrPopulateXRef">
                            <xsl:with-param name="xrefTableName" select="&quot;oramds:/apps/AIAMetaData/xref/PRICELINETYPE_ID.xref&quot;"/>
                            <xsl:with-param name="xrefReferenceColumnName" select="$XREFSourceCol"/>
                            <xsl:with-param name="xrefReferenceValue" select="$PIMEventID"/>
                            <xsl:with-param name="xrefColumnName" select="$XREFTargetCol"/>
                          </xsl:call-template>
                        </xsl:variable>
                        <corecom:BusinessComponentID>
                          <xsl:value-of select="$LinePriceCommonID"/>
                        </corecom:BusinessComponentID>
                        <corecom:ID>
                          <xsl:value-of select="$PIMEventID"/>
                        </corecom:ID>
                      </corecom:Identification>
                      <xsl:variable name="Event" select="ItemUDA[Name='Event']/CharValue"/>
                      <ns0:TypeCode>
                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PRICETYPE_EVENT.dvm',$DVMSourceCol,$Event,$DVMTargetCol,$Event)"/>
                      </ns0:TypeCode>
                      <xsl:variable name="Measured_By" select="ItemUDA[Name='Measured_By']/CharValue"/>
                      <ns0:UOMCode>
                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/LINEPRICE_UOMCODE.dvm',$DVMSourceCol,$Measured_By,$DVMTargetCol,$Measured_By)"/>
                      </ns0:UOMCode>
                      <xsl:variable name="Rate_Plan_Structure" select="ItemUDA[Name='Rate_Plan_Structure']/CharValue"/>
                      <ns0:RatePlanTypeCode>
                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/RATEPLAN_TYPECODE.dvm',$DVMSourceCol,$Rate_Plan_Structure,$DVMTargetCol,$Rate_Plan_Structure)"/>
                      </ns0:RatePlanTypeCode>
                      <xsl:variable name="BPLPricing_Commit_Type" select="ItemUDA[Name='Pricing_Commit_Type']/CharValue"/>
                      <ns0:OverrideTypeCode>
                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PRICE_OVERRIDETYPECODE.dvm',$DVMSourceCol,$BPLPricing_Commit_Type,$DVMTargetCol,$BPLPricing_Commit_Type)"/>
                      </ns0:OverrideTypeCode>
                      <xsl:variable name="BPLDynamic_Discount_Method" select="ItemUDA[Name='Dynamic_Discount_Method']/CharValue"/>
                      <ns0:DiscountOverrideTypeCode>
                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PRICE_DISCOUNTTYPECODE.dvm',$DVMSourceCol,$BPLDynamic_Discount_Method,$DVMTargetCol,$BPLDynamic_Discount_Method)"/>
                      </ns0:DiscountOverrideTypeCode>
                      <xsl:for-each select="$EventRP">
                        <xsl:variable name="EventRatePlanID" select="ItemUDA[Name='Rate_Plan_ID']/NumberValue"/>
                        <xsl:for-each select="$RatePlan">
                          <xsl:variable name="RatePlanID" select="ItemUDA[Name='Rate_Plan_ID']/NumberValue"/>
                          <xsl:if test="$EventRatePlanID = $RatePlanID">
                            <ns0:RatePlan>
                              <corecom:Identification>
                                <corecom:ID>
                                  <xsl:value-of select="ItemUDA[Name='Rate_Plan_ID']/NumberValue"/>
                                </corecom:ID>
								<!--MULTIPLEPRICELSIT CHANGES START-->
								<xsl:variable name="Pricelist_CharValue" select="ItemUDA[Name='Pricelist_Name']/CharValue"/>
								<corecom:ApplicationObjectKey>
									<corecom:ID>
									  <!--<xsl:value-of select="ItemUDA[Name='Pricelist_Name']/CharValue"/>-->
									  <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PRICELIST.dvm',$DVMSourceCol,$Pricelist_CharValue,$DVMTargetCol,$Pricelist_CharValue)"/>
									</corecom:ID>
									<corecom:ContextID schemeID="">
									  <xsl:value-of select="ItemUDA[Name='Pricelist_Name']/DisplayValue"/>
									</corecom:ContextID>									
								</corecom:ApplicationObjectKey>
								<!--MULTIPLEPRICELSIT CHANGES END-->								
                              </corecom:Identification>
                              <ns0:Name>
                                <xsl:value-of select="ItemUDA[Name='Rate_Plan_Name']/CharValue"/>
                              </ns0:Name>
                              <xsl:variable name="Charge_Cycle_Fee_UOM" select="ItemUDA[Name='Charge_Cycle_Fee_UOM']/CharValue"/>
                              <xsl:variable name="RPCurrencyCode" select="ItemUDA[Name='Currency']/CharValue"/>
                              <ns0:UnitCode>
                                <!--<xsl:value-of select="orcl:lookup-dvm('RATEPLAN_UNITCODE',$DVMSourceCol,$Charge_Cycle_Fee_UOM,$DVMTargetCol,$Charge_Cycle_Fee_UOM)"/>-->
                                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CURRENCY_CODE.dvm',$DVMSourceCol,$RPCurrencyCode,$DVMTargetCol,$RPCurrencyCode)"/>
                              </ns0:UnitCode>
                              <ns0:Description>
                                <xsl:value-of select="ItemUDA[Name='Rate_Plan_Desc']/CharValue"/>
                              </ns0:Description>
                              <xsl:variable name="Tax_When" select="ItemUDA[Name='Tax_When']/CharValue"/>
                              <ns0:TaxApplicabilityCode>
                                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/RATEPLAN_TAXAPPLICABILITYCODE.dvm',$DVMSourceCol,$Tax_When,$DVMTargetCol,$Tax_When)"/>
                              </ns0:TaxApplicabilityCode>
                              <ns0:TaxCode>
                                <xsl:value-of select="ItemUDA[Name='Tax_Code']/CharValue"/>
                              </ns0:TaxCode>
                              <ns0:AdvanceRecurringChargeAllowedIndicator>
                                <xsl:call-template name="IndicatorFlag">
                                  <xsl:with-param name="value" select="ItemUDA[Name='Advance_Billing']/CharValue"/>
                                </xsl:call-template>
                              </ns0:AdvanceRecurringChargeAllowedIndicator>
                              <xsl:variable name="cyclefee" select="ItemUDA[Name='Charge_Cycle_Fees']/NumberValue"/>
                              <xsl:if test="$cyclefee != ''">
                                <ns0:AdvanceRecurringChargeDuration>
                                  <xsl:value-of select="concat('P',ItemUDA[Name='Charge_Cycle_Fees']/NumberValue,substring(ItemUDA[Name='Charge_Cycle_Fee_UOM']/CharValue,1,1))"/>
                                </ns0:AdvanceRecurringChargeDuration>
                              </xsl:if>
                              <ns0:BillingDateRecurringChargeApplicationRequiredIndicator>
                                <xsl:call-template name="IndicatorFlag">
                                  <xsl:with-param name="value" select="ItemUDA[Name='Apply_Cycle_Fee']/CharValue"/>
                                </xsl:call-template>
                              </ns0:BillingDateRecurringChargeApplicationRequiredIndicator>							  
							  <!--MULTIPLEPRICELSIT CHANGES START 
							  <ns0:PriceListName>
								<xsl:value-of select="ItemUDA[Name='Pricelist_Name']/CharValue"/>
							  </ns0:PriceListName>
							  <ns0:PriceListDescription>
								<xsl:value-of select="ItemUDA[Name='Pricelist_Name']/DisplayValue"/>
							  </ns0:PriceListDescription>
							  MULTIPLEPRICELSIT CHANGES END --> 							  							  
				<xsl:if test="$PlanTier">
                              <ns0:RateDetail>
                                <xsl:for-each select="$PlanTier">
                                  <xsl:variable name="TierID" select="ItemUDA[Name='Tier_ID']/NumberValue"/>
                                  <!--<xsl:variable name='TierRPID' select="ItemUDA[Name='Rate_Plan_ID']/NumberValue"/>  -->
                                  <xsl:variable name="Restriction" select="ItemUDA[Name='Time_Day_Restrictions']/CharValue"/>
                                  <!--                        <xsl:variable name='PlanTierBI1' select='$PlanImpact[(ItemUDA/Name="Tier_ID") and (ItemUDA/NumberValue=$TierID)]'/>-->
                                  <xsl:variable name="PTBI" select="$PlanImpact[ItemUDA[Name=&quot;Tier_ID&quot;]/NumberValue=$TierID]"/>
                                  <xsl:variable name="PlanTierBI" select="$PTBI[ItemUDA[Name=&quot;Rate_Plan_ID&quot;]/NumberValue=$RatePlanID]"/>
                                  <xsl:if test="$PlanTierBI">
                                    <ns0:PlanTier>
                                      <corecom:Identification>
                                        <corecom:ID>
                                          <xsl:value-of select="ItemUDA[Name='Tier_Name']/CharValue"/>
                                        </corecom:ID>
                                        <corecom:ApplicationObjectKey>
                                          <corecom:ID>
                                            <xsl:value-of select="ItemUDA[Name='Tier_ID']/NumberValue"/>
                                          </corecom:ID>
                                        </corecom:ApplicationObjectKey>
                                      </corecom:Identification>
                                      <xsl:variable name="Effectivity_Mode" select="ItemUDA[Name='Effectivity_Mode']/CharValue"/>
                                      <ns0:EffectivityModeCode>
                                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PLANTIER_EFFECTIVITYMODE.dvm',$DVMSourceCol,$Effectivity_Mode,$DVMTargetCol,$Effectivity_Mode)"/>
                                      </ns0:EffectivityModeCode>
                                      <xsl:variable name="Time_Day_Restrictions" select="ItemUDA[Name='Time_Day_Restrictions']/CharValue"/>
                                      <ns0:RateRestrictionTypeCode>
                                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PLANTIER_RESTRICTIONTYPE.dvm',$DVMSourceCol,$Time_Day_Restrictions,$DVMTargetCol,$Time_Day_Restrictions)"/>
                                      </ns0:RateRestrictionTypeCode>
                                      <xsl:for-each select="$PlanTierBI">
                                        <xsl:variable name="Resource" select="ItemUDA[Name='Resource_ID']/CharValue"/>
                                        <xsl:variable name="CommonNCResource" select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/RESOURCE.dvm',$DVMSourceCol,$Resource,$DVMTargetCol,'')"/>
                                        <xsl:variable name="CommonCResource" select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CURRENCY_CODE.dvm',$DVMSourceCol,$Resource,$DVMTargetCol,'')"/>
                                        <xsl:variable name="CommonResource">
                                          <xsl:choose>
                                            <xsl:when test="$CommonNCResource != ''">
                                              <xsl:value-of select="$CommonNCResource"/>
                                            </xsl:when>
                                            <xsl:when test="$CommonCResource != ''">
                                              <xsl:value-of select="$CommonCResource"/>
                                            </xsl:when>
                                            <xsl:otherwise>
                                              <xsl:value-of select="$Resource"/>
                                            </xsl:otherwise>
                                          </xsl:choose>
                                        </xsl:variable>
                                        <ns0:PlanImpact>
                                          <xsl:variable name="UniqueBIID" select="concat($CommonResource, ':', ItemUDA[Name='Rate_Data_ID']/NumberValue, ':', ItemUDA[Name='Rate_Data_Min']/NumberValue, ':', ItemUDA[Name='Rate_Data_Max']/NumberValue)"/>
                                          <corecom:Identification>
                                            <corecom:ID>
                                              <xsl:value-of select="$UniqueBIID"/>
                                            </corecom:ID>
                                            <corecom:AlternateObjectKey>
                                              <corecom:ID>
                                                <xsl:value-of select="ItemUDA[Name='Serial_Number']/CharValue"/>
                                              </corecom:ID>
                                            </corecom:AlternateObjectKey>
                                          </corecom:Identification>
                                          <ns0:ScaledQuantity>
                                            <xsl:attribute name="unitCode">
                                              <xsl:value-of select="$CommonResource"/>
                                            </xsl:attribute>
                                            <xsl:value-of select="ItemUDA[Name='Scaled_Amount']/NumberValue"/>
                                          </ns0:ScaledQuantity>
                                          <ns0:FixedQuantity>
                                            <xsl:attribute name="unitCode">
                                              <xsl:value-of select="$CommonResource"/>
                                            </xsl:attribute>
                                            <xsl:value-of select="ItemUDA[Name='Fixed_Amount']/NumberValue"/>
                                          </ns0:FixedQuantity>
                                          <xsl:variable name="Units" select="ItemUDA[Name='Units']/CharValue"/>
                                          <ns0:ScaledUnit>
                                            <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PLANIMPACT_UNITCODE.dvm',$DVMSourceCol,$Units,$DVMTargetCol,$Units)"/>
                                          </ns0:ScaledUnit>
                                          <ns0:RateMinimumQuantity>
                                            <xsl:value-of select="ItemUDA[Name='Rate_Data_Min']/NumberValue"/>
                                          </ns0:RateMinimumQuantity>
                                          <ns0:RateMaximumQuantity>
                                            <xsl:value-of select="ItemUDA[Name='Rate_Data_Max']/NumberValue"/>
                                          </ns0:RateMaximumQuantity>
                                          <xsl:variable name="Impact_Category" select="ItemUDA[Name='Impact_Category']/CharValue"/>
                                          <ns0:ImpactClassificationCode>
                                            <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PRICE_IMPACTCLASSIFICATIONCODE.dvm',$DVMSourceCol,$Impact_Category,$DVMTargetCol,$Impact_Category)"/>
                                          </ns0:ImpactClassificationCode>
                                          <ns0:ProrationIndicator>
                                            <xsl:call-template name="IndicatorFlag">
                                              <xsl:with-param name="value" select="ItemUDA[Name='Proratable']/CharValue"/>
                                            </xsl:call-template>
                                          </ns0:ProrationIndicator>
                                          <ns0:DiscountableIndicator>
                                            <xsl:call-template name="IndicatorFlag">
                                              <xsl:with-param name="value" select="ItemUDA[Name='Discountable']/CharValue"/>
                                            </xsl:call-template>
                                          </ns0:DiscountableIndicator>
                                          <ns0:SponsoringAllowedIndicator>
                                            <xsl:call-template name="IndicatorFlag">
                                              <xsl:with-param name="value" select="ItemUDA[Name='Sponsorable']/CharValue"/>
                                            </xsl:call-template>
                                          </ns0:SponsoringAllowedIndicator>
                                          <ns0:EffectivityEnabledIndicator>
                                            <xsl:call-template name="IndicatorFlag">
                                              <xsl:with-param name="value" select="ItemUDA[Name='Grantable']/CharValue"/>
                                            </xsl:call-template>
                                          </ns0:EffectivityEnabledIndicator>
                                          <!-- <xsl:variable name="Pricing_Commit_Type" select="ItemUDA[Name='Pricing_Commit_Type']/CharValue"/>
                                <ns0:OverrideTypeCode>
                                    <xsl:value-of select="orcl:lookup-dvm('PRICE_OVERRIDETYPECODE',$DVMSourceCol,$Pricing_Commit_Type,$DVMTargetCol,$Pricing_Commit_Type)"/>
                                </ns0:OverrideTypeCode>
                                <xsl:variable name="Dynamic_Discount_Method" select="ItemUDA[Name='Dynamic_Discount_Method']/CharValue"/>
                                <ns0:DiscountOverrideTypeCode>
                                    <xsl:value-of select="orcl:lookup-dvm('PRICE_DISCOUNTTYPECODE',$DVMSourceCol,$Dynamic_Discount_Method,$DVMTargetCol,$Dynamic_Discount_Method)"/>
                                </ns0:DiscountOverrideTypeCode>-->
                                          <ns0:MarkupPricePercent>
                                            <xsl:value-of select="ItemUDA[Name='Service_Price_Percent']/NumberValue"/>
                                          </ns0:MarkupPricePercent>
                                          <xsl:variable name="Service_Pricing_Method" select="ItemUDA[Name='Service_Pricing_Method']/CharValue"/>
                                          <ns0:MarkupPriceBasisCode>
                                            <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PRICE_MARKUPBASISCODE.dvm',$DVMSourceCol,$Service_Pricing_Method,$DVMTargetCol,$Service_Pricing_Method)"/>
                                          </ns0:MarkupPriceBasisCode>
						
						<!-- Coding for Bethpage BI.AIA.01 starts here -->
                                          <ns0:StartDateSelector>
                                            <xsl:value-of select="ItemUDA[Name='Start_Date_Selector']/CharValue"/>
                                          </ns0:StartDateSelector>
                                          <ns0:StartRelativeUnit>
                                            <xsl:value-of select="ItemUDA[Name='Start_Relative_Unit']/NumberValue"/>
                                          </ns0:StartRelativeUnit>
                                          <ns0:StartRelativeUOM>
                                            <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PLANIMPACT_UNITCODE.dvm',$DVMSourceCol,ItemUDA[Name='Start_Relative_UOM']/CharValue,$DVMTargetCol,ItemUDA[Name='Start_Relative_UOM']/CharValue)"/>
                                          </ns0:StartRelativeUOM>
                                          <ns0:EndDateSelector>
                                            <xsl:value-of select="ItemUDA[Name='End_Date_Selector']/CharValue"/>
                                          </ns0:EndDateSelector>
                                          <ns0:EndRelativeUnit>
                                            <xsl:value-of select="ItemUDA[Name='End_Relative_Unit']/NumberValue"/>
                                          </ns0:EndRelativeUnit>
                                          <ns0:EndRelativeUOM>
                                            <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PLANIMPACT_UNITCODE.dvm',$DVMSourceCol,ItemUDA[Name='End_Relative_UOM']/CharValue,$DVMTargetCol,ItemUDA[Name='End_Relative_UOM']/CharValue)"/>
                                          </ns0:EndRelativeUOM>
                                          <!-- ends here -->

                                          <corecom:GLAccount>
                                            <corecom:Identification>
                                              <xsl:variable name="GLID" select="ItemUDA[Name='GLID']/CharValue"/>
                                              <corecom:ID>
                                                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/GL_CODE.dvm',$DVMSourceCol,$GLID,$DVMTargetCol,$GLID)"/>
                                              </corecom:ID>
                                            </corecom:Identification>
                                          </corecom:GLAccount>
                                          <corecom:PromotionUnitPrice>
                                            <corecom:Amount>
                                              <xsl:value-of select="ItemUDA[Name='Promotional_Price']/NumberValue"/>
                                            </corecom:Amount>
                                          </corecom:PromotionUnitPrice>
                                          <corecom:EffectiveTimePeriod>
                                            <corecom:StartDateTime>
                                              <xsl:call-template name="formatUDADate">
                                                <xsl:with-param name="formatDateParam" select="ItemUDA[Name='Start_Date']/DatetimeValue"/>
                                              </xsl:call-template>
                                            </corecom:StartDateTime>
                                            <corecom:EndDateTime>
                                              <xsl:call-template name="formatUDADate">
                                                <xsl:with-param name="formatDateParam" select="ItemUDA[Name='End_Date']/DatetimeValue"/>
                                              </xsl:call-template>
                                            </corecom:EndDateTime>
                                          </corecom:EffectiveTimePeriod>
                                        </ns0:PlanImpact>
                                      </xsl:for-each>
                                      <!-- <xsl:for-each select='$PlanImpact'>
 
                           <xsl:variable name="PlanImpactTierID" select="ItemUDA[Name='Tier_ID']/NumberValue"/>
                           <xsl:variable name="PlanImpactRateDataID" select="ItemUDA[Name='Rate_Data_ID']/NumberValue"/>
                           <xsl:variable name="PlanImpactDayTimeRangeID" select="ItemUDA[Name='Day_Time_Range_ID']/NumberValue"/>
                           <xsl:variable name="PlanImpactWeekRangeID" select="ItemUDA[Name='Day_of_the_Week_Range_ID']/NumberValue"/>
                           <xsl:variable name="PlanImpactID" select="ItemUDA[Name='Resource_ID']/CharValue"/> -->
                                      <xsl:if test="$Restriction = &quot;NO_RESTRICTIONS&quot;">
                                        <xsl:for-each select="$RateData">
                                          <xsl:variable name="RateDataID" select="ItemUDA[Name=&quot;Rate_Data_ID&quot;]/NumberValue"/>
                                          <xsl:variable name="RateDataBI1" select="$PlanTierBI[ItemUDA[Name=&quot;Rate_Data_ID&quot;]/NumberValue=$RateDataID]"/>
                                          <xsl:variable name="RateDataBI2" select="$RateDataBI1[ItemUDA[Name=&quot;Day_Time_Range_ID&quot;]/NumberValue=&quot;&quot;]"/>
                                          <xsl:variable name="RateDataBI" select="$RateDataBI2[ItemUDA[Name=&quot;Day_of_the_Week_Range_ID&quot;]/NumberValue=&quot;&quot;]"/>
                                          <xsl:if test="$RateDataBI1/ItemUDA">
                                            <ns0:PriceListUnrestrictedRateData>
                                              <corecom:Identification>
                                                <corecom:ID>
                                                  <xsl:value-of select="ItemUDA[Name='Rate_Data_ID']/NumberValue"/>
                                                </corecom:ID>
                                              </corecom:Identification>
                                              <ns0:PriceListRateData>
                                                <ns0:Name>
                                                  <xsl:value-of select="ItemUDA[Name='Rate_Data_Name']/CharValue"/>
                                                </ns0:Name>
                                                <ns0:OverridenCreditLimitIndicator>
                                                  <xsl:call-template name="IndicatorFlag">
                                                    <xsl:with-param name="value" select="ItemUDA[Name='Override_Credit_Limit']/CharValue"/>
                                                  </xsl:call-template>
                                                </ns0:OverridenCreditLimitIndicator>
                                                <xsl:variable name="Qty_Disc_Bracket_Basis" select="ItemUDA[Name='Qty_Dis_Bracket_Basis']/CharValue"/>
                                                <ns0:DiscountBracketBasisCode>
                                                  <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/RATEDATA_DISCOUNTBRACKETCODE.dvm',$DVMSourceCol,$Qty_Disc_Bracket_Basis,$DVMTargetCol,$Qty_Disc_Bracket_Basis)"/>
                                                </ns0:DiscountBracketBasisCode>
                                                <xsl:variable name="Qty_Disc_Bracket_Basis_Resource" select="ItemUDA[Name='Qty_Dis_Bracket_Basis_Resource']/CharValue"/>
                                                <xsl:variable name="CommonNCDBResource" select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/RESOURCE.dvm',$DVMSourceCol,$Qty_Disc_Bracket_Basis_Resource,$DVMTargetCol,'')"/>
                                                <xsl:variable name="CommonCDBResource" select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CURRENCY_CODE.dvm',$DVMSourceCol,$Qty_Disc_Bracket_Basis_Resource,$DVMTargetCol,'')"/>
                                                <xsl:variable name="CommonDBResource">
                                                  <xsl:choose>
                                                    <xsl:when test="$CommonNCDBResource != ''">
                                                      <xsl:value-of select="$CommonNCDBResource"/>
                                                    </xsl:when>
                                                    <xsl:when test="$CommonCDBResource != ''">
                                                      <xsl:value-of select="$CommonCDBResource"/>
                                                    </xsl:when>
                                                    <xsl:otherwise>
                                                      <xsl:value-of select="$Qty_Disc_Bracket_Basis_Resource"/>
                                                    </xsl:otherwise>
                                                  </xsl:choose>
                                                </xsl:variable>
                                                <ns0:DiscountBracketBasisResourceCode>
                                                  <xsl:value-of select="$CommonDBResource"/>
                                                </ns0:DiscountBracketBasisResourceCode>
                                                <xsl:variable name="Pur_Proration" select="ItemUDA[Name='Pur_Proration']/CharValue"/>
                                                <ns0:PurchaseRecurringChargeProrationCode>
                                                  <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/RATEDATA_PURCHASEPRORATIONCODE.dvm',$DVMSourceCol,$Pur_Proration,$DVMTargetCol,$Pur_Proration)"/>
                                                </ns0:PurchaseRecurringChargeProrationCode>
                                                <xsl:variable name="Cancel_Proration" select="ItemUDA[Name='Cancel_Proration']/CharValue"/>
                                                <ns0:CancelationRecurringChargeProrationCode>
                                                  <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/RATEDATA_CANCELATIONPRORATIONCODE.dvm',$DVMSourceCol,$Cancel_Proration,$DVMTargetCol,$Cancel_Proration)"/>
                                                </ns0:CancelationRecurringChargeProrationCode>
                                                <xsl:for-each select="$RateDataBI1">
                                                  <xsl:variable name="Resource1" select="ItemUDA[Name='Resource_ID']/CharValue"/>
                                                  <xsl:variable name="CommonNCResource1" select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/RESOURCE.dvm',$DVMSourceCol,$Resource1,$DVMTargetCol,'')"/>
                                                  <xsl:variable name="CommonCResource1" select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CURRENCY_CODE.dvm',$DVMSourceCol,$Resource1,$DVMTargetCol,'')"/>
                                                  <xsl:variable name="CommonResource1">
                                                    <xsl:choose>
                                                      <xsl:when test="$CommonNCResource1 != ''">
                                                        <xsl:value-of select="$CommonNCResource1"/>
                                                      </xsl:when>
                                                      <xsl:when test="$CommonCResource1 != ''">
                                                        <xsl:value-of select="$CommonCResource1"/>
                                                      </xsl:when>
                                                      <xsl:otherwise>
                                                        <xsl:value-of select="$Resource1"/>
                                                      </xsl:otherwise>
                                                    </xsl:choose>
                                                  </xsl:variable>
                                                  <ns0:PriceListRateDataPlanImpact>
                                                    <xsl:variable name="UniqueRDBIID" select="concat($CommonResource1, ':', ItemUDA[Name='Rate_Data_ID']/NumberValue, ':', ItemUDA[Name='Rate_Data_Min']/NumberValue, ':', ItemUDA[Name='Rate_Data_Max']/NumberValue)"/>
                                                    <corecom:PlanImpactIdentification>
                                                      <corecom:ID>
                                                        <xsl:value-of select="$UniqueRDBIID"/>
                                                      </corecom:ID>
                                                      <corecom:AlternateObjectKey>
                                                        <corecom:ID>
                                                          <xsl:value-of select="ItemUDA[Name='Serial_Number']/CharValue"/>
                                                        </corecom:ID>
                                                      </corecom:AlternateObjectKey>
                                                    </corecom:PlanImpactIdentification>
                                                  </ns0:PriceListRateDataPlanImpact>
                                                </xsl:for-each>
                                              </ns0:PriceListRateData>
                                            </ns0:PriceListUnrestrictedRateData>
                                            <xsl:call-template name="PriceListUnrestrictedRateDataType_ext"/>
                                          </xsl:if>
                                        </xsl:for-each>
                                      </xsl:if>
                                      <xsl:if test="$Restriction != &quot;NO_RESTRICTIONS&quot;">
                                        <xsl:for-each select="$DayTimeRange">
                                          <!--<xsl:for-each select="$DayTimeRange[not(ItemUDA[Name='Day_Time_Range_ID']/NumberValue = preceding-sibling::./ItemUDA[Name='Day_Time_Range_ID']/NumberValue)]">-->
                                          <xsl:variable name="DayTimeRangeID" select="ItemUDA[Name='Day_Time_Range_ID']/NumberValue"/>
                                          <xsl:variable name="DayTimeRangeBI" select="$PlanTierBI[ItemUDA[Name=&quot;Day_Time_Range_ID&quot;]/NumberValue=$DayTimeRangeID]"/>
                                          <xsl:if test="$DayTimeRangeBI/ItemUDA">
                                            <xsl:variable name="DTRangeID" select="ItemUDA[Name='Day_Time_Range_ID']/NumberValue"/>
                                            <xsl:variable name="DTRange" select="."/>
                                            <ns0:PriceListDailyRateDataRestriction>
                                              <corecom:Identification>
                                                <corecom:ID>
                                                  <xsl:value-of select="$DTRangeID"/>
                                                </corecom:ID>
                                              </corecom:Identification>
                                              <ns0:Name>
                                                <xsl:value-of select="ItemUDA[Name='Day_Range_Name']/CharValue"/>
                                              </ns0:Name>
                                              <corecom:EffectiveTimePeriod>
                                                <corecom:StartDateTime>
                                                  <xsl:call-template name="formatUDADateWithoutConversion">
                                                    <xsl:with-param name="formatDateParamWithoutConversion" select="ItemUDA[Name='Day_Range_Start_Date2']/DateValue"/>
                                                  </xsl:call-template>
                                                </corecom:StartDateTime>
                                                <corecom:EndDateTime>
                                                  <xsl:call-template name="formatUDADateWithoutConversion">
                                                    <xsl:with-param name="formatDateParamWithoutConversion" select="ItemUDA[Name='Day_Range_End_Date2']/DateValue"/>
                                                  </xsl:call-template>
                                                </corecom:EndDateTime>
                                              </corecom:EffectiveTimePeriod>
                                              <xsl:for-each select="$RateData">
                                                <xsl:variable name="RDID" select="ItemUDA[Name=&quot;Rate_Data_ID&quot;]/NumberValue"/>
                                                <xsl:variable name="DRRateDataBI" select="$DayTimeRangeBI[ItemUDA[Name=&quot;Rate_Data_ID&quot;]/NumberValue=$RDID]"/>
                                                <xsl:if test="$DRRateDataBI/ItemUDA">
                                                  <ns0:PriceListDailyRestrictedRateData>
                                                    <corecom:Identification>
                                                      <corecom:ID>
                                                        <xsl:value-of select="ItemUDA[Name='Rate_Data_ID']/NumberValue"/>
                                                      </corecom:ID>
                                                    </corecom:Identification>
                                                    <ns0:PriceListRateData>
                                                      <ns0:Name>
                                                        <xsl:value-of select="ItemUDA[Name='Rate_Data_Name']/CharValue"/>
                                                      </ns0:Name>
                                                      <ns0:OverridenCreditLimitIndicator>
                                                        <xsl:call-template name="IndicatorFlag">
                                                          <xsl:with-param name="value" select="ItemUDA[Name='Override_Credit_Limit']/CharValue"/>
                                                        </xsl:call-template>
                                                      </ns0:OverridenCreditLimitIndicator>
                                                      <xsl:variable name="DRQty_Disc_Bracket_Basis" select="ItemUDA[Name='Qty_Dis_Bracket_Basis']/CharValue"/>
                                                      <ns0:DiscountBracketBasisCode>
                                                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/RATEDATA_DISCOUNTBRACKETCODE.dvm',$DVMSourceCol,$DRQty_Disc_Bracket_Basis,$DVMTargetCol,$DRQty_Disc_Bracket_Basis)"/>
                                                      </ns0:DiscountBracketBasisCode>
                                                      <xsl:variable name="DRQty_Disc_Bracket_Basis_Resource" select="ItemUDA[Name='Qty_Dis_Bracket_Basis_Resource']/CharValue"/>
                                                      <xsl:variable name="DRCommonNCDBResource" select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/RESOURCE.dvm',$DVMSourceCol,$DRQty_Disc_Bracket_Basis_Resource,$DVMTargetCol,'')"/>
                                                      <xsl:variable name="DRCommonCDBResource" select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CURRENCY_CODE.dvm',$DVMSourceCol,$DRQty_Disc_Bracket_Basis_Resource,$DVMTargetCol,'')"/>
                                                      <xsl:variable name="DRCommonDBResource">
                                                        <xsl:choose>
                                                          <xsl:when test="$DRCommonNCDBResource != ''">
                                                            <xsl:value-of select="$DRCommonNCDBResource"/>
                                                          </xsl:when>
                                                          <xsl:when test="$DRCommonCDBResource != ''">
                                                            <xsl:value-of select="$DRCommonCDBResource"/>
                                                          </xsl:when>
                                                          <xsl:otherwise>
                                                            <xsl:value-of select="$DRQty_Disc_Bracket_Basis_Resource"/>
                                                          </xsl:otherwise>
                                                        </xsl:choose>
                                                      </xsl:variable>
                                                      <ns0:DiscountBracketBasisResourceCode>
                                                        <xsl:value-of select="$DRCommonDBResource"/>
                                                      </ns0:DiscountBracketBasisResourceCode>
                                                      <xsl:variable name="DRPur_Proration" select="ItemUDA[Name='Pur_Proration']/CharValue"/>
                                                      <ns0:PurchaseRecurringChargeProrationCode>
                                                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/RATEDATA_PURCHASEPRORATIONCODE.dvm',$DVMSourceCol,$DRPur_Proration,$DVMTargetCol,$DRPur_Proration)"/>
                                                      </ns0:PurchaseRecurringChargeProrationCode>
                                                      <xsl:variable name="DRCancel_Proration" select="ItemUDA[Name='Cancel_Proration']/CharValue"/>
                                                      <ns0:CancelationRecurringChargeProrationCode>
                                                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/RATEDATA_CANCELATIONPRORATIONCODE.dvm',$DVMSourceCol,$DRCancel_Proration,$DVMTargetCol,$DRCancel_Proration)"/>
                                                      </ns0:CancelationRecurringChargeProrationCode>
                                                      <xsl:for-each select="$DRRateDataBI">
                                                        <xsl:variable name="Resource2" select="ItemUDA[Name='Resource_ID']/CharValue"/>
                                                        <xsl:variable name="CommonNCResource2" select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/RESOURCE.dvm',$DVMSourceCol,$Resource2,$DVMTargetCol,'')"/>
                                                        <xsl:variable name="CommonCResource2" select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CURRENCY_CODE.dvm',$DVMSourceCol,$Resource2,$DVMTargetCol,'')"/>
                                                        <xsl:variable name="CommonResource2">
                                                          <xsl:choose>
                                                            <xsl:when test="$CommonNCResource2 != ''">
                                                              <xsl:value-of select="$CommonNCResource2"/>
                                                            </xsl:when>
                                                            <xsl:when test="$CommonCResource2 != ''">
                                                              <xsl:value-of select="$CommonCResource2"/>
                                                            </xsl:when>
                                                            <xsl:otherwise>
                                                              <xsl:value-of select="$Resource2"/>
                                                            </xsl:otherwise>
                                                          </xsl:choose>
                                                        </xsl:variable>
                                                        <ns0:PriceListRateDataPlanImpact>
                                                          <xsl:variable name="UniqueDRRDBIID" select="concat($CommonResource2, ':', ItemUDA[Name='Rate_Data_ID']/NumberValue, ':', ItemUDA[Name='Rate_Data_Min']/NumberValue, ':', ItemUDA[Name='Rate_Data_Max']/NumberValue)"/>
                                                          <corecom:PlanImpactIdentification>
                                                            <corecom:ID>
                                                              <xsl:value-of select="$UniqueDRRDBIID"/>
                                                            </corecom:ID>
                                                            <corecom:AlternateObjectKey>
                                                              <corecom:ID>
                                                                <xsl:value-of select="ItemUDA[Name='Serial_Number']/CharValue"/>
                                                              </corecom:ID>
                                                            </corecom:AlternateObjectKey>
                                                          </corecom:PlanImpactIdentification>
                                                        </ns0:PriceListRateDataPlanImpact>
                                                      </xsl:for-each>
                                                    </ns0:PriceListRateData>
                                                    <xsl:variable name="TimeSlotFlag" select="$DTRange/ItemUDA[Name='Use_Time_Day_Ranges']/CharValue"/>
                                                    <xsl:variable name="TimeSlotSTime" select="$DTRange/ItemUDA[Name='Start_Time2']/CharValue"/>
                                                    <xsl:if test="$TimeSlotSTime != ''">
                                                      <ns0:PriceListTimeSlot>
                                                        <ns0:Name>
                                                          <xsl:value-of select="$DTRange/ItemUDA[Name='Time_Day_Range_Name']/CharValue"/>
                                                        </ns0:Name>
                                                        <corecom:TimeDuration>
                                                          <!--<xsl:variable name="starttime">
                                                            <xsl:value-of select="$DTRange/ItemUDA[Name='Start_Time2']/CharValue"/>
                                                          </xsl:variable>
                                                          <xsl:if test="string-length($starttime) > number(10)">-->
                                                            <corecom:StartTime>
                                                             <xsl:value-of select="$TimeSlotSTime"/>
                                                              <!--<xsl:value-of select="concat(substring($starttime,12,8),$offset)"/>-->
                                                            </corecom:StartTime>
                                                          <!--</xsl:if>-->
                                                          <xsl:variable name="endtime">
                                                            <xsl:value-of select="$DTRange/ItemUDA[Name='End_Time2']/CharValue"/>
                                                          </xsl:variable>
                                                         <!-- <xsl:if test="string-length($endtime) > number(10)">-->
                                                            <corecom:EndTime>
                                                            <xsl:value-of select="$endtime"/>
                                                             <!-- <xsl:value-of select="concat(substring($endtime,12,8),$offset)"/>-->
                                                            </corecom:EndTime>
                                                         <!-- </xsl:if>-->
                                                        </corecom:TimeDuration>
                                                      </ns0:PriceListTimeSlot>
                                                    </xsl:if>
                                                  </ns0:PriceListDailyRestrictedRateData>
                                                </xsl:if>
                                              </xsl:for-each>
                                            </ns0:PriceListDailyRateDataRestriction>
                                          </xsl:if>
                                        </xsl:for-each>
                                        <xsl:for-each select="$WeekRange">
                                          <!--<xsl:for-each select="$WeekRange[not(ItemUDA[Name='Day_of_the_Week_Range_ID']/NumberValue = preceding-sibling::./ItemUDA[Name='Day_of_the_Week_Range_ID']/NumberValue)]">                            -->
                                          <xsl:variable name="WeekRangeID" select="ItemUDA[Name='Day_of_the_Week_Range_ID']/NumberValue"/>
                                          <xsl:variable name="WeekRangeBI" select="$PlanTierBI[ItemUDA[Name=&quot;Day_of_the_Week_Range_ID&quot;]/NumberValue=$WeekRangeID]"/>
                                          <xsl:if test="$WeekRangeBI/ItemUDA">
                                            <xsl:variable name="WRangeID" select="ItemUDA[Name='Day_of_the_Week_Range_ID']/NumberValue"/>
                                            <xsl:variable name="WRange" select="."/>
                                            <ns0:PriceListWeeklyRateDataRestriction>
                                              <corecom:Identification>
                                                <corecom:ID>
                                                  <xsl:value-of select="$WRangeID"/>
                                                </corecom:ID>
                                              </corecom:Identification>
                                              <ns0:Name>
                                                <xsl:value-of select="ItemUDA[Name='Day_of_the_Week_Range_Name']/CharValue"/>
                                              </ns0:Name>
                                              <xsl:variable name="Start_Day_of_the_Week" select="ItemUDA[Name='Start_Day_of_the_Week']/CharValue"/>
                                              <ns0:StartDayOfWeekCode>
                                                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/DAYS_OF_WEEK.dvm',$DVMSourceCol,$Start_Day_of_the_Week,$DVMTargetCol,$Start_Day_of_the_Week)"/>
                                              </ns0:StartDayOfWeekCode>
                                              <xsl:variable name="End_Day_of_the_Week" select="ItemUDA[Name='End_Day_of_the_Week']/CharValue"/>
                                              <ns0:EndDayOfWeekCode>
                                                <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/DAYS_OF_WEEK.dvm',$DVMSourceCol,$End_Day_of_the_Week,$DVMTargetCol,$End_Day_of_the_Week)"/>
                                              </ns0:EndDayOfWeekCode>
                                              <corecom:EffectiveTimePeriod>
                                                <corecom:StartDateTime>
                                                  <xsl:call-template name="formatUDADateWithoutConversion">
                                                    <xsl:with-param name="formatDateParamWithoutConversion" select="ItemUDA[Name='Start_Date_for_the_Week2']/DateValue"/>
                                                  </xsl:call-template>
                                                </corecom:StartDateTime>
                                                <corecom:EndDateTime>
                                                  <xsl:call-template name="formatUDADateWithoutConversion">
                                                    <xsl:with-param name="formatDateParamWithoutConversion" select="ItemUDA[Name='End_Date_for_the_Week2']/DateValue"/>
                                                  </xsl:call-template>
                                                </corecom:EndDateTime>
                                              </corecom:EffectiveTimePeriod>
                                              <ns0:PriceListWeeklyRestrictedRateData>
                                                <xsl:for-each select="$RateData">
                                                  <xsl:variable name="RDataID" select="ItemUDA[Name=&quot;Rate_Data_ID&quot;]/NumberValue"/>
                                                  <xsl:variable name="WRRateDataBI" select="$WeekRangeBI[ItemUDA[Name=&quot;Rate_Data_ID&quot;]/NumberValue=$RDataID]"/>
                                                  <xsl:if test="$WRRateDataBI/ItemUDA">
                                                    <corecom:Identification>
                                                      <corecom:ID>
                                                        <xsl:value-of select="ItemUDA[Name='Rate_Data_ID']/NumberValue"/>
                                                      </corecom:ID>
                                                    </corecom:Identification>
                                                    <ns0:PriceListRateData>
                                                      <ns0:Name>
                                                        <xsl:value-of select="ItemUDA[Name='Rate_Data_Name']/CharValue"/>
                                                      </ns0:Name>
                                                      <ns0:OverridenCreditLimitIndicator>
                                                        <xsl:call-template name="IndicatorFlag">
                                                          <xsl:with-param name="value" select="ItemUDA[Name='Override_Credit_Limit']/CharValue"/>
                                                        </xsl:call-template>
                                                      </ns0:OverridenCreditLimitIndicator>
                                                      <xsl:variable name="WRQty_Disc_Bracket_Basis" select="ItemUDA[Name='Qty_Dis_Bracket_Basis']/CharValue"/>
                                                      <ns0:DiscountBracketBasisCode>
                                                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/RATEDATA_DISCOUNTBRACKETCODE.dvm',$DVMSourceCol,$WRQty_Disc_Bracket_Basis,$DVMTargetCol,$WRQty_Disc_Bracket_Basis)"/>
                                                      </ns0:DiscountBracketBasisCode>
                                                      <xsl:variable name="WRQty_Disc_Bracket_Basis_Resource" select="ItemUDA[Name='Qty_Dis_Bracket_Basis_Resource']/CharValue"/>
                                                      <xsl:variable name="WRCommonNCDBResource" select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/RESOURCE.dvm',$DVMSourceCol,$WRQty_Disc_Bracket_Basis_Resource,$DVMTargetCol,'')"/>
                                                      <xsl:variable name="WRCommonCDBResource" select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CURRENCY_CODE.dvm',$DVMSourceCol,$WRQty_Disc_Bracket_Basis_Resource,$DVMTargetCol,'')"/>
                                                      <xsl:variable name="WRCommonDBResource">
                                                        <xsl:choose>
                                                          <xsl:when test="$WRCommonNCDBResource != ''">
                                                            <xsl:value-of select="$WRCommonNCDBResource"/>
                                                          </xsl:when>
                                                          <xsl:when test="$WRCommonCDBResource != ''">
                                                            <xsl:value-of select="$WRCommonCDBResource"/>
                                                          </xsl:when>
                                                          <xsl:otherwise>
                                                            <xsl:value-of select="$WRQty_Disc_Bracket_Basis_Resource"/>
                                                          </xsl:otherwise>
                                                        </xsl:choose>
                                                      </xsl:variable>
                                                      <ns0:DiscountBracketBasisResourceCode>
                                                        <xsl:value-of select="$WRCommonDBResource"/>
                                                      </ns0:DiscountBracketBasisResourceCode>
                                                      <xsl:variable name="WRPur_Proration" select="ItemUDA[Name='Pur_Proration']/CharValue"/>
                                                      <ns0:PurchaseRecurringChargeProrationCode>
                                                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/RATEDATA_PURCHASEPRORATIONCODE.dvm',$DVMSourceCol,$WRPur_Proration,$DVMTargetCol,$WRPur_Proration)"/>
                                                      </ns0:PurchaseRecurringChargeProrationCode>
                                                      <xsl:variable name="WRCancel_Proration" select="ItemUDA[Name='Cancel_Proration']/CharValue"/>
                                                      <ns0:CancelationRecurringChargeProrationCode>
                                                        <xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/RATEDATA_CANCELATIONPRORATIONCODE.dvm',$DVMSourceCol,$WRCancel_Proration,$DVMTargetCol,$WRCancel_Proration)"/>
                                                      </ns0:CancelationRecurringChargeProrationCode>
                                                      <xsl:for-each select="$WRRateDataBI">
                                                        <xsl:variable name="Resource3" select="ItemUDA[Name='Resource_ID']/CharValue"/>
                                                        <xsl:variable name="CommonNCResource3" select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/RESOURCE.dvm',$DVMSourceCol,$Resource3,$DVMTargetCol,'')"/>
                                                        <xsl:variable name="CommonCResource3" select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CURRENCY_CODE.dvm',$DVMSourceCol,$Resource3,$DVMTargetCol,'')"/>
                                                        <xsl:variable name="CommonResource3">
                                                          <xsl:choose>
                                                            <xsl:when test="$CommonNCResource3 != ''">
                                                              <xsl:value-of select="$CommonNCResource3"/>
                                                            </xsl:when>
                                                            <xsl:when test="$CommonCResource3 != ''">
                                                              <xsl:value-of select="$CommonCResource3"/>
                                                            </xsl:when>
                                                            <xsl:otherwise>
                                                              <xsl:value-of select="$Resource3"/>
                                                            </xsl:otherwise>
                                                          </xsl:choose>
                                                        </xsl:variable>
                                                        <ns0:PriceListRateDataPlanImpact>
                                                          <xsl:variable name="UniqueWRRDBIID" select="concat($CommonResource3, ':', ItemUDA[Name='Rate_Data_ID']/NumberValue, ':', ItemUDA[Name='Rate_Data_Min']/NumberValue, ':', ItemUDA[Name='Rate_Data_Max']/NumberValue)"/>
                                                          <corecom:PlanImpactIdentification>
                                                            <corecom:ID>
                                                              <xsl:value-of select="$UniqueWRRDBIID"/>
                                                            </corecom:ID>
                                                            <corecom:AlternateObjectKey>
                                                              <corecom:ID>
                                                                <xsl:value-of select="ItemUDA[Name='Serial_Number']/CharValue"/>
                                                              </corecom:ID>
                                                            </corecom:AlternateObjectKey>
                                                          </corecom:PlanImpactIdentification>
                                                        </ns0:PriceListRateDataPlanImpact>
                                                      </xsl:for-each>
                                                    </ns0:PriceListRateData>
                                                  </xsl:if>
                                                </xsl:for-each>
                                                <xsl:variable name="WRTimeSlotFlag" select="$WRange/ItemUDA[Name='Use_Time_in_Day_of_the_Week']/CharValue"/>
                                                <xsl:variable name="WRTimeSTime" select="$WRange/ItemUDA[Name='Start_Time_in_Day_of_the_Week2']/CharValue"/>
                                                <xsl:if test="$WRTimeSTime !=''">
                                                  <ns0:PriceListTimeSlot>
                                                    <ns0:Name>
                                                      <xsl:value-of select="$WRange/ItemUDA[Name='Time_in_Day_of_week_range_name']/CharValue"/>
                                                    </ns0:Name>
                                                    <corecom:TimeDuration>
                                                      <!--<xsl:variable name="wstarttime">
                                                        <xsl:value-of select="$WRange/ItemUDA[Name='Start_Time_in_Day_of_the_Week2']/CharValue"/>
                                                      </xsl:variable>
                                                      <xsl:if test="string-length($wstarttime) > number(10)">-->
                                                        <corecom:StartTime>
                                                        <xsl:value-of select="$WRTimeSTime"/>
                                                         <!-- <xsl:value-of select="concat(substring($wstarttime,12,8),$offset)"/>-->
                                                        </corecom:StartTime>
                                                     <!-- </xsl:if>-->
                                                      <xsl:variable name="wendtime">
                                                        <xsl:value-of select="$WRange/ItemUDA[Name='End_Time_in_Day_of_the_Week2']/CharValue"/>
                                                      </xsl:variable>
                                                     <!-- <xsl:if test="string-length($wendtime) > number(10)">-->
                                                        <corecom:EndTime>
                                                        <xsl:value-of select="$wendtime"/>
                                                          <!--<xsl:value-of select="concat(substring($wendtime,12,8),$offset)"/>-->
                                                        </corecom:EndTime>
                                                      <!--</xsl:if>-->
                                                    </corecom:TimeDuration>
                                                  </ns0:PriceListTimeSlot>
                                                </xsl:if>
                                              </ns0:PriceListWeeklyRestrictedRateData>
                                            </ns0:PriceListWeeklyRateDataRestriction>
                                          </xsl:if>
                                        </xsl:for-each>
                                      </xsl:if>
                                      <xsl:variable name="EffectivityMode" select="ItemUDA[Name='Effectivity_Mode']/CharValue"/>
                                      <xsl:if test="$EffectivityMode = &quot;ABSOLUTE&quot;">
                                        <corecom:EffectiveTimePeriod>
                                          <corecom:StartDateTime>
                                            <xsl:call-template name="formatUDADate">
                                              <xsl:with-param name="formatDateParam" select="ItemUDA[Name='Start_Date_Time']/DatetimeValue"/>
                                            </xsl:call-template>
                                          </corecom:StartDateTime>
                                          <corecom:EndDateTime>
                                            <xsl:call-template name="formatUDADate">
                                              <xsl:with-param name="formatDateParam" select="ItemUDA[Name='End_Date_Time']/DatetimeValue"/>
                                            </xsl:call-template>
                                          </corecom:EndDateTime>
                                        </corecom:EffectiveTimePeriod>
                                      </xsl:if>
                                      <xsl:if test="$EffectivityMode = &quot;RELATIVE&quot;">
                                        <corecom:RelativeEffectiveTimePeriod>
                                          <xsl:variable name="relativestart" select="ItemUDA[Name='Relative_Start']/NumberValue"/>
                                          <corecom:RelativeStartDuration>
                                            <xsl:if test="$relativestart != '' ">
                                              <xsl:value-of select="concat('P',$relativestart,substring(ItemUDA[Name='Relative_Start_UOM']/CharValue,1,1))"/>
                                            </xsl:if>
                                          </corecom:RelativeStartDuration>
                                          <xsl:variable name="relativeend" select="ItemUDA[Name='Relative_End']/NumberValue"/>
                                          <corecom:RelativeEndDuration>
                                            <xsl:if test="$relativeend != '' ">
                                              <xsl:value-of select="concat('P',$relativeend,substring(ItemUDA[Name='Relative_End_UOM']/CharValue,1,1))"/>
                                            </xsl:if>
                                          </corecom:RelativeEndDuration>
                                        </corecom:RelativeEffectiveTimePeriod>
                                      </xsl:if>
                                    </ns0:PlanTier>
                                  </xsl:if>
                                </xsl:for-each>
                              </ns0:RateDetail>
					</xsl:if>
                              <ns0:PriceListRatePlanSelector>
                                <corecom:Identification>
                                  <corecom:ID>
                                    <xsl:value-of select="ItemUDA[Name='Rate_Plan_Selector_ID']/NumberValue"/>
                                  </corecom:ID>
                                </corecom:Identification>
                                <ns0:Name>
                                  <xsl:value-of select="ItemUDA[Name='Rate_Plan_Selector_Name']/CharValue"/>
                                </ns0:Name>
                                <ns0:Description>
                                  <xsl:value-of select="ItemUDA[Name='Rate_Plan_Selector_Desc']/CharValue"/>
                                </ns0:Description>
                              </ns0:PriceListRatePlanSelector>
                            </ns0:RatePlan>
                          </xsl:if>
                        </xsl:for-each>
                      </xsl:for-each>
                    </ns0:LinePrice>
                  </xsl:for-each>
                  <corecom:ItemReference>
                    <corecom:ItemIdentification>
                      <xsl:variable name="PIMIntegrationID">
                       <xsl:choose>
                        <xsl:when test="$EntityType != 'PRODUCT_LINE'">
                         <xsl:call-template name="lookupOrPopulateXRef">
                           <xsl:with-param name="xrefTableName" select="&quot;oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref&quot;"/>
                           <xsl:with-param name="xrefReferenceColumnName" select="$XREFSourceCol"/>
                           <xsl:with-param name="xrefReferenceValue" select="concat(MainCharacteristics/InventoryItemId,&quot;::&quot;,MainCharacteristics/OrganizationId,&quot;::&quot;,MainCharacteristics/OperatingUnitId)"/>
                           <xsl:with-param name="xrefColumnName" select="$XREFTargetCol"/>
                         </xsl:call-template>
                        </xsl:when>
                        <xsl:otherwise>
                         <xsl:call-template name="lookupOrPopulateXRef">
                           <xsl:with-param name="xrefTableName" select="&quot;oramds:/apps/AIAMetaData/xref/PRODUCTLINE_ID.xref&quot;"/>
                           <xsl:with-param name="xrefReferenceColumnName" select="$XREFSourceCol"/>
                           <xsl:with-param name="xrefReferenceValue" select="concat(MainCharacteristics/InventoryItemId,&quot;::&quot;,MainCharacteristics/OrganizationId,&quot;::&quot;,MainCharacteristics/OperatingUnitId)"/>
                           <xsl:with-param name="xrefColumnName" select="$XREFTargetCol"/>
                         </xsl:call-template>
                        </xsl:otherwise>
                       </xsl:choose>
                      </xsl:variable>
                      <corecom:BusinessComponentID>
                        <xsl:value-of select="$PIMIntegrationID"/>
                      </corecom:BusinessComponentID>
                      <corecom:ID>
                        <xsl:value-of select="MainCharacteristics/InventoryItemId"/>
                      </corecom:ID>
                      <corecom:ContextID schemeID="OPERATING_UNIT_ID">
                        <xsl:call-template name="lookupOrPopulateXRef">
                          <xsl:with-param name="xrefTableName" select="&quot;oramds:/apps/AIAMetaData/xref/ORGANIZATION_ID.xref&quot;"/>
                          <xsl:with-param name="xrefReferenceColumnName" select="$XREFSourceCol"/>
                          <xsl:with-param name="xrefReferenceValue" select="MainCharacteristics/OperatingUnitId"/>
                          <xsl:with-param name="xrefColumnName" select="$XREFTargetCol"/>
                        </xsl:call-template>
                      </corecom:ContextID>
                      <corecom:ContextID schemeID="SEGMENT1">
                        <xsl:value-of select="MainCharacteristics/ConcatenatedSegments"/>
                      </corecom:ContextID>
                      <corecom:ContextID>
                        <xsl:value-of select="MainCharacteristics/MasterOrganizationId"/>
                      </corecom:ContextID>
                      <corecom:ContextID schemeID="ORGANIZATION_CODE">
                        <xsl:value-of select="MainCharacteristics/OrganizationCode"/>
                      </corecom:ContextID>
                      <corecom:ApplicationObjectKey>
                        <corecom:ID>
                          <xsl:value-of select="MainCharacteristics/InventoryItemId"/>
                        </corecom:ID>
                        <corecom:ContextID schemeID="ORGANIZATION_ID">
                          <xsl:value-of select="MainCharacteristics/OrganizationId"/>
                        </corecom:ContextID>
                        <corecom:ContextID schemeID="OPERATING_UNIT_ID">
                          <xsl:value-of select="MainCharacteristics/OperatingUnitId"/>
                        </corecom:ContextID>
                      </corecom:ApplicationObjectKey>
                      <xsl:variable name="PIMCurrentActiveRevisionId">
                        <xsl:value-of select="MainCharacteristics/RevisionId"/>
                      </xsl:variable>
                      <xsl:for-each select="ItemRevision">
                        <xsl:if test="RevisionId = $PIMCurrentActiveRevisionId">
                          <corecom:Revision>
                            <corecom:Number>
                              <xsl:value-of select="RevisionId"/>
                            </corecom:Number>
                            <corecom:Code>
                              <xsl:value-of select="Revision"/>
                            </corecom:Code>
                            <corecom:Description>
                              <xsl:value-of select="Description"/>
                            </corecom:Description>
                            <corecom:EffectiveDate>
                              <xsl:call-template name="formatDate">
                                <xsl:with-param name="formatDateParam" select="EffectivityDate"/>
                              </xsl:call-template>
                            </corecom:EffectiveDate>
                            <corecom:Label>
                              <xsl:value-of select="RevisionLabel"/>
                            </corecom:Label>
                            <corecom:Reason>
                              <xsl:value-of select="RevisionReason"/>
                            </corecom:Reason>
                          </corecom:Revision>
                        </xsl:if>
                      </xsl:for-each>
                    </corecom:ItemIdentification>
                    <corecom:Name>
                      <xsl:value-of select="MainCharacteristics/ConcatenatedSegments"/>
                    </corecom:Name>
                    <xsl:variable name="Permitted" select="$AddtlBillingInfo/ItemUDA[Name='Billing_Service_Type']/CharValue"/>
                    <corecom:ClassificationCode>
                      <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/APPLIES_TO.dvm&quot;,$DVMSourceCol,$Permitted,$DVMTargetCol,$Permitted)"/>
                    </corecom:ClassificationCode>
                    <!--<corecom:Description>
                      <xsl:value-of select="MainCharacteristics/LongDescription"/>
                    </corecom:Description> -->
					<!--Defect Fix 13932352-->
					 <xsl:variable name="LongDescriptionSet" value="false"/>
						<xsl:for-each select="MainCharacteristics/MainCharTransalation">
						<xsl:variable name="LongDescriptionSet" value="true"/>
						<!-- START: Changes to send PIMID from AIA to PDC by Arup 11/09/2015--> 
			<xsl:if test="$ProductMoreInfo">
                                <xsl:for-each select="$ProductMoreInfo">
                    <xsl:variable name="GPID" select="ItemUDA[Name='Global_Product_Identifier']/CharValue"/>
					<xsl:variable name="LongDescription" select="$CurItem/MainCharacteristics/MainCharTransalation/LongDescription"/>
                                  <xsl:if test="$GPID">	
	 <xsl:if test="$LongDescription">	
	
	<corecom:Description>
                <xsl:attribute name="languageID">
                  <xsl:value-of select="Language" />
                </xsl:attribute>
                <!--xsl:value-of select="LongDescription" /-->
		<xsl:value-of select="concat($LongDescription, '|', $GPID)"/>				
			</corecom:Description>
			</xsl:if>
</xsl:if>
</xsl:for-each>
</xsl:if>
	<!-- END: Changes to send PIMID from AIA to PDC by Arup 11/09/2015--> 
            </xsl:for-each>
            <xsl:variable name="LongDescription" select="MainCharacteristics/LongDescription" />
            <xsl:if test="LongDescriptionSet = false">
              <corecom:Description>
                <xsl:value-of select="MainCharacteristics/LongDescription" />
              </corecom:Description>
            </xsl:if>
                    <corecom:SpecificationGroup>
                      <corecom:Specification>
                        <corecom:Name>
                          <xsl:text disable-output-escaping="no">MaximumOwnershipQuantity</xsl:text>
                        </corecom:Name>
                        <corecom:ValueQuantity>
                          <xsl:value-of select="$BillingAttributes/ItemUDA[Name='Own_Max']/NumberValue"/>
                        </corecom:ValueQuantity>
                      </corecom:Specification>
                      <corecom:Specification>
                        <corecom:Name>
                          <xsl:text disable-output-escaping="no">MinimumOwnershipQuantity</xsl:text>
                        </corecom:Name>
                        <corecom:ValueQuantity>
                          <xsl:value-of select="$BillingAttributes/ItemUDA[Name='Own_Min']/NumberValue"/>
                        </corecom:ValueQuantity>
                      </corecom:Specification>
                      <corecom:Specification>
                        <corecom:Name>
                          <xsl:text disable-output-escaping="no">MaximumOrderQuantity</xsl:text>
                        </corecom:Name>
                        <corecom:ValueQuantity>
                          <xsl:value-of select="$BillingAttributes/ItemUDA[Name='Purchase_Max']/NumberValue"/>
                        </corecom:ValueQuantity>
                      </corecom:Specification>
                      <corecom:Specification>
                        <corecom:Name>
                          <xsl:text disable-output-escaping="no">MinimumOrderQuantity</xsl:text>
                        </corecom:Name>
                        <corecom:ValueQuantity>
                          <xsl:value-of select="$BillingAttributes/ItemUDA[Name='Purchase_Min']/NumberValue"/>
                        </corecom:ValueQuantity>
                      </corecom:Specification>
                      <corecom:Specification>
                        <corecom:Name>
                          <xsl:text disable-output-escaping="no">PartialPurchaseAllowedIndicator</xsl:text>
                        </corecom:Name>
                        <corecom:ValueText>
                          <xsl:value-of select="$BillingAttributes/ItemUDA[Name='Partial']/CharValue"/>
                        </corecom:ValueText>
                      </corecom:Specification>
                      <corecom:Specification>
                        <corecom:Name>
                          <xsl:text disable-output-escaping="no">ProvisioningTagCode</xsl:text>
                        </corecom:Name>
                        <xsl:variable name="ProvisioningTag" select="$BillingAttributes/ItemUDA[Name='Provisioning_Tag']/CharValue"/>
                        <corecom:ValueCode>
                          <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/PROVISIONING_TAG.dvm&quot;,$DVMSourceCol,$ProvisioningTag,$DVMTargetCol,$ProvisioningTag)"/>
                        </corecom:ValueCode>
                      </corecom:Specification>
                      <corecom:Specification>
                        <corecom:Name>
                          <xsl:text disable-output-escaping="no">BillingTypeCode</xsl:text>
                        </corecom:Name>
                        <xsl:variable name="BillingType" select="$AddtlBillingInfo/ItemUDA[Name='Billing_Entity_Type']/CharValue"/>
                        <corecom:ValueCode>
                          <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/ITEM_BILLING_TYPE_CODE.dvm&quot;,$DVMSourceCol,$BillingType,$DVMTargetCol,$BillingType)"/>
                        </corecom:ValueCode>
                      </corecom:Specification>
                      <corecom:Specification>
                        <corecom:Name>
                          <xsl:text disable-output-escaping="no">PriorityCode</xsl:text>
                        </corecom:Name>
                        <corecom:ValueText>
                          <xsl:value-of select="$BillingAttributes/ItemUDA[Name='Priority']/NumberValue"/>
                        </corecom:ValueText>
                      </corecom:Specification>
                      <corecom:Specification>
                        <corecom:Name>
                          <xsl:text disable-output-escaping="no">SupplierId</xsl:text>
                        </corecom:Name>
                        <corecom:ValueText>
                          <xsl:value-of select="$BillingAttributes/ItemUDA[Name='Tax_Supplier']/CharValue"/>
                        </corecom:ValueText>
                      </corecom:Specification>
                      <corecom:Specification>
                        <corecom:Name>
                          <xsl:text disable-output-escaping="no">InternalItemCode</xsl:text>
                        </corecom:Name>
                        <corecom:ValueText>
                          <xsl:value-of select="$ItemInfoCore/ItemUDA[Name='Internal_Reference_Code']/CharValue"/>
                        </corecom:ValueText>
                      </corecom:Specification>
                      <corecom:Specification>
                        <corecom:Name>
                          <xsl:text disable-output-escaping="no">StartDate</xsl:text>
                        </corecom:Name>
                        <corecom:ValueDateTime>
                          <xsl:call-template name="formatUDADate">
                            <xsl:with-param name="formatDateParam" select="$ItemInfoCore/ItemUDA[Name='Effective_Start_Date']/DatetimeValue"/>
                          </xsl:call-template>
                        </corecom:ValueDateTime>
                      </corecom:Specification>
                      <corecom:Specification>
                        <corecom:Name>
                          <xsl:text disable-output-escaping="no">EndDate</xsl:text>
                        </corecom:Name>
                        <corecom:ValueDateTime>
                          <xsl:call-template name="formatUDADate">
                            <xsl:with-param name="formatDateParam" select="$ItemInfoCore/ItemUDA[Name='Effective_End_Date']/DatetimeValue"/>
                          </xsl:call-template>
                        </corecom:ValueDateTime>
                      </corecom:Specification>
                    </corecom:SpecificationGroup>
                    <corecom:SpecificationGroup>
                      <corecom:Name>
                        <xsl:value-of select="$DestinationSystems[1]/AttributeGroupName"/>
                      </corecom:Name>
                      <xsl:for-each select="$DestinationSystems">
                        <corecom:Specification>
                          <corecom:Name>
                            <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/TARGET_ID.dvm&quot;,$DVMSourceCol,ItemUDA[Name=&quot;Destination_System&quot;]/CharValue,$DVMTargetCol,&quot;&quot;)"/>
                          </corecom:Name>
                          <corecom:ValueText>
                            <xsl:value-of select="ItemUDA[Name='Sync_Item']/CharValue"/>
                          </corecom:ValueText>
                        </corecom:Specification>
                      </xsl:for-each>
                    </corecom:SpecificationGroup>
                  </corecom:ItemReference>
                </ns0:PriceListLine>
                <xsl:call-template name="PriceListLineType_ext"/>
              </xsl:if>
            </ns0:SyncPriceListList>
            <xsl:call-template name="SyncPriceListListType_ext"/>
          </ns0:DataArea>
        </xsl:if>
      </xsl:for-each>
    </ns0:SyncPriceListListEBM>
  </xsl:template>
  <!--  User Defined Templates  -->
  <xsl:template name="lookupOrPopulateXRef">
    <xsl:param name="xrefTableName"/>
    <xsl:param name="xrefReferenceColumnName"/>
    <xsl:param name="xrefReferenceValue"/>
    <xsl:param name="xrefColumnName"/>
    <xsl:variable name="xrefValue" select="xref:lookupXRef($xrefTableName,$xrefReferenceColumnName,$xrefReferenceValue,$xrefColumnName,false())"/>
    <xsl:choose>
      <xsl:when test="$xrefValue!=''">
        <xsl:value-of select="$xrefValue"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="xref:populateXRefRow($xrefTableName,$xrefReferenceColumnName,$xrefReferenceValue,$xrefColumnName,orcl:generate-guid(),'ANY')"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="IndicatorFlag">
    <xsl:param name="value"/>
    <xsl:choose>
      <xsl:when test="$value='Y'">
        <xsl:value-of select="&quot;true&quot;"/>
      </xsl:when>
      <xsl:when test="$value='N'">
        <xsl:value-of select="&quot;false&quot;"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$value"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="formatDate">
    <xsl:param name="formatDateParam"/>
    <xsl:if test="$formatDateParam != ''">
      <xsl:choose>
        <xsl:when test="string-length($formatDateParam) = number(10)">
          <xsl:value-of select="ebi:getConvertedDateWithTZ(concat($formatDateParam,'T00:00:00',$offset),$offset,true())"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="ebi:getConvertedDateWithTZ($formatDateParam,$offset,true())"/>
          <!-- <xsl:value-of select="$formatDateParam"/>-->
        </xsl:otherwise>
      </xsl:choose>
    </xsl:if>
  </xsl:template>
  <xsl:template name="formatUDADate">
    <xsl:param name="formatDateParam"/>
    <xsl:if test="$formatDateParam != ''">
      <xsl:choose>
        <xsl:when test="string-length($formatDateParam) = number(10)">
          <xsl:variable name="formattedDate" select="concat(substring($formatDateParam,7,4),'-',substring($formatDateParam,1,2),'-',substring($formatDateParam,4,2),'T00:00:00',$offset)"/>
          <xsl:value-of select="ebi:getConvertedDateWithTZ($formattedDate,$offset,true())"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:variable name="formattedDate" select="concat(substring($formatDateParam,7,4),'-',substring($formatDateParam,1,2),'-',substring($formatDateParam,4,2),'T',substring($formatDateParam,12,8),$offset)"/>
          <xsl:value-of select="ebi:getConvertedDateWithTZ($formattedDate,$offset,true())"/>
          <!--<xsl:value-of select="$formatDateParam"/>-->
        </xsl:otherwise>
      </xsl:choose>
    </xsl:if>
  </xsl:template>
  <xsl:template name="formatUDADateWithoutConversion">
    <xsl:param name="formatDateParamWithoutConversion"/>
    <xsl:if test="$formatDateParamWithoutConversion != ''">
      <xsl:choose>
        <xsl:when test="string-length($formatDateParamWithoutConversion) = number(10)">
          <xsl:value-of select="concat(substring($formatDateParamWithoutConversion,7,4),'-',substring($formatDateParamWithoutConversion,1,2),'-',substring($formatDateParamWithoutConversion,4,2))"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:value-of select="concat(substring($formatDateParamWithoutConversion,7,4),'-',substring($formatDateParamWithoutConversion,1,2),'-',substring($formatDateParamWithoutConversion,4,2),'T',substring($formatDateParamWithoutConversion,12,8),$offset)"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:if>
  </xsl:template>
</xsl:stylesheet>
