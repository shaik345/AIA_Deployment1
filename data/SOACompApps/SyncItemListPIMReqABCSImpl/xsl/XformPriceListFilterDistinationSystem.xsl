<?xml version = '1.0' encoding = 'UTF-8'?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="oramds:/apps/AIAMetaData/AIAComponents/EnterpriseObjectLibrary/Core/EBO/PriceList/V2/PriceListEBM.xsd"/>
      <rootElement name="SyncPriceListListEBM" namespace="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/PriceList/V2"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="oramds:/apps/AIAMetaData/AIAComponents/EnterpriseObjectLibrary/Core/EBO/PriceList/V2/PriceListEBM.xsd"/>
      <rootElement name="SyncPriceListListEBM" namespace="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/PriceList/V2"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.4.0(build 080718.0645) AT [MON OCT 26 20:59:13 IST 2009]. -->
?>
<xsl:stylesheet version="2.0" xmlns:ns0="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/PriceList/V2" xmlns:ns2="http://xmlns.oracle.com/PIM/QueryItemListPIMAdapter" 
  xmlns:ebi="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.core.xpath.AIAFunctions"
  xmlns:aia="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.core.xpath.AIAFunctions" xmlns:oans1="http://xmlns.oracle.com/svc" xmlns:corepricelistcust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/EBO/PriceList/V2" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:svcdoc="http://xmlns.oracle.com/Services/Documentation/V1" xmlns:corecomEBO="http://xmlns.oracle.com/EnterpriseObjects/Core/CommonEBO/V1" xmlns:wsa="http://schemas.xmlsoap.org/ws/2003/03/addressing" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:xacml-context="urn:oasis:names:tc:xacml:2.0:context:schema:cd:04" xmlns:corecomcust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/Common/V2" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:xacml="urn:oasis:names:tc:xacml:2.0:policy:schema:cd:04" xmlns:corecom="http://xmlns.oracle.com/EnterpriseObjects/Core/Common/V2" xmlns:ns1="http://xmlns.oracle.com/apps/ego/item/service/out" xmlns:item="http://xmlns.oracle.com/apps/ego/item/service" exclude-result-prefixes="xsl oans1 xsd xsi ns0 ns1 corepricelistcust svcdoc corecomEBO wsa xacml-context corecomcust xacml corecom bpws ehdr hwf xp20 xref ora ids orcl" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue">
  <xsl:template match="/">
  
<ns0:SyncPriceListListEBM>
<xsl:apply-templates select="@*"/>
                 <xsl:apply-templates select="ns0:SyncPriceListListEBM/corecom:EBMHeader"/>
             <xsl:variable name="TargetSystem">
                     <xsl:value-of select="/ns0:SyncPriceListListEBM/corecom:EBMHeader/corecom:Target/corecom:ID"/>
            </xsl:variable>

      <xsl:for-each select="/ns0:SyncPriceListListEBM/ns0:DataArea">
             <xsl:variable name="SystemFlag">
                     <xsl:value-of select="ns0:SyncPriceListList/ns0:PriceListLine/corecom:ItemReference/corecom:SpecificationGroup[corecom:Name='Destination_Sys_Specification']/corecom:Specification[corecom:Name=$TargetSystem]/corecom:ValueText"/>
            </xsl:variable>
             <xsl:variable name="SystemFlagExist">
                     <xsl:value-of select="count(ns0:SyncPriceListList/ns0:PriceListLine/corecom:ItemReference/corecom:SpecificationGroup[corecom:Name='Destination_Sys_Specification'])"/>
            </xsl:variable>
                     <xsl:choose>
                        <xsl:when test="$SystemFlagExist = 0">
                               <xsl:copy-of select="."/>
                        </xsl:when>
                        <xsl:when test="$SystemFlagExist > 0 and ($SystemFlag='' or $SystemFlag='Y') ">
                             <xsl:copy-of select="."/>
                        </xsl:when>
                        <xsl:otherwise>
                        </xsl:otherwise>
                      </xsl:choose>    
      </xsl:for-each>
    </ns0:SyncPriceListListEBM>
  </xsl:template>
  
  <xsl:template match="@*|node()">
    <xsl:copy>
        <xsl:apply-templates select="@*|node()"/>
    </xsl:copy>  
  </xsl:template>

</xsl:stylesheet>
