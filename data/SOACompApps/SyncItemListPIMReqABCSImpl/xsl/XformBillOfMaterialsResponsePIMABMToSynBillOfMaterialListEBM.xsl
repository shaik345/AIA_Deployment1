<?xml version = '1.0' encoding = 'UTF-8'?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="WSDL">
      <schema location="oramds:/apps/AIAMetaData/AIAComponents/ApplicationConnectorServiceLibrary/PIM/V1/AdapterServices/QueryBillOffMaterialsListPIMAdapter.wsdl"/>
      <rootElement name="QueryBillOffMaterialsListPIMAdapterProcessResponse" namespace="http://xmlns.oracle.com/PIM/QueryBillOffMaterialsListPIMAdapter"/>
    </source>
  </mapSources>
  <mapTargets>
    <target type="XSD">
      <schema location="oramds:/apps/AIAMetaData/AIAComponents/EnterpriseObjectLibrary/Core/EBO/BillOfMaterials/V1/BillOfMaterialsEBM.xsd"/>
      <rootElement name="SyncBillOfMaterialsListEBM" namespace="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/BillOfMaterials/V1"/>
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.4.0(build 080718.0645) AT [TUE JUL 14 09:33:43 IST 2009]. -->
?>
<xsl:stylesheet version="2.0" xmlns:aia="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.core.xpath.AIAFunctions" xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions" xmlns:ns3="http://xmlns.oracle.com/apps/bom/structure/service/in" xmlns:ns0="http://www.w3.org/2001/XMLSchema" xmlns:corecomEBO="http://xmlns.oracle.com/EnterpriseObjects/Core/CommonEBO/V1" xmlns:ns7="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/CommonEBO/V1" xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20" xmlns:corecomcust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/Common/V2" xmlns:ora="http://schemas.oracle.com/xpath/extension" xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc" xmlns:item="http://xmlns.oracle.com/apps/ego/item/service" xmlns:ns2="http://xmlns.oracle.com/apps/bom/structure/service/out" xmlns:xacml="urn:oasis:names:tc:xacml:2.0:policy:schema:cd:04" xmlns:corecom="http://xmlns.oracle.com/EnterpriseObjects/Core/Common/V2" xmlns:ns5="http://xmlns.oracle.com/apps/ego/item/service/out" 
  xmlns:ebi="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.core.xpath.AIAFunctions"
  xmlns:ns6="http://xmlns.oracle.com/apps/ego/item/service/in" xmlns:bom="http://xmlns.oracle.com/apps/ego/item/service" xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/" xmlns:corebillofmaterialscust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/EBO/BillOfMaterials/V1" xmlns:svcdoc="http://xmlns.oracle.com/Services/Documentation/V1" xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath" xmlns:wsa="http://schemas.xmlsoap.org/ws/2003/03/addressing" xmlns:ns1="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/BillOfMaterials/V1" xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions" xmlns:xacml-context="urn:oasis:names:tc:xacml:2.0:context:schema:cd:04" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:ns4="http://xmlns.oracle.com/QueryBillOffMaterialsListPIMAdapter" xmlns:tns="http://xmlns.oracle.com/PIM/QueryBillOffMaterialsListPIMAdapter" xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath" exclude-result-prefixes="xsl ns3 ns0 item ns2 ns5 ns6 ns4 corecomEBO ns7 corecomcust xacml corecom corebillofmaterialscust svcdoc wsa ns1 xacml-context ehdr xp20 ora orcl bpws hwf xref ids" xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue" xmlns:str="http://www.oracle.com/XSL/Transform/java/java.lang.String" xmlns:coreitemebm="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/Item/V2">
  
   <xsl:include href="XformBillOfMaterialsResponsePIMABMToSynBillOfMaterialListEBM_Custom.xsl"/> 
  <!--   Tokenized for each verticals -->

  <xsl:include href="XformUDAAGInterfaceCommsPIMBOMRespABMToSyncBOMEBM.xsl"/>
  <xsl:param name="SystemID"/>
  <xsl:param name="BatchID"/>
  <xsl:param name="WorkpaceName"/>
  <xsl:param name="ReqEBMParam"/>
  <xsl:variable name="SenderBatchId" select="$BatchID"/>
  <xsl:variable name="XREFSourceCol" select="$SystemID"/>
  <xsl:variable name="XREFTargetCol">
    <xsl:value-of select="&quot;COMMON&quot;"/>
  </xsl:variable>
  <xsl:variable name="DVMSourceCol" select="$SystemID"/>
  <xsl:variable name="DVMTargetCol">
    <xsl:value-of select="&quot;COMMON&quot;"/>
  </xsl:variable>
  <xsl:variable name="fixedAmpersand">&amp;amp;amp;</xsl:variable>
  <xsl:variable name="EscapedSyncItemListVariable_fixed" select="str:replaceAll(string($ReqEBMParam),'\u0026(amp;)*+',$fixedAmpersand)"/>
  <xsl:variable name="SyncItemListVariable" select="orcl:parseEscapedXML($EscapedSyncItemListVariable_fixed)"/>
  <xsl:template match="/">
    <ns1:SyncBillOfMaterialsListEBM>
      <corecom:EBMHeader>
        <corecom:EBMID>
          <xsl:variable name="messageIdVariable" select="orcl:generate-guid()"/>
          <xsl:value-of select="$messageIdVariable"/>
        </corecom:EBMID>
        <corecom:EBMName>
          <xsl:text disable-output-escaping="no">{http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/Item/V1}SyncItemListEBM</xsl:text>
        </corecom:EBMName>
        <corecom:EBOName>
          <xsl:text disable-output-escaping="no">{http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/Item/V1}ItemEBO</xsl:text>
        </corecom:EBOName>
        <corecom:CreationDateTime>
          <xsl:value-of select="xp20:current-dateTime()"/>
        </corecom:CreationDateTime>
        <corecom:VerbCode>
          <xsl:text disable-output-escaping="no">Sync</xsl:text>
        </corecom:VerbCode>
        <corecom:MessageProcessingInstruction>
          <xsl:variable name="ConfigServiceName" select="'{http://xmlns.oracle.com/ABCSImpl/PIM/Core/SyncItemListPIMReqABCSImpl/V1}SyncItemListPIMReqABCSImpl'"/>
          <xsl:variable name="RouteToCAVS" select="aia:getServiceProperty($ConfigServiceName, 'Routing.BillOfMaterialsEBS.SyncBillOfMaterialsList.RouteToCAVS', false())='true'"/>
          <corecom:EnvironmentCode>
            <xsl:choose>
              <xsl:when test="$RouteToCAVS">
                <xsl:text>CAVS</xsl:text>
              </xsl:when>
              <xsl:otherwise>
                <xsl:variable name="EnvCode" select="aia:getServiceProperty($ConfigServiceName, 'Routing.BillOfMaterialsEBS.SyncBillOfMaterialsList.MessageProcessingInstruction.EnvironmentCode', false())"/>
                <xsl:choose>
                  <xsl:when test="$EnvCode!=''">
                    <xsl:value-of select="$EnvCode"/>
                  </xsl:when>
                  <xsl:otherwise>
                    <xsl:text>PRODUCTION</xsl:text>
                  </xsl:otherwise>
                </xsl:choose>
              </xsl:otherwise>
            </xsl:choose>
          </corecom:EnvironmentCode>
          <xsl:if test="$RouteToCAVS">
            <corecom:DefinitionID>
              <xsl:value-of select="aia:getServiceProperty($ConfigServiceName, 'Routing.BillOfMaterialsEBS.SyncBillOfMaterialsList.CAVS.EndpointURI', false())"/>
            </corecom:DefinitionID>
          </xsl:if>
          <xsl:call-template name="MessageProcessingInstructionType_ext"/>
        </corecom:MessageProcessingInstruction>
        <corecom:Sender>
          <xsl:variable name="senderNodeVariable" select="aia:getEBMHeaderSenderSystemNode($SystemID,'')"/>
          <corecom:ID>
            <xsl:value-of select="$senderNodeVariable/ID"/>
          </corecom:ID>
          <corecom:Description>
            <xsl:value-of select="$senderNodeVariable/Description"/>
          </corecom:Description>
          <corecom:IPAddress>
            <xsl:value-of select="$senderNodeVariable/IPAddress"/>
          </corecom:IPAddress>
          <corecom:SenderMessageID/>
          <corecom:CallingServiceName>
            <xsl:value-of select="$senderNodeVariable/CallingServiceName"/>
          </corecom:CallingServiceName>
          <corecom:Application>
            <corecom:ID>
              <xsl:value-of select="$senderNodeVariable/Application/ID"/>
            </corecom:ID>
            <corecom:Version>
              <xsl:value-of select="$senderNodeVariable/Application/Version"/>
            </corecom:Version>
          </corecom:Application>
          <corecom:ContactName>
            <xsl:value-of select="$senderNodeVariable/ContactName"/>
          </corecom:ContactName>
          <corecom:ContactEmail>
            <xsl:value-of select="$senderNodeVariable/ContactEmail"/>
          </corecom:ContactEmail>
          <corecom:ContactPhoneNumber>
            <xsl:value-of select="$senderNodeVariable/ContactPhone"/>
          </corecom:ContactPhoneNumber>
          <corecom:WSAddress>
            <wsa:ReplyTo>
              <wsa:ServiceName>SyncItemListPIMReqABCSImpl</wsa:ServiceName>
            </wsa:ReplyTo>
          </corecom:WSAddress>
          <xsl:call-template name="SenderType_ext"/>
        </corecom:Sender>
        <corecom:Target>
          <corecom:ID>
            <xsl:text disable-output-escaping="no">ValueWillBePopulatedLater</xsl:text>
          </corecom:ID>
          <xsl:call-template name="TargetType_ext"/>
        </corecom:Target>
        <xsl:variable name="processIdVariable" select="orcl:generate-guid()"/>
        <corecom:BusinessScope>
          <corecom:ID>
            <xsl:value-of select="$SenderBatchId"/>
          </corecom:ID>
          <corecom:InstanceID>
            <xsl:text disable-output-escaping="no">Pim-to-Siebel-Product-SyncItemList-Synchronization-Process-Request</xsl:text>
          </corecom:InstanceID>
          <corecom:BusinessScopeTypeCode>
            <xsl:text disable-output-escaping="no">BusinessProcessMessage</xsl:text>
          </corecom:BusinessScopeTypeCode>
          <corecom:EnterpriseServiceName>
            <xsl:text disable-output-escaping="no">{http://xmlns.oracle.com/EnterpriseServices/Core/Item/V1}ItemEBSV2</xsl:text>
          </corecom:EnterpriseServiceName>
          <corecom:EnterpriseServiceOperationName>
            <xsl:text disable-output-escaping="no">SyncItemList</xsl:text>
          </corecom:EnterpriseServiceOperationName>
          <xsl:call-template name="BusinessScopeType_ext"/>
        </corecom:BusinessScope>
        <corecom:EBMTracking>
          <corecom:SequenceNumber>
            <xsl:text disable-output-escaping="no">1</xsl:text>
          </corecom:SequenceNumber>
          <corecom:ExecutionUnitName>
            <xsl:text disable-output-escaping="no">{http://xmlns.oracle.com/ABCSImpl/PIM/Core/SyncItemListPIMReqABCSImpl/V1}SyncItemListPIMReqABCSImpl</xsl:text>
          </corecom:ExecutionUnitName>
          <corecom:ImplementationCode>
            <xsl:text disable-output-escaping="no">BPEL</xsl:text>
          </corecom:ImplementationCode>
          <corecom:ActivityDateTime>
            <xsl:value-of select="xp20:current-dateTime()"/>
          </corecom:ActivityDateTime>
          <xsl:call-template name="EBMTrackingType_ext"/>
        </corecom:EBMTracking>
        <corecom:MessageBatch>
          <corecom:ID>
            <xsl:value-of select="$SenderBatchId"/>
          </corecom:ID>
          <corecom:Name>
            <xsl:choose>
              <xsl:when test="$WorkpaceName=''">
                <xsl:value-of select="AIA-Default"/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:value-of select="$WorkpaceName"/>
              </xsl:otherwise>
            </xsl:choose>
          </corecom:Name>
          <corecom:BatchParameter>
            <corecom:Name>
              <xsl:text disable-output-escaping="no">WORKSPACE_RELEASE_FLAG</xsl:text>
            </corecom:Name>
            <corecom:Value/>
          </corecom:BatchParameter>
        </corecom:MessageBatch>
        <xsl:call-template name="EBMHeaderType_ext"/>
      </corecom:EBMHeader>
      <xsl:for-each select="/tns:QueryBillOffMaterialsListPIMAdapterProcessResponse/bom:StructureQueryOut/listOfStructureHeaders/StructureHeader">
        <ns1:DataArea>
          <corecom:Sync>
            <xsl:attribute name="responseCode">
              <xsl:text disable-output-escaping="no">ID</xsl:text>
            </xsl:attribute>
          </corecom:Sync>
          <xsl:variable name="XrefAssemblyItemID">
            <xsl:value-of select="concat(AssemblyItemId,&quot;::&quot;,OrganizationId,&quot;::&quot;,OperatingUnitId)"/>
          </xsl:variable>
          <ns1:SyncBillOfMaterialsList>
            <corecom:Identification>
              <corecom:Revision>
                <corecom:Description>
                  <xsl:value-of select="StructureRevision/Description"/>
                </corecom:Description>
                <corecom:Code>
                  <xsl:value-of select="StructureRevision/Revision"/>
                </corecom:Code>
                <corecom:EffectiveDate>
                  <!--<xsl:value-of select="StructureRevision/EffectivityDate"/>-->
                  <xsl:call-template name="formatDate">
                    <xsl:with-param name="formatDateParam" select="StructureRevision/EffectivityDate"/>
                  </xsl:call-template>
                </corecom:EffectiveDate>
                <corecom:Label>
                  <xsl:value-of select="StructureRevision/RevisionLabel"/>
                </corecom:Label>
                <corecom:Reason>
                  <xsl:value-of select="StructureRevision/RevisionReason"/>
                </corecom:Reason>
              </corecom:Revision>
            </corecom:Identification>
            <corecom:TypeCode>
              <xsl:value-of select="AssemblyType"/>
            </corecom:TypeCode>
            <corecom:Name>
              <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/STRUCTURE_NAME_ALTERNATE_BOM.dvm&quot;,$DVMSourceCol,AlternateBomDesignator,$DVMTargetCol,AlternateBomDesignator)"/>
            </corecom:Name>
            <corecom:ImplementationDate>
              <!--<xsl:value-of select="ImplementationDate"/>-->
              <xsl:call-template name="formatDate">
                <xsl:with-param name="formatDateParam" select="ImplementationDate"/>
              </xsl:call-template>
            </corecom:ImplementationDate>
            <corecom:EffectivityControlCode>
              <xsl:value-of select="EffectivityControl"/>
            </corecom:EffectivityControlCode>
            <corecom:ItemReference>
              <corecom:ItemIdentification>
                <corecom:BusinessComponentID>
                 <xsl:if test="xref:lookupXRef(&quot;oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref&quot;,$XREFSourceCol,$XrefAssemblyItemID,$XREFTargetCol,false()) != ''">
                  <xsl:value-of select="xref:lookupXRef(&quot;oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref&quot;,$XREFSourceCol,$XrefAssemblyItemID,$XREFTargetCol,true())"/>
                 </xsl:if>
                 <xsl:if test="xref:lookupXRef(&quot;oramds:/apps/AIAMetaData/xref/PRODUCTLINE_ID.xref&quot;,$XREFSourceCol,$XrefAssemblyItemID,$XREFTargetCol,false()) != ''">
                  <xsl:value-of select="xref:lookupXRef(&quot;oramds:/apps/AIAMetaData/xref/PRODUCTLINE_ID.xref&quot;,$XREFSourceCol,$XrefAssemblyItemID,$XREFTargetCol,true())"/>
                 </xsl:if>
                </corecom:BusinessComponentID>
                <corecom:ContextID>
                  <xsl:value-of select="xref:lookupXRef(&quot;oramds:/apps/AIAMetaData/xref/ORGANIZATION_ID.xref&quot;,$XREFSourceCol,OperatingUnitId,$XREFTargetCol,true())"/>
                </corecom:ContextID>
                <corecom:ContextID>
                  <xsl:attribute name="schemeID">
                    <xsl:value-of select="&quot;ORGANIZATION_ID&quot;"/>
                  </xsl:attribute>
                  <xsl:value-of select="xref:lookupXRef(&quot;oramds:/apps/AIAMetaData/xref/INVENTORY_LOCATION_ID.xref&quot;,$XREFSourceCol,OrganizationId,$XREFTargetCol,true())"/>
                </corecom:ContextID>
                <corecom:ApplicationObjectKey>
                  <corecom:ID>
                    <xsl:value-of select="AssemblyItemId"/>
                  </corecom:ID>
                  <corecom:ContextID>
                    <xsl:attribute name="schemeID">
                      <xsl:value-of select="&quot;ORGANIZATION_ID&quot;"/>
                    </xsl:attribute>
                    <xsl:value-of select="OrganizationId"/>
                  </corecom:ContextID>
                  <corecom:ContextID>
                    <xsl:attribute name="schemeID">
                      <xsl:value-of select="&quot;OPERATING_UNIT_ID&quot;"/>
                    </xsl:attribute>
                    <xsl:value-of select="OperatingUnitId"/>
                  </corecom:ContextID>
                  <corecom:ContextID>
                    <xsl:attribute name="schemeID">
                      <xsl:value-of select="&quot;STRUCTURE_REVISION&quot;"/>
                    </xsl:attribute>
                    <xsl:value-of select="StructureRevision/RevisionId"/>
                  </corecom:ContextID>
                </corecom:ApplicationObjectKey>
              </corecom:ItemIdentification>
              <xsl:variable name="AssemblyItemName" select="AssemblyItemName"/>
              <corecom:Name>
                <xsl:value-of select="$AssemblyItemName"/>
              </corecom:Name>
            </corecom:ItemReference>
            <corecomEBO:EngineeringIndicator>
              <xsl:value-of select="StructureTypeId"/>
            </corecomEBO:EngineeringIndicator>
            
            <!--  process Structure Header Level UDA Start-->
            
            <xsl:for-each select="StructureHeaderAttributeGroup">
              <xsl:call-template name="ProcessStructureHeaderAttributeGroup">
                <xsl:with-param name="Name" select="AttributeGroupName"/>
              </xsl:call-template>
            </xsl:for-each>
            
             <!--  process Structure Header Level UDA End -->  
            <xsl:for-each select="StructureComponent">
              <corecomEBO:BillOfMaterialsComponentItem>
                <xsl:variable name="XrefComponentItemID">
                  <xsl:value-of select="concat(ComponentItemId,&quot;::&quot;,../OrganizationId,&quot;::&quot;,../OperatingUnitId)"/>
                </xsl:variable>
                <corecom:ToUnitNumber>
                  <xsl:value-of select="OperationSeqNum"/>
                </corecom:ToUnitNumber>
                <corecom:Quantity>
                  <xsl:value-of select="ComponentQuantity"/>
                </corecom:Quantity>
                <corecom:BasisQuantity>
                  <xsl:value-of select="SoBasis"/>
                </corecom:BasisQuantity>
                <corecom:Comment>
                  <xsl:value-of select="Description"/>
                </corecom:Comment>
                <corecom:OptionalIndicator>
                  <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/BOM_INDICATOR_NUM_TO_BOOL.dvm&quot;,$DVMSourceCol,Optional,$DVMTargetCol,Optional)"/>
                </corecom:OptionalIndicator>
                <corecom:MutuallyExclusiveOptionIndicator>
                  <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/BOM_INDICATOR_NUM_TO_BOOL.dvm&quot;,$DVMSourceCol,MutuallyExclusiveOptions,$DVMTargetCol,MutuallyExclusiveOptions)"/>
                </corecom:MutuallyExclusiveOptionIndicator>
                <corecom:CostRollupInclusionIndicator>
                  <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/BOM_INDICATOR_NUM_TO_BOOL.dvm&quot;,$DVMSourceCol,IncludeInCostRollup,$DVMTargetCol,IncludeInCostRollup)"/>
                </corecom:CostRollupInclusionIndicator>
                <corecom:ATPCheckRequiredIndicator>
                  <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/BOM_INDICATOR_NUM_TO_BOOL.dvm&quot;,$DVMSourceCol,CheckAtp,$DVMTargetCol,CheckAtp)"/>
                </corecom:ATPCheckRequiredIndicator>
                <corecom:ShippingAllowedIndicator>
                  <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/BOM_INDICATOR_NUM_TO_BOOL.dvm&quot;,$DVMSourceCol,ShippingAllowed,$DVMTargetCol,ShippingAllowed)"/>
                </corecom:ShippingAllowedIndicator>
                <corecom:ShippingDocumentVisibilityIndicator>
                  <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/BOM_INDICATOR_NUM_TO_BOOL.dvm&quot;,$DVMSourceCol,IncludeOnShipDocs,$DVMTargetCol,IncludeOnShipDocs)"/>
                </corecom:ShippingDocumentVisibilityIndicator>
                <corecom:MinimumOrderQuantity>
                  <xsl:value-of select="LowQuantity"/>
                </corecom:MinimumOrderQuantity>
                <corecom:MaximumOrderQuantity>
                  <xsl:value-of select="HighQuantity"/>
                </corecom:MaximumOrderQuantity>
                <corecom:AutoRequestIndicator>
                  <xsl:value-of select="AutoRequestMaterial"/>
                </corecom:AutoRequestIndicator>
                <corecom:RequiredToShipIndicator>
                  <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/BOM_INDICATOR_NUM_TO_BOOL.dvm&quot;,$DVMSourceCol,RequiredToShip,$DVMTargetCol,RequiredToShip)"/>
                </corecom:RequiredToShipIndicator>
                <corecom:RequiredForRevenueIndicator>
                  <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/BOM_INDICATOR_NUM_TO_BOOL.dvm&quot;,$DVMSourceCol,RequiredForRevenue,$DVMTargetCol,RequiredForRevenue)"/>
                </corecom:RequiredForRevenueIndicator>
                <corecom:Note>
                  <xsl:value-of select="dvm:lookupValue(&quot;oramds:/apps/AIAMetaData/dvm/ITEM_CURRENTFUTUREPAST_STATUS.dvm&quot;,$DVMSourceCol,CurrentFuturePastFlag,$DVMTargetCol,CurrentFuturePastFlag)"/>
                </corecom:Note>
                <corecom:EffectiveTimePeriod>
                  <corecom:StartDateTime>
                    <!--<xsl:value-of select="EffectivityDate"/>-->
                    <xsl:call-template name="formatDate">
                      <xsl:with-param name="formatDateParam" select="EffectivityDate"/>
                    </xsl:call-template>
                  </corecom:StartDateTime>
                  <corecom:EndDateTime>
                    <!--<xsl:value-of select="DisableDate"/>-->
                    <xsl:call-template name="formatDate">
                      <xsl:with-param name="formatDateParam" select="DisableDate"/>
                    </xsl:call-template>
                  </corecom:EndDateTime>
                </corecom:EffectiveTimePeriod>
                <corecom:ItemReference>
                  <corecom:ItemIdentification>
                    <corecom:BusinessComponentID>
                     <xsl:if test="xref:lookupXRef(&quot;oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref&quot;,$XREFSourceCol,$XrefComponentItemID,$XREFTargetCol,false()) != ''">
                      <xsl:value-of select="xref:lookupXRef(&quot;oramds:/apps/AIAMetaData/xref/ITEM_ITEMID.xref&quot;,$XREFSourceCol,$XrefComponentItemID,$XREFTargetCol,true())"/>
                    </xsl:if>
                    <xsl:if test="xref:lookupXRef(&quot;oramds:/apps/AIAMetaData/xref/PRODUCTLINE_ID.xref&quot;,$XREFSourceCol,$XrefComponentItemID,$XREFTargetCol,false()) != ''">
                      <xsl:value-of select="xref:lookupXRef(&quot;oramds:/apps/AIAMetaData/xref/PRODUCTLINE_ID.xref&quot;,$XREFSourceCol,$XrefComponentItemID,$XREFTargetCol,true())"/>
                    </xsl:if>
                    </corecom:BusinessComponentID>
                  </corecom:ItemIdentification>
                  <xsl:variable name="ComponentItemName" select="ComponentItemName"/>
                  <corecom:Name>
                    <xsl:value-of select="$ComponentItemName"/>
                  </corecom:Name>
                  <corecom:ClassificationCode>
                    <xsl:for-each select="$SyncItemListVariable/coreitemebm:DataArea">
                      <xsl:if test="coreitemebm:SyncItemList/corecomEBO:Name = $ComponentItemName">
                        <xsl:value-of select="coreitemebm:SyncItemList/corecomEBO:ItemCatalog/corecom:Identification/corecom:BusinessComponentID"/>
                      </xsl:if>
                    </xsl:for-each>
                  </corecom:ClassificationCode>
                  <corecom:TypeCode>
                    <xsl:for-each select="$SyncItemListVariable/coreitemebm:DataArea">
                      <xsl:if test="coreitemebm:SyncItemList/corecomEBO:Name = $ComponentItemName">
                        <xsl:value-of select="coreitemebm:SyncItemList/corecomEBO:EntityTypeCode"/>
                      </xsl:if>
                    </xsl:for-each>
                  </corecom:TypeCode>
                  <xsl:call-template name="ItemReferenceType_ext"/>
                </corecom:ItemReference>
                <corecom:InventoryLocationReference>
                  <corecom:LocationIdentification>
                    <corecom:ContextID>
                      <xsl:value-of select="xref:lookupXRef(&quot;oramds:/apps/AIAMetaData/xref/INVENTORY_LOCATION_ID.xref&quot;,$XREFSourceCol,OrganizationId,$XREFTargetCol,true())"/>
                    </corecom:ContextID>
                  </corecom:LocationIdentification>
                  <xsl:call-template name="InventoryLocationReference_ext"/>
                </corecom:InventoryLocationReference>
                <corecomEBO:YieldFactor>
                  <xsl:value-of select="ComponentYieldFactor"/>
                </corecomEBO:YieldFactor>
                <corecomEBO:PlanningQuantityMultiplier>
                  <xsl:value-of select="PlanningFactor"/>
                </corecomEBO:PlanningQuantityMultiplier>
                <xsl:for-each select="ComponentAttributeGroup">
                  <xsl:call-template name="ProcessAttributeGroupUDA">
                    <xsl:with-param name="Name" select="AttributeGroupName"/>
                  </xsl:call-template>
                </xsl:for-each>
                <xsl:call-template name="BillOfMaterialsComponentItem_ext"/>
              </corecomEBO:BillOfMaterialsComponentItem>
            </xsl:for-each>
            <!--  BOM Component End -->
            <!--  Exclusion and Override start -->
            <xsl:for-each select="ContextInfo/ComponentPath[ComponentExclusion]">
              <corecomEBO:BillOfMaterialsComponentItemExclusion>
                <corecomEBO:BillOfMaterialsComponentItemPath>
                  <xsl:for-each select="ComponentItemList/ItemReference">
                    <corecomEBO:BillOfMaterialsComponentItemLevel>
                      <corecomEBO:SequenceNumber>
                        <xsl:value-of select="Sequence"/>
                      </corecomEBO:SequenceNumber>
                      <corecom:BillOfMaterialsComponentItemReference>
                        <corecom:BillOfMaterialsComponentItemIdentification>
                          <xsl:choose>
                            <xsl:when test="Sequence != '1' and BomItemType = '2'">
                              <corecom:ID>
                                <xsl:value-of select="CatalogCategoryName"/>
                              </corecom:ID>
                            </xsl:when>
                            <xsl:otherwise>
                              <corecom:ID>
                                <xsl:value-of select="Name"/>
                              </corecom:ID>
                            </xsl:otherwise>
                          </xsl:choose>
                          <corecom:ApplicationObjectKey>
                            <corecom:ID>
                              <xsl:value-of select="Name"/>
                            </corecom:ID>
                            <corecom:ContextID>
                              <xsl:variable name="DomainTpyeVar">
                                <xsl:if test="Sequence != '1'">
                                  <!--  <xsl:variable name="ParentProduct">
                                      <xsl:value-of select="preceding-sibling::ItemReference[position()=1]/Name"/>
                                    </xsl:variable>
                                    <xsl:variable name="CurrentProduct">
                                      <xsl:value-of select="Name"/>
                                    </xsl:variable>
                                    <xsl:if test="//StructureHeader[AssemblyItemName=$ParentProduct]/StructureComponent[ComponentItemName=$CurrentProduct]/*[name() = 'ComponentAttributeGroup']">
                                      <xsl:value-of select="//StructureHeader[AssemblyItemName=$ParentProduct]/StructureComponent[ComponentItemName=$CurrentProduct]/*/ComponentUDA[Name='Domain_Type']/CharValue"/>
                                    </xsl:if>-->
                                  <xsl:choose>
                                    <xsl:when test="BomItemType = '2'">
                                      <xsl:text>CLASS</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:text>PRODUCT</xsl:text>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:if>
                              </xsl:variable>
                              <xsl:value-of select="$DomainTpyeVar"/>
                            </corecom:ContextID>
                          </corecom:ApplicationObjectKey>
                        </corecom:BillOfMaterialsComponentItemIdentification>
                      </corecom:BillOfMaterialsComponentItemReference>
                    </corecomEBO:BillOfMaterialsComponentItemLevel>
                  </xsl:for-each>
                </corecomEBO:BillOfMaterialsComponentItemPath>
              </corecomEBO:BillOfMaterialsComponentItemExclusion>
            </xsl:for-each>
            <xsl:for-each select="ContextInfo/ComponentPath[OverrideAttrGrp]">
              <corecomEBO:BillOfMaterialsSpecificationDefaultValueOverride>
                <corecomEBO:BillOfMaterialsComponentItemPath>
                  <xsl:for-each select="ComponentItemList/ItemReference">
                    <corecomEBO:BillOfMaterialsComponentItemLevel>
                      <corecomEBO:SequenceNumber>
                        <xsl:value-of select="Sequence"/>
                      </corecomEBO:SequenceNumber>
                      <corecom:BillOfMaterialsComponentItemReference>
                        <corecom:BillOfMaterialsComponentItemIdentification>
                          <xsl:choose>
                            <xsl:when test="Sequence != '1' and BomItemType = '2'">
                              <corecom:ID>
                                <xsl:value-of select="CatalogCategoryName"/>
                              </corecom:ID>
                            </xsl:when>
                            <xsl:otherwise>
                              <corecom:ID>
                                <xsl:value-of select="Name"/>
                              </corecom:ID>
                            </xsl:otherwise>
                          </xsl:choose>
                          <corecom:ApplicationObjectKey>
                            <corecom:ID>
                              <xsl:value-of select="Name"/>
                            </corecom:ID>
                            <corecom:ContextID>
                              <xsl:variable name="DomainTpyeVar">
                                <xsl:if test="Sequence != '1'">
                                  <xsl:choose>
                                    <xsl:when test="BomItemType = '2'">
                                      <xsl:text>CLASS</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:text>PRODUCT</xsl:text>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:if>
                              </xsl:variable>
                              <xsl:value-of select="$DomainTpyeVar"/>
                            </corecom:ContextID>
                          </corecom:ApplicationObjectKey>
                          <corecom:AlternateObjectKey>
                           <xsl:variable name="ComponentName" select="Name"/>
                           <corecom:ID>
                            <xsl:for-each select="$SyncItemListVariable/coreitemebm:DataArea">
                              <xsl:if test="coreitemebm:SyncItemList/corecomEBO:Name = $ComponentName">
                                <xsl:value-of select="coreitemebm:SyncItemList/corecom:ItemIdentification/corecom:BusinessComponentID"/>
                              </xsl:if>
                             </xsl:for-each>
                           </corecom:ID>
                          </corecom:AlternateObjectKey>
                        </corecom:BillOfMaterialsComponentItemIdentification>
                      </corecom:BillOfMaterialsComponentItemReference>
                    </corecomEBO:BillOfMaterialsComponentItemLevel>
                  </xsl:for-each>
                </corecomEBO:BillOfMaterialsComponentItemPath>
                <xsl:for-each select="OverrideAttrGrp/ComponentUDA">
                  <xsl:if test="Name='Min_Cardinality' or Name='Max_Cardinality' or Name='Default_Cardinality' or Name='Adjustment_Value' or Name='Maximum_Price' or Name='Minimum_Price' or Name='Commitment_Period' or Name='Termination_Charge' or Name='Grace_Period'">
                    <corecomEBO:BillOfMaterialsComponentItemSpecificationDefaultValue>
                      <corecom:Identification>
                        <corecom:ID>
                          <xsl:value-of select="Name"/>
                        </corecom:ID>
                      </corecom:Identification>
                      <corecomEBO:DataTypeCode>
                        <xsl:text>Number</xsl:text>
                      </corecomEBO:DataTypeCode>
                      <corecomEBO:Value>
                        <xsl:value-of select="NumberValue"/>
                      </corecomEBO:Value>
                      <corecom:ClassificationSpecificationIdentification>
                        <corecom:ID>
                          <xsl:value-of select="../AttributeGroupName"/>
                        </corecom:ID>
                      </corecom:ClassificationSpecificationIdentification>
                      <corecomEBO:Custom/>
                    </corecomEBO:BillOfMaterialsComponentItemSpecificationDefaultValue>
                  </xsl:if>
                  <xsl:if test="Name='Adjustment_Type' or Name='Relationship_Name' or Name='Domain_Type' or Name='Default_Product' or Name='Product_Class' or Name='Customizable' or Name='Commitment_Period_UOM' or Name='Grace_Period_UOM' or Name='Prorated_Plan' or Name='Apply_Component_Charge' or Name='Recommendable' or Name='Commitment' or Name='Validate_Member' or Name='Delete_Member' or Name='Default_Owner_Account' or Name='Default_Billing_Account' or Name='Action' or Name='Description'">
                    <corecomEBO:BillOfMaterialsComponentItemSpecificationDefaultValue>
                      <corecom:Identification>
                        <corecom:ID>
                          <xsl:value-of select="Name"/>
                        </corecom:ID>
                      </corecom:Identification>
                      <corecomEBO:DataTypeCode>
                        <xsl:text>Char</xsl:text>
                      </corecomEBO:DataTypeCode>
                      <corecomEBO:Value>
                        <xsl:value-of select="CharValue"/>
                      </corecomEBO:Value>
                      <corecom:ClassificationSpecificationIdentification>
                        <corecom:ID>
                          <xsl:value-of select="../AttributeGroupName"/>
                        </corecom:ID>
                      </corecom:ClassificationSpecificationIdentification>
                      <corecomEBO:Custom/>
                    </corecomEBO:BillOfMaterialsComponentItemSpecificationDefaultValue>
                  </xsl:if>
                  <xsl:if test="Name='Start_Date' or Name='End_Date'">
                    <corecomEBO:BillOfMaterialsComponentItemSpecificationDefaultValue>
                      <corecom:Identification>
                        <corecom:ID>
                          <xsl:value-of select="Name"/>
                        </corecom:ID>
                      </corecom:Identification>
                      <corecomEBO:DataTypeCode>
                        <xsl:text>Datetime</xsl:text>
                      </corecomEBO:DataTypeCode>
                      <corecomEBO:Value>
                        <!--<xsl:value-of select="DatetimeValue"/>-->
                        <xsl:call-template name="formatUDADate">
                          <xsl:with-param name="formatDateParam" select="DatetimeValue"/>
                        </xsl:call-template>
                      </corecomEBO:Value>
                      <corecom:ClassificationSpecificationIdentification>
                        <corecom:ID>
                          <xsl:value-of select="../AttributeGroupName"/>
                        </corecom:ID>
                      </corecom:ClassificationSpecificationIdentification>
                      <corecomEBO:Custom/>
                    </corecomEBO:BillOfMaterialsComponentItemSpecificationDefaultValue>
                  </xsl:if>
                </xsl:for-each>
              </corecomEBO:BillOfMaterialsSpecificationDefaultValueOverride>
            </xsl:for-each>
            <xsl:for-each select="ContextInfo/ComponentPath[ValuesetExclusion]">
              <corecomEBO:BillOfMaterialsSpecificationValueExclusion>
                <corecomEBO:BillOfMaterialsComponentItemPath>
                  <xsl:for-each select="ComponentItemList/ItemReference">
                    <corecomEBO:BillOfMaterialsComponentItemLevel>
                      <corecomEBO:SequenceNumber>
                        <xsl:value-of select="Sequence"/>
                      </corecomEBO:SequenceNumber>
                      <corecom:BillOfMaterialsComponentItemReference>
                        <corecom:BillOfMaterialsComponentItemIdentification>
                          <xsl:choose>
                            <xsl:when test="Sequence != '1' and BomItemType = '2'">
                              <corecom:ID>
                                <xsl:value-of select="CatalogCategoryName"/>
                              </corecom:ID>
                            </xsl:when>
                            <xsl:otherwise>
                              <corecom:ID>
                                <xsl:value-of select="Name"/>
                              </corecom:ID>
                            </xsl:otherwise>
                          </xsl:choose>
                          <corecom:ApplicationObjectKey>
                            <corecom:ID>
                              <xsl:value-of select="Name"/>
                            </corecom:ID>
                            <corecom:ContextID>
                              <xsl:variable name="DomainTpyeVar">
                                <xsl:if test="Sequence != '1'">
                                  <xsl:choose>
                                    <xsl:when test="BomItemType = '2'">
                                      <xsl:text>CLASS</xsl:text>
                                    </xsl:when>
                                    <xsl:otherwise>
                                      <xsl:text>PRODUCT</xsl:text>
                                    </xsl:otherwise>
                                  </xsl:choose>
                                </xsl:if>
                              </xsl:variable>
                              <xsl:value-of select="$DomainTpyeVar"/>
                            </corecom:ContextID>
                          </corecom:ApplicationObjectKey>
                        </corecom:BillOfMaterialsComponentItemIdentification>
                      </corecom:BillOfMaterialsComponentItemReference>
                    </corecomEBO:BillOfMaterialsComponentItemLevel>
                  </xsl:for-each>
                </corecomEBO:BillOfMaterialsComponentItemPath>
                <xsl:for-each select="ValuesetExclusion">
                  <corecomEBO:BillOfMaterialsComponentItemSpecificationValueExclusion>
                    <corecomEBO:BillOfMaterialsExcludedSpecificationValue>
                      <corecom:SpecificationValueSetLineReference>
                        <corecom:SpecificationValueSetIdentification>
                          <corecom:BusinessComponentID/>
                          <corecom:ID>
                            <xsl:value-of select="ValueSetName"/>
                          </corecom:ID>
                          <corecom:ApplicationObjectKey>
                            <corecom:ID>
                              <xsl:value-of select="ValueSetId"/>
                            </corecom:ID>
                            <corecom:ContextID>
                              <xsl:value-of select="ValueSetName"/>
                            </corecom:ContextID>
                          </corecom:ApplicationObjectKey>
                        </corecom:SpecificationValueSetIdentification>
                        <corecom:SpecificationValueSetLineIdentification>
                          <corecom:BusinessComponentID/>
                          <corecom:ID>
                            <xsl:value-of select="TransactionalAttrName"/>
                          </corecom:ID>
                          <corecom:ApplicationObjectKey>
                            <corecom:ID>
                              <xsl:value-of select="TransactionalAttrId"/>
                            </corecom:ID>
                            <corecom:ContextID>
                              <xsl:value-of select="TransactionalAttrName"/>
                            </corecom:ContextID>
                          </corecom:ApplicationObjectKey>
                        </corecom:SpecificationValueSetLineIdentification>
                        <xsl:for-each select="ValueExclusion">
                          <corecom:Value>
                            <xsl:value-of select="ExcludedValue"/>
                          </corecom:Value>
                        </xsl:for-each>
                      </corecom:SpecificationValueSetLineReference>
                      <corecomEBO:Custom/>
                    </corecomEBO:BillOfMaterialsExcludedSpecificationValue>
                    <corecomEBO:Custom/>
                  </corecomEBO:BillOfMaterialsComponentItemSpecificationValueExclusion>
                </xsl:for-each>
              </corecomEBO:BillOfMaterialsSpecificationValueExclusion>
            </xsl:for-each>
            <!--  Exclusion and Override End -->
          </ns1:SyncBillOfMaterialsList>
        </ns1:DataArea>
      </xsl:for-each>
    </ns1:SyncBillOfMaterialsListEBM>
  </xsl:template>

  <xsl:template match="*">
    <!--   <xsl:if test=". != ''">  -->
    <xsl:copy>
      <xsl:copy-of select="@*"/>
      <xsl:apply-templates/>
    </xsl:copy>
    <!--       </xsl:if>  -->
  </xsl:template>
  <xsl:template name="formatDate">
    <xsl:param name="formatDateParam"/>
    <xsl:variable name="TimeOffset" select="aia:getSystemModuleProperty('PIM',concat($SystemID,'.SERVER_TIMEZONE'),true())"/>
    <xsl:variable name="offset" select="$TimeOffset"/>
    <xsl:choose>
      <xsl:when test="string-length($formatDateParam) = number(10)">
        <xsl:value-of select="ebi:getConvertedDateWithTZ(concat($formatDateParam, 'T00:00:00',$offset),$offset,true())"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$formatDateParam"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template name="formatUDADate">
    <xsl:param name="formatDateParam"/>
    <xsl:variable name="TimeOffset" select="aia:getSystemModuleProperty('PIM',concat($SystemID,'.SERVER_TIMEZONE'),true())"/>
    <xsl:variable name="offset" select="$TimeOffset"/>
    <xsl:if test="$formatDateParam != ''">
      <xsl:choose>
        <xsl:when test="string-length($formatDateParam) = number(10)">
          <xsl:variable name="formattedDate" select="concat(substring($formatDateParam,7,4),'-',substring($formatDateParam,1,2),'-',substring($formatDateParam,4,2),'T00:00:00',$offset)"/>
          <xsl:value-of select="ebi:getConvertedDateWithTZ($formattedDate,$offset,true())"/>
        </xsl:when>
        <xsl:otherwise>
          <xsl:variable name="formattedDate" select="concat(substring($formatDateParam,7,4),'-',substring($formatDateParam,1,2),'-',substring($formatDateParam,4,2),'T',substring($formatDateParam,12,8),$offset)"/>
          <xsl:value-of select="ebi:getConvertedDateWithTZ($formattedDate,$offset,true())"/>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:if>
  </xsl:template>
</xsl:stylesheet>
