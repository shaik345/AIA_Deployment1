<?xml version = '1.0' encoding = 'UTF-8'?>
<?oracle-xsl-mapper <!-- SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY. -->
  <mapSources>
    <source type="XSD">
      <schema location="oramds:/apps/AIAMetaData/AIAComponents/EnterpriseObjectLibrary/Industry/Communications/EBO/SalesOrder/V2/SalesOrderEBM.xsd" />
      <rootElement name="UpdateSalesOrderEBM" namespace="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/SalesOrder/V2" />
    </source>
  </mapSources>
  <mapTargets>
    <target type="WSDL">
      <schema location="oramds:/apps/AIAMetaData/AIAComponents/ApplicationObjectLibrary/Siebel/V1/wsdls/SWIOrderIO.wsdl" />
      <rootElement name="SWIOrderUpsert_Input" namespace="http://siebel.com/asi" />
    </target>
  </mapTargets>
  <!-- GENERATED BY ORACLE XSL MAPPER 10.1.3.4.0(build 080718.0645) AT [WED OCT 29 16:48:17 IST 2008]. -->
?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:tns="http://siebel.com/asi"
                xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
                xmlns:ns0="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/SalesOrder/V2"
                xmlns:ehdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.esb.server.headers.ESBHeaderFunctions"
                xmlns:ebocontext="http://xmlns.oracle.com/EBO/BusinessContext/V1"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:svcdoc="http://xmlns.oracle.com/Services/Documentation/V1"
                xmlns:corecomEBO="http://xmlns.oracle.com/EnterpriseObjects/Core/CommonEBO/V1"
                xmlns:coresalesordercust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/EBO/SalesOrder/V2"
                xmlns:sordebo="http://xmlns.oracle.com/EnterpriseObjects/Core/EBO/SalesOrder/V2"
                xmlns:wsa="http://schemas.xmlsoap.org/ws/2003/03/addressing"
                xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
                xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
                xmlns:xacml-context="urn:oasis:names:tc:xacml:2.0:context:schema:cd:04"
                xmlns:corecomcust="http://xmlns.oracle.com/EnterpriseObjects/Core/Custom/Common/V2"
                xmlns:ora="http://www.oracle.com/XSL/Transform/java"
                xmlns:xsdLocal1="http://siebel.com/OrderManagement/Order/Data"
                xmlns:corecom="http://xmlns.oracle.com/EnterpriseObjects/Core/Common/V2"
                xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
                xmlns:aiacommsdate="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.industry.comms.util.AIAGetDateOffset"
                xmlns:orcl="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xacml="urn:oasis:names:tc:xacml:2.0:policy:schema:cd:04"
                xmlns:aia="http://www.oracle.com/XSL/Transform/java/oracle.apps.aia.core.xpath.AIAFunctions"
                version="1.0"
                exclude-result-prefixes="xsl ns0 ebocontext xsd svcdoc corecomEBO coresalesordercust wsa xacml-context corecomcust xacml corecom tns soap soapenc xsdLocal1 bpws ehdr aiacommsdate hwf xp20 xref ora ids orcl"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue">
	<xsl:import href="Transform_UpdateSalesOrderEBM_to_SiebelABM_Custom.xsl"/>
	<xsl:variable name="TargetSystemID">
		<xsl:choose>
			<xsl:when test="boolean(/sordebo:UpdateSalesOrderEBM/corecom:EBMHeader/corecom:Target/corecom:ID/text())">
				<xsl:value-of select="/sordebo:UpdateSalesOrderEBM/corecom:EBMHeader/corecom:Target/corecom:ID"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="aia:getServiceProperty('{http://xmlns.oracle.com/ABCSImpl/Siebel/Industry/Comms/UpdateSalesOrderSiebelCommsProvABCSImpl/V1}UpdateSalesOrderSiebelCommsProvABCSImpl','Default.SystemID',true())"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:variable>
	<xsl:variable name="SenderSystemID">
		<xsl:value-of select="/sordebo:UpdateSalesOrderEBM/corecom:EBMHeader/corecom:Sender/corecom:ID"/>
	</xsl:variable>
	<xsl:template match="/">
		<tns:SWIOrderUpsert_Input>
			<tns:Process_spcInstance_spcId/>
			<tns:UTCCanonical>Y</tns:UTCCanonical>
			<tns:Object_spcId/>
			<xsdLocal1:ListOfSWIOrderIO>
				<xsdLocal1:SWIOrder>
					<xsl:if test="boolean(/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:CustomerPartyReference/corecom:CustomerPartyAccountName/text())">
						<xsdLocal1:Account>
							<xsl:value-of select="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:CustomerPartyReference/corecom:CustomerPartyAccountName"/>
						</xsdLocal1:Account>
					</xsl:if>
					<xsl:if test="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:CustomerPartyReference/corecom:CustomerPartyAccountIdentification/corecom:BusinessComponentID">
						<xsdLocal1:AccountId>
							<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_ACCOUNTID.xref','COMMON',/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:CustomerPartyReference/corecom:CustomerPartyAccountIdentification/corecom:BusinessComponentID,$TargetSystemID,false())"/>
						</xsdLocal1:AccountId>
					</xsl:if>
					<xsl:if test="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:CustomerPartyReference/corecom:CustomerPartyAccountTypeCode != '' or /sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:CustomerPartyReference/corecom:CustomerPartyAccountTypeCode != 'INVALID VALUE'">
						<xsdLocal1:AccountType>
							<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/CUSTOMERPARTY_TYPECODE.dvm','COMMON',/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:CustomerPartyReference/corecom:CustomerPartyAccountTypeCode,$TargetSystemID,'INVALID VALUE')"/>
						</xsdLocal1:AccountType>
					</xsl:if>
					<xsl:if test="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:CustomerPartyReference/corecom:CustomerPartyAccountContactIdentification/corecom:BusinessComponentID != ''">
						<xsdLocal1:ContactId>
							<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_CONTACTID.xref','COMMON',/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:CustomerPartyReference/corecom:CustomerPartyAccountContactIdentification/corecom:BusinessComponentID,$TargetSystemID,false())"/>
						</xsdLocal1:ContactId>
					</xsl:if>
					<xsl:if test="boolean(/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:Status/corecom:Code/text())">
						<xsdLocal1:DeliveryStatus>
							<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_STATUS.dvm','COMMON',/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:Status/corecom:Code,$TargetSystemID,'INVALID VALUE')"/>
						</xsdLocal1:DeliveryStatus>
					</xsl:if>
					<xsdLocal1:Id>
						<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/SALESORDER_ID.xref','COMMON',/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:Identification/corecom:BusinessComponentID,$TargetSystemID,false())"/>
					</xsdLocal1:Id>
					<xsl:if test="boolean(/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:CustomerPartyReference/corecom:OrderDateTime/text())">
						<xsdLocal1:OrderDate>
							<xsl:value-of select="aiacommsdate:getDateUTCFormat(/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:OrderDateTime)"/>
						</xsdLocal1:OrderDate>
					</xsl:if>
					<xsl:if test="boolean(/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:Identification/corecom:ID/text())">
						<xsdLocal1:OrderNumber>
							<xsl:value-of select="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:Identification/corecom:ID"/>
						</xsdLocal1:OrderNumber>
					</xsl:if>
					<xsl:if test="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:FulfillmentPriorityCode != ''">
						<xsdLocal1:OrderPriority>
							<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PRIORITY.dvm','COMMON',/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:FulfillmentPriorityCode,$TargetSystemID,'INVALID VALUE')"/>
						</xsdLocal1:OrderPriority>
					</xsl:if>
					<xsl:if test="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:TypeCode != '' or /sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:TypeCode != 'INVALID VALUE'">
						<xsdLocal1:OrderType>
							<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_TYPECODE.dvm','COMMON',/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:TypeCode,$TargetSystemID,'INVALID VALUE')"/>
						</xsdLocal1:OrderType>
					</xsl:if>
					<xsl:if test="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:ParentSalesOrderReference/corecom:SalesOrderIdentification/corecom:BusinessComponentID != ''">
						<xsdLocal1:ParentOrderId>
							<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/SALESORDER_ID.xref','COMMON',/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:ParentSalesOrderReference/corecom:SalesOrderIdentification/corecom:BusinessComponentID,$TargetSystemID,false())"/>
						</xsdLocal1:ParentOrderId>
					</xsl:if>
					<xsl:if test="boolean(/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:PriceListReference/corecom:PriceListIdentification/corecom:ID/text())">
						<xsdLocal1:PriceListId>
							<xsl:value-of select="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:PriceListReference/corecom:PriceListIdentification/corecom:ID"/>
						</xsdLocal1:PriceListId>
					</xsl:if>
					<xsl:if test="boolean(/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:BusinessUnitReference/corecom:BusinessUnitIdentification/corecom:ID/text())">
						<xsdLocal1:PrimaryOrganizationId>
							<xsl:value-of select="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:BusinessUnitReference/corecom:BusinessUnitIdentification/corecom:ID"/>
						</xsdLocal1:PrimaryOrganizationId>
					</xsl:if>
					<xsl:if test="boolean(/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:Identification/corecom:Revision/text())">
						<xsdLocal1:Revision>
							<xsl:value-of select="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:Identification/corecom:Revision"/>
						</xsdLocal1:Revision>
					</xsl:if>
					<xsl:if test="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:ShipToPartyReference/corecom:CustomerPartyAccountIdentification/corecom:BusinessComponentID != ''">
						<xsdLocal1:ShipToAccountId>
							<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_ACCOUNTID.xref','COMMON',/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:ShipToPartyReference/corecom:CustomerPartyAccountIdentification/corecom:BusinessComponentID,$TargetSystemID,false())"/>
						</xsdLocal1:ShipToAccountId>
					</xsl:if>
					<xsl:if test="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:FulfillmentModeCode != '' and /sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:FulfillmentModeCode != 'INVALID VALUE'">
						<xsdLocal1:FulfillmentMode>
							<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_FULFILLMENTMODECODE.dvm','COMMON',/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:FulfillmentModeCode,$TargetSystemID,'INVALID VALUE')"/>
						</xsdLocal1:FulfillmentMode>
					</xsl:if>
					<xsl:if test="boolean(/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:ProcessingQuantity/text())">
						<xsdLocal1:JobCardinality>
							<xsl:value-of select="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:ProcessingQuantity"/>
						</xsdLocal1:JobCardinality>
					</xsl:if>
					<xsl:if test="boolean(/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:ProcessingNumber/text())">
						<xsdLocal1:JobId>
							<xsl:value-of select="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:ProcessingNumber"/>
						</xsdLocal1:JobId>
					</xsl:if>
					<xsl:if test="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:ProcessingTypeCode != '' and /sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:ProcessingTypeCode != 'INVALID VALUE'">
						<xsdLocal1:JobType>
							<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PROCESSINGTYPECODE.dvm','COMMON',/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:ProcessingTypeCode,$TargetSystemID,'INVALID VALUE')"/>
						</xsdLocal1:JobType>
					</xsl:if>
					<xsl:if test="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:PartialfulfillmentAllowedIndicator != '' and /sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:PartialfulfillmentAllowedIndicator != 'INVALID VALUE'">
						<xsdLocal1:SuccessDependency>
							<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PARTIALFULFILLALLOWEDIND.dvm','COMMON',/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:PartialfulfillmentAllowedIndicator,$TargetSystemID,'INVALID VALUE')"/>
						</xsdLocal1:SuccessDependency>
					</xsl:if>
					<xsl:if test="boolean(/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:Status/corecom:Description/text())">
						<xsdLocal1:StatusContext>
							<xsl:value-of select="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:Status/corecom:Description"/>
						</xsdLocal1:StatusContext>
					</xsl:if>
					<xsl:call-template name="SWIOrder_ext"/>
					<xsl:variable name="AllOrderLines" select="."/>
					<xsdLocal1:ListOfSWIOrderItem>
						<xsl:for-each select="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:SalesOrderLine">
							<xsl:call-template name="PopulateOrderItem">
								<xsl:with-param name="currentNode" select="."/>
								<xsl:with-param name="AllNodes" select="$AllOrderLines"/>
							</xsl:call-template>							
						</xsl:for-each>
					</xsdLocal1:ListOfSWIOrderItem>
				</xsdLocal1:SWIOrder>
			</xsdLocal1:ListOfSWIOrderIO>
			<xsl:if test="boolean(/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:OrderChangedIndicator/text())">
				<tns:Backup_spcOrder_spcFlag>
					<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_CHANGEDIND.dvm','COMMON',/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:OrderChangedIndicator,$TargetSystemID,'INVALID VALUE')"/>
				</tns:Backup_spcOrder_spcFlag>
			</xsl:if>
			<tns:Cascade_spcDown_spcFlag>TRUE</tns:Cascade_spcDown_spcFlag>
			<tns:Error_spcCode/>
			<tns:Error_spcMessage/>
		</tns:SWIOrderUpsert_Input>
	</xsl:template>

	<!-- Template for Order Item -->

	<xsl:template name="PopulateOrderItem">
		<xsl:param name="currentNode"/>
		<xsl:param name="AllNodes"/>
		<xsdLocal1:SWIOrderItem>
			<xsl:variable name="OrdLineBusCompId">
				<xsl:value-of select="./corecom:Identification/corecom:BusinessComponentID"/>
			</xsl:variable>
			<xsl:if test="./sordebo:SalesOrderSchedule/corecom:BillToPartyReference/corecom:CustomerPartyAccountIdentification/corecom:BusinessComponentID">
				<xsdLocal1:BillingAccountId>
					<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_ACCOUNTID.xref','COMMON',./sordebo:SalesOrderSchedule/corecom:BillToPartyReference/corecom:CustomerPartyAccountIdentification/corecom:BusinessComponentID,$TargetSystemID,false())"/>
				</xsdLocal1:BillingAccountId>
			</xsl:if>
			<xsl:if test="./sordebo:SalesOrderSchedule/corecom:BillToPartyReference/corecom:CustomerPartyAccountContactIdentification/corecom:BusinessComponentID != ''">
				<xsdLocal1:ContactId>
					<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_CONTACTID.xref','COMMON',./sordebo:SalesOrderSchedule/corecom:BillToPartyReference/corecom:CustomerPartyAccountContactIdentification/corecom:BusinessComponentID,$TargetSystemID,false())"/>
				</xsdLocal1:ContactId>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:SalesOrderSchedule/sordebo:SalesOrderScheduleCharge/corecom:Charge/corecom:DiscountAmount/text())">
				<xsdLocal1:DiscountAmount>
					<xsl:value-of select="./sordebo:SalesOrderSchedule/sordebo:SalesOrderScheduleCharge/corecom:Charge/corecom:DiscountAmount"/>
				</xsdLocal1:DiscountAmount>
			</xsl:if>
			<xsl:choose>
				<xsl:when test="boolean(./sordebo:SalesOrderSchedule/sordebo:RequestedDeliveryDateTime/text())">
					<xsdLocal1:DueDate>
						<xsl:value-of select="aiacommsdate:getDateUTCFormat(./sordebo:SalesOrderSchedule/sordebo:RequestedDeliveryDateTime)"/>
					</xsdLocal1:DueDate>
				</xsl:when>
			</xsl:choose>
			<xsdLocal1:Id>
				<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/SALESORDER_LINEID.xref','COMMON',./corecom:Identification/corecom:BusinessComponentID,$TargetSystemID,false())"/>
			</xsdLocal1:Id>
			<xsl:if test="./corecom:Identification/corecom:BusinessComponentID">
				<xsdLocal1:IntegrationId>
					<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/SALESORDER_LINEID.xref','COMMON',./corecom:Identification/corecom:BusinessComponentID,$TargetSystemID,false())"/>
				</xsdLocal1:IntegrationId>
			</xsl:if>
			<xsl:if test="./corecom:Identification/corecom:ID">
				<xsdLocal1:LineNumber>
					<xsl:value-of select="./corecom:Identification/corecom:ID"/>
				</xsdLocal1:LineNumber>
			</xsl:if>
			<xsl:if test="./corecom:ParentSalesOrderLineIdentification/corecom:BusinessComponentID != ''">
				<xsdLocal1:ParentOrderItemId>
					<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/SALESORDER_LINEID.xref','COMMON',./corecom:ParentSalesOrderLineIdentification/corecom:BusinessComponentID,$TargetSystemID,false())"/>
				</xsdLocal1:ParentOrderItemId>
			</xsl:if>
			<xsl:if test="boolean(./corecom:ItemReference/corecom:ItemIdentification/corecom:ApplicationObjectKey/corecom:ID/text())">
				<xsdLocal1:ProductId>
					<xsl:value-of select="./corecom:ItemReference/corecom:ItemIdentification/corecom:ApplicationObjectKey/corecom:ID"/>
				</xsdLocal1:ProductId>
			</xsl:if>
			<xsl:if test="./corecom:ItemReference/corecom:TypeCode != '' or ./corecom:ItemReference/corecom:TypeCode != 'INVALID VALUE'">
				<xsdLocal1:ProductTypeCode>
					<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ITEM_TYPE.dvm','COMMON',./corecom:ItemReference/corecom:TypeCode,$TargetSystemID,'INVALID VALUE')"/>
				</xsdLocal1:ProductTypeCode>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:OrderQuantity/text())">
				<xsdLocal1:Qty>
					<xsl:value-of select="./sordebo:OrderQuantity"/>
				</xsdLocal1:Qty>
			</xsl:if>
			<!--Schema Validation Check-->
			<!-- <xsdLocal1:QuantityRequested/> -->
			<!--Commenting the empty tag, not to be sent to Siebel-->
			<xsl:if test="boolean(./corecom:RootParentSalesOrderLineIdentification/corecom:BusinessComponentID/text())">
				<xsdLocal1:RootOrderItemId>
					<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/SALESORDER_LINEID.xref','COMMON',./corecom:RootParentSalesOrderLineIdentification/corecom:BusinessComponentID,$TargetSystemID,false())"/>
				</xsdLocal1:RootOrderItemId>
			</xsl:if>
			<xsl:if test="./sordebo:SalesOrderSchedule/corecom:OwnerPartyReference/corecom:CustomerPartyAccountIdentification/corecom:BusinessComponentID">
				<xsdLocal1:ServiceAccountId>
					<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_ACCOUNTID.xref','COMMON',./sordebo:SalesOrderSchedule/corecom:OwnerPartyReference/corecom:CustomerPartyAccountIdentification/corecom:BusinessComponentID,$TargetSystemID,false())"/>
				</xsdLocal1:ServiceAccountId>
			</xsl:if>
			<xsl:if test="/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/corecom:ShipToPartyReference/corecom:CustomerPartyAccountIdentification/corecom:BusinessComponentID != ''">
				<xsdLocal1:ShipToAccountId>
					<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_ACCOUNTID.xref','COMMON',./sordebo:SalesOrderSchedule/corecom:ShipToPartyReference/corecom:CustomerPartyAccountIdentification/corecom:BusinessComponentID,$TargetSystemID,false())"/>
				</xsdLocal1:ShipToAccountId>
			</xsl:if>
			<xsl:variable name="ActionCode">
				<xsl:choose>
					<xsl:when test="./sordebo:ServiceActionCode != '' and ./sordebo:ServiceActionCode != 'MOVE-DELETE' and ./sordebo:ServiceActionCode != 'MOVE-ADD'">
						<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_ACTIONCODE.dvm','COMMON',./sordebo:ServiceActionCode,$TargetSystemID,'INVALID VALUE')"/>
					</xsl:when>
					<xsl:when test="./sordebo:ServiceActionCode = 'MOVE-ADD'">
						<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_ACTIONCODE.dvm','COMMON','ADD',$TargetSystemID,'INVALID VALUE')"/>
					</xsl:when>
					<xsl:when test="./sordebo:ServiceActionCode = 'MOVE-DELETE'">
						<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_ACTIONCODE.dvm','COMMON','DELETE',$TargetSystemID,'INVALID VALUE')"/>
					</xsl:when>
				</xsl:choose>
			</xsl:variable>
			<xsl:if test="$ActionCode != ''">
				<xsdLocal1:ActionCode>
					<xsl:value-of select="$ActionCode"/>
				</xsdLocal1:ActionCode>
			</xsl:if>
			<xsl:if test="./corecom:InstalledProductReference/corecom:InstalledProductIdentification/corecom:BusinessComponentID != ''">
				<xsdLocal1:AssetIntegrationId>
					<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/INSTALLEDPRODUCT_ID.xref','COMMON',./corecom:InstalledProductReference/corecom:InstalledProductIdentification/corecom:BusinessComponentID,$TargetSystemID,false())"/>
				</xsdLocal1:AssetIntegrationId>
			</xsl:if>
			<xsl:variable name="RootAssetID">
				<xsl:value-of select="$AllNodes/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:SalesOrderLine[./corecom:RootParentSalesOrderLineIdentification/corecom:BusinessComponentID = $OrdLineBusCompId]/corecom:InstalledProductReference/corecom:InstalledProductIdentification/corecom:BusinessComponentID"/>
			</xsl:variable>
			<xsl:if test="boolean(./sordebo:SalesOrderSchedule/corecom:BillToPartyReference/corecom:BillingProfileReference/corecom:BillingProfileIdentification/corecom:BusinessComponentID/text())">
				<xsdLocal1:BillingProfileId>
					<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/CUSTOMERPARTY_BILLPROFILEID.xref','COMMON',./sordebo:SalesOrderSchedule/corecom:BillToPartyReference/corecom:BillingProfileReference/corecom:BillingProfileIdentification/corecom:BusinessComponentID,$TargetSystemID,false())"/>
				</xsdLocal1:BillingProfileId>
			</xsl:if>
			<xsl:if test="boolean(./corecom:ItemReference/corecom:ClassificationCode[@listID='PermittedTypeCode']/text())">
				<xsdLocal1:BillingServiceType>
					<xsl:value-of select="./corecom:ItemReference/corecom:ClassificationCode[@listID='PermittedTypeCode']"/>
				</xsdLocal1:BillingServiceType>
			</xsl:if>
			<xsl:if test="./corecom:ItemReference/corecom:ClassificationCode[@listID='BillingProductTypeCode'] != '' and ./corecom:ItemReference/corecom:ClassificationCode[@listID='BillingProductTypeCode'] != 'INVALID VALUE'">
				<xsdLocal1:BillingType>
					<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/ITEM_BILLINGTYPECODE.dvm','COMMON',./corecom:ItemReference/corecom:ClassificationCode[@listID='BillingProductTypeCode'],$TargetSystemID,'INVALID VALUE')"/>
				</xsdLocal1:BillingType>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:SalesOrderSchedule/sordebo:SalesOrderScheduleCharge/corecom:Charge/corecom:DiscountPercent/text())">
				<xsdLocal1:DiscountPercent>
					<xsl:value-of select="./sordebo:SalesOrderSchedule/sordebo:SalesOrderScheduleCharge/corecom:Charge/corecom:DiscountPercent"/>
				</xsdLocal1:DiscountPercent>
			</xsl:if>
			<xsl:if test="./sordebo:SalesOrderSchedule/corecom:UnitSalePrice/corecom:TypeCode != ''">
				<xsdLocal1:PriceType>
					<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/PRICE_TYPE.dvm','COMMON',./sordebo:SalesOrderSchedule/corecom:UnitSalePrice/corecom:TypeCode,$TargetSystemID,'INVALID VALUE')"/>
				</xsdLocal1:PriceType>
			</xsl:if>
			<xsl:if test="./corecom:ItemReference/corecom:ClassificationCode[@listID='BillingProductTypeCode'] = 'SERVICE BUNDLE' and ./corecom:ParentSalesOrderLineIdentification/corecom:BusinessComponentID = ''">
				<xsl:variable name="PromID">
					<xsl:value-of select="$AllNodes/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:SalesOrderLine[./corecom:PromotionSalesOrderLineReference/corecom:PromotionSalesOrderLineIdentification/corecom:BusinessComponentID = $OrdLineBusCompId]/corecom:InstalledProductReference/corecom:InstalledProductIdentification/corecom:BusinessComponentID"/>
				</xsl:variable>
				<xsl:if test="$PromID !=''">
					<xsdLocal1:ProdPromInstanceId>
						<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/INSTALLEDPRODUCT_ID.xref','COMMON',$PromID,$TargetSystemID,false())"/>
					</xsdLocal1:ProdPromInstanceId>
				</xsl:if>
			</xsl:if>
			<xsl:if test="./corecom:ItemReference/corecom:ClassificationCode[@listID='BillingProductTypeCode'] = 'SERVICE BUNDLE' and ./corecom:ParentSalesOrderLineIdentification/corecom:BusinessComponentID = ''">
				<xsl:variable name="PromSourceID">
					<xsl:value-of select="$AllNodes/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:SalesOrderLine[./corecom:PriorPromotionSalesOrderLineReference/corecom:PriorPromotionSalesOrderLineIdentification/corecom:BusinessComponentID = $OrdLineBusCompId]/corecom:InstalledProductReference/corecom:InstalledProductIdentification/corecom:BusinessComponentID"/>
				</xsl:variable>
				<xsl:if test="$PromSourceID !=''">
					<xsdLocal1:ProdPromSourceId>
						<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/INSTALLEDPRODUCT_ID.xref','COMMON',$PromSourceID,$TargetSystemID,false())"/>
					</xsdLocal1:ProdPromSourceId>
				</xsl:if>
			</xsl:if>
			<xsl:if test="./corecom:ChargeParentOrderLineIdentification/corecom:BusinessComponentID != ''">
				<xsdLocal1:RelatedAssetIntegrationId>
					<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/INSTALLEDPRODUCT_ID.xref','COMMON',./corecom:InstalledProductReference/corecom:InstalledProductIdentification/corecom:BusinessComponentID,$TargetSystemID,false())"/>
				</xsdLocal1:RelatedAssetIntegrationId>
			</xsl:if>
			<xsl:if test="$RootAssetID != ''">
				<xsdLocal1:RootAssetIntegrationId>
					<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/INSTALLEDPRODUCT_ID.xref','COMMON',$RootAssetID,$TargetSystemID,false())"/>
				</xsdLocal1:RootAssetIntegrationId>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:SalesOrderSchedule/sordebo:SalesOrderItemInstance/corecom:Identification/corecom:ID/text())">
				<xsdLocal1:ServiceId>
					<xsl:value-of select="./sordebo:SalesOrderSchedule/sordebo:SalesOrderItemInstance/corecom:Identification/corecom:ID"/>
				</xsdLocal1:ServiceId>
			</xsl:if>
			<xsl:if test="boolean(./corecom:ItemRefernce/corecom:AlternateObjectKey/corecom:ContextID/text())">
				<xsdLocal1:SmartPartNumber>
					<xsl:value-of select="./corecom:ItemRefernce/corecom:AlternateObjectKey/corecom:ContextID"/>
				</xsdLocal1:SmartPartNumber>
			</xsl:if>
			<xsl:if test="./sordebo:ServiceActionCode = 'MOVE-DELETE' or ./sordebo:ServiceActionCode = 'MOVE-ADD'">
				<xsdLocal1:SubActionCode>
					<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_ACTIONCODE.dvm','COMMON',./sordebo:ServiceActionCode,$TargetSystemID,'INVALID VALUE')"/>
				</xsdLocal1:SubActionCode>
			</xsl:if>
			<xsl:if test="./sordebo:RevisionPermissibleCode != ''">
				<xsl:variable name="varChangeCost">
					<xsl:value-of select="./sordebo:RevisionPermissibleCode"/>
				</xsl:variable>
				<xsl:choose>
					<xsl:when test="$varChangeCost = 'NOT YET'">
						<xsdLocal1:ChangeCost/>
					</xsl:when>
					<xsl:otherwise>
						<xsdLocal1:ChangeCost>
							<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_REVISIONPERMISIBLECODE.dvm','COMMON',./sordebo:RevisionPermissibleCode,$TargetSystemID,'INVALID VALUE')"/>
						</xsdLocal1:ChangeCost>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:if>
			<xsl:if test="./corecom:ItemRefernce/corecom:FulfillmentCompositionTypeCode != ''">
				<xsdLocal1:CompositionType>
					<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_FULFILLCOMPOSITIONTYPE.dvm','COMMON',./corecom:ItemRefernce/corecom:FulfillmentCompositionTypeCode,$TargetSystemID,'INVALID VALUE')"/>
				</xsdLocal1:CompositionType>
			</xsl:if>
			<xsl:if test="./corecom:DependingSalesOrderLineReference/corecom:SalesOrderLineIdentification/corecom:BusinessComponentID != ''">
				<xsdLocal1:DependsOnLineItemId>
					<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/SALESORDER_LINEID.xref','COMMON',./corecom:DependingSalesOrderLineReference/corecom:SalesOrderLineIdentification/corecom:BusinessComponentID,$TargetSystemID,false())"/>
				</xsdLocal1:DependsOnLineItemId>
			</xsl:if>
			<xsl:if test="./corecom:DependingSalesOrderReference/corecom:SalesOrderIdentification/corecom:BusinessComponentID != ''">
				<xsdLocal1:DependsOnOrderId>
					<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/SALESORDER_ID.xref','COMMON',./corecom:DependingSalesOrderReference/corecom:SalesOrderIdentification/corecom:BusinessComponentID,$TargetSystemID,false())"/>
				</xsdLocal1:DependsOnOrderId>
			</xsl:if>
			<xsl:if test="boolean(./corecom:ItemRefernce/corecom:NetworkItemTypeCode/text())">
				<xsdLocal1:NetworkElementType>
					<xsl:value-of select="./corecom:ItemRefernce/corecom:NetworkItemTypeCode"/>
				</xsdLocal1:NetworkElementType>
			</xsl:if>
			<xsl:choose>
				<xsl:when test="boolean(./sordebo:SalesOrderSchedule/sordebo:PurchaseDate/text())">
					<xsdLocal1:NRCStartDate>
						<xsl:value-of select="aiacommsdate:getDateUTCFormat(./sordebo:SalesOrderSchedule/sordebo:PurchaseDate)"/>
					</xsdLocal1:NRCStartDate>
				</xsl:when>
			</xsl:choose>
			<xsl:if test="boolean(./corecom:ItemRefernce/corecom:Description/text())">
				<xsdLocal1:PromotionDescription>
					<xsl:value-of select="./corecom:ItemRefernce/corecom:Description"/>
				</xsdLocal1:PromotionDescription>
			</xsl:if>
			<xsl:choose>
				<xsl:when test="boolean(./sordebo:SalesOrderSchedule/sordebo:CycleStartDateTime/text())">
					<xsdLocal1:RCStartDate>
						<xsl:value-of select="aiacommsdate:getDateUTCFormat(./sordebo:SalesOrderSchedule/sordebo:CycleStartDateTime)"/>
					</xsdLocal1:RCStartDate>
				</xsl:when>
			</xsl:choose>
			<xsl:if test="./corecom:OriginalSalesOrderLineReference/corecom:SalesOrderLineIdentification/corecom:BusinessComponentID != ''">
				<xsdLocal1:RevisedLineItemId>
					<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/SALESORDER_LINEID.xref','COMMON',./corecom:OriginalSalesOrderLineReference/corecom:SalesOrderLineIdentification/corecom:BusinessComponentID,$TargetSystemID,false())"/>
				</xsdLocal1:RevisedLineItemId>
			</xsl:if>
			<xsl:if test="./corecom:ItemRefernce/corecom:ServiceIndicator != ''">
				<xsdLocal1:ServiceFlg>
					<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_SERVICEINDICATOR.dvm','COMMON',./corecom:ItemRefernce/corecom:ServiceIndicator,$TargetSystemID,'INVALID VALUE')"/>
				</xsdLocal1:ServiceFlg>
			</xsl:if>
			<xsl:if test="boolean(./corecom:Status/corecom:Description/text())">
				<xsdLocal1:StatusContext>
					<xsl:value-of select="./corecom:Status/corecom:Description"/>
				</xsdLocal1:StatusContext>
			</xsl:if>
			<xsl:if test="./corecom:ItemRefernce/corecom:FulfillmentSuccessCode != '' and ./corecom:ItemRefernce/corecom:FulfillmentSuccessCode != 'INVALID VALUE'">
				<xsdLocal1:SuccessDependency>
					<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_PARTIALFULFILLALLOWEDIND.dvm','COMMON',./corecom:ItemRefernce/corecom:FulfillmentSuccessCode,$TargetSystemID,'INVALID VALUE')"/>
				</xsdLocal1:SuccessDependency>
			</xsl:if>
			<xsl:choose>
				<xsl:when test="boolean(./sordebo:SalesOrderSchedule/sordebo:ServiceUsageStartDateTime/text())">
					<xsdLocal1:UseStartDate>
						<xsl:value-of select="aiacommsdate:getDateUTCFormat(./sordebo:SalesOrderSchedule/sordebo:ServiceUsageStartDateTime)"/>
					</xsdLocal1:UseStartDate>
				</xsl:when>
			</xsl:choose>
			<xsl:if test="boolean(./corecom:ItemRefernce/corecom:SupplierItemID/text())">
				<xsdLocal1:VendorPartNumber>
					<xsl:value-of select="./corecom:ItemRefernce/corecom:SupplierItemID"/>
				</xsdLocal1:VendorPartNumber>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:MilestoneCode/text())">
				<xsdLocal1:Milestone>
					<xsl:value-of select="./sordebo:MilestoneCode"/>
				</xsdLocal1:Milestone>
			</xsl:if>
			<xsl:if test="boolean(./corecom:ItemRefernce/corecom:PrimaryClassificationCode/text())">
				<xsdLocal1:ClassName>
					<xsl:value-of select="./corecom:ItemRefernce/corecom:PrimaryClassificationCode"/>
				</xsdLocal1:ClassName>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='CLLI']/corecom:ValueText/text())">
				<xsdLocal1:CLLI>
					<xsl:value-of select="./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='CLLI']/corecom:ValueText"/>
				</xsdLocal1:CLLI>
			</xsl:if>
			<xsl:if test="./corecom:ItemRefernce/corecom:NetworkIndicator !=''">
				<xsdLocal1:CompoundProductFlag>
					<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_NETWORKINDICATOR.dvm','COMMON',./corecom:ItemRefernce/corecom:NetworkIndicator,$TargetSystemID,'INVALID VALUE')"/>
				</xsdLocal1:CompoundProductFlag>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:SalesOrderSchedule/sordebo:ActualDeliveryDateTime/text())">
				<xsdLocal1:CompletedDate>
					<xsl:value-of select="aiacommsdate:getDateUTCFormat(./sordebo:SalesOrderSchedule/sordebo:ActualDeliveryDateTime)"/>
				</xsdLocal1:CompletedDate>
			</xsl:if>
			<xsl:variable name="strExpDelDateTime">
				<xsl:if test="boolean(./sordebo:SalesOrderSchedule/sordebo:ExpectedDeliveryDateTime/text())">
					<xsl:value-of select="aiacommsdate:getDateUTCFormat(./sordebo:SalesOrderSchedule/sordebo:ExpectedDeliveryDateTime)"/>
				</xsl:if>
			</xsl:variable>
			<xsl:variable name="strAppendedExpDelDateTime">
				<xsl:if test="boolean(./sordebo:SalesOrderSchedule/sordebo:ExpectedDeliveryDate/text())">
					<xsl:if test="not(boolean(contains(./sordebo:SalesOrderSchedule/sordebo:ExpectedDeliveryDate,'T')))">
						<xsl:value-of select="concat(substring-before(./sordebo:SalesOrderSchedule/sordebo:ExpectedDeliveryDate,'Z'),'T00:00:00Z')"/>
					</xsl:if>
				</xsl:if>
			</xsl:variable>
			<xsl:variable name="strExpDelDate">
				<xsl:if test="boolean(./sordebo:SalesOrderSchedule/sordebo:ExpectedDeliveryDate/text())">
					<xsl:if test="boolean(contains(./sordebo:SalesOrderSchedule/sordebo:ExpectedDeliveryDate,'T'))">
						<xsl:value-of select="aiacommsdate:getDateUTCFormat(./sordebo:SalesOrderSchedule/sordebo:ExpectedDeliveryDate)"/>
					</xsl:if>
				</xsl:if>
			</xsl:variable>
			<xsl:variable name="strCalcExpDelDateTime">
				<xsl:choose>
					<xsl:when test="boolean($strExpDelDateTime !='')">
						<xsl:value-of select="$strExpDelDateTime"/>
					</xsl:when>
					<xsl:when test="boolean($strExpDelDateTime = '')">
						<xsl:if test="boolean($strExpDelDate = '') and boolean($strAppendedExpDelDateTime != '')">
							<xsl:value-of select="$strAppendedExpDelDateTime"/>
						</xsl:if>
						<xsl:if test="boolean($strExpDelDate != '')">
							<xsl:value-of select="$strExpDelDate"/>
						</xsl:if>
					</xsl:when>
					<xsl:otherwise/>
				</xsl:choose>
			</xsl:variable>
			<xsl:if test="boolean($strCalcExpDelDateTime != '')">
				<xsdLocal1:ExpectedDeliveryDate>
					<xsl:value-of select="$strCalcExpDelDateTime"/>
				</xsdLocal1:ExpectedDeliveryDate>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='Node']/corecom:ValueText/text())">
				<xsdLocal1:Node>
					<xsl:value-of select="./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='Node']/corecom:ValueText"/>
				</xsdLocal1:Node>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='PortNumber']/corecom:ValueText/text())">
				<xsdLocal1:PortNumber>
					<xsl:value-of select="./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='PortNumber']/corecom:ValueText"/>
				</xsdLocal1:PortNumber>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='Prefix']/corecom:ValueText/text())">
				<xsdLocal1:Prefix>
					<xsl:value-of select="./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='Prefix']/corecom:ValueText"/>
				</xsdLocal1:Prefix>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:SalesOrderSchedule/corecom:OwnerPartyReference/corecom:CustomerPartyAccountIdentification/corecom:ID/text())">
				<xsdLocal1:ServiceAccount>
					<xsl:value-of select="./sordebo:SalesOrderSchedule/corecom:OwnerPartyReference/corecom:CustomerPartyAccountIdentification/corecom:ID"/>
				</xsdLocal1:ServiceAccount>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='ServiceAddressId']/corecom:ValueText/text())">
				<xsdLocal1:ServiceAddressId>
					<xsl:value-of select="./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='ServiceAddressId']/corecom:ValueText"/>
				</xsdLocal1:ServiceAddressId>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:SalesOrderSchedule/corecom:ServiceTimePeriod/corecom:Duration/text())">
				<xsdLocal1:ServiceLength>
					<xsl:value-of select="substring-after(substring-before(./sordebo:SalesOrderSchedule/corecom:ServiceTimePeriod/corecom:Duration,'D'),'P')"/>
				</xsdLocal1:ServiceLength>
			</xsl:if>
			<xsl:if test="./sordebo:StartBillingOnFirstServiceUsageIndicator != ''">
				<xsdLocal1:StartBillingOnFirstUsage>
					<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_STRTBILLSERVICEUSAGE.dvm','COMMON',./sordebo:StartBillingOnFirstServiceUsageIndicator,$TargetSystemID,'INVALID VALUE')"/>
				</xsdLocal1:StartBillingOnFirstUsage>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='ToCLLI']/corecom:ValueText/text())">
				<xsdLocal1:ToCLLI>
					<xsl:value-of select="./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='ToCLLI']/corecom:ValueText"/>
				</xsdLocal1:ToCLLI>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='ToNode']/corecom:ValueText/text())">
				<xsdLocal1:ToNode>
					<xsl:value-of select="./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='ToNode']/corecom:ValueText"/>
				</xsdLocal1:ToNode>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='ToPortNumber']/corecom:ValueText/text())">
				<xsdLocal1:ToPortNumber>
					<xsl:value-of select="./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='ToPortNumber']/corecom:ValueText"/>
				</xsdLocal1:ToPortNumber>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='ToPrefix']/corecom:ValueText/text())">
				<xsdLocal1:ToPrefix>
					<xsl:value-of select="./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='ToPrefix']/corecom:ValueText"/>
				</xsdLocal1:ToPrefix>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='ToServiceAccountId']/corecom:ValueText/text())">
				<xsdLocal1:ToServiceAccountId>
					<xsl:value-of select="./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='ToServiceAccountId']/corecom:ValueText"/>
				</xsdLocal1:ToServiceAccountId>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='ToServiceAddressId']/corecom:ValueText/text())">
				<xsdLocal1:ToServiceAddressId>
					<xsl:value-of select="./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='ToServiceAddressId']/corecom:ValueText"/>
				</xsdLocal1:ToServiceAddressId>
			</xsl:if>
			<xsl:if test="boolean(./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='ToServicePointId']/corecom:ValueText/text())">
				<xsdLocal1:ToServicePointId>
					<xsl:value-of select="./sordebo:SalesOrderLineSpecificationGroup/corecom:SpecificationGroup[corecom:Name='ExtensibleAttributes']/corecom:Specification[corecom:Name='ToServicePointId']/corecom:ValueText"/>
				</xsdLocal1:ToServicePointId>
			</xsl:if>
			<xsl:if test="./corecom:ItemReference/corecom:ClassificationCode[@listID='BillingProductTypeCode'] = 'SERVICE BUNDLE'">
				<xsl:variable name="PromID">
					<xsl:value-of select="$AllNodes/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:SalesOrderLine[./corecom:PromotionSalesOrderLineReference/corecom:PromotionSalesOrderLineIdentification/corecom:BusinessComponentID = $OrdLineBusCompId]/corecom:InstalledProductReference/corecom:InstalledProductIdentification/corecom:BusinessComponentID"/>
				</xsl:variable>
				<xsl:if test="$PromID !=''">
					<xsdLocal1:RootProdPromInstanceId>
						<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/INSTALLEDPRODUCT_ID.xref','COMMON',$PromID,$TargetSystemID,false())"/>
					</xsdLocal1:RootProdPromInstanceId>
				</xsl:if>
			</xsl:if>
			<xsl:if test="./corecom:ItemReference/corecom:ClassificationCode[@listID='BillingProductTypeCode'] = 'SERVICE BUNDLE'">
				<xsl:variable name="PromSourceID">
					<xsl:value-of select="$AllNodes/sordebo:UpdateSalesOrderEBM/sordebo:DataArea/sordebo:UpdateSalesOrder/sordebo:SalesOrderLine[./corecom:PriorPromotionSalesOrderLineReference/corecom:PriorPromotionSalesOrderLineIdentification/corecom:BusinessComponentID = $OrdLineBusCompId]/corecom:InstalledProductReference/corecom:InstalledProductIdentification/corecom:BusinessComponentID"/>
				</xsl:variable>
				<xsl:if test="$PromSourceID !=''">
					<xsdLocal1:RootProdPromSourceId>
						<xsl:value-of select="xref:lookupXRef('oramds:/apps/AIAMetaData/xref/INSTALLEDPRODUCT_ID.xref','COMMON',$PromSourceID,$TargetSystemID,false())"/>
					</xsdLocal1:RootProdPromSourceId>
				</xsl:if>
			</xsl:if>
			<xsl:if test="./corecom:EffectiveTimePeriod/corecom:EndDateTime != ''">
				<xsl:variable name="ServiceEndDate">
					<xsl:value-of select="./corecom:EffectiveTimePeriod/corecom:EndDateTime"/>
				</xsl:variable>
				<xsdLocal1:EffectiveEndDate>
					<xsl:value-of select="aiacommsdate:getDateUTCFormat($ServiceEndDate)"/>
				</xsdLocal1:EffectiveEndDate>
			</xsl:if>
			<xsl:if test="./corecom:EffectiveTimePeriod/corecom:StartDateTime != ''">
				<xsl:variable name="ServiceStartDate">
					<xsl:value-of select="./corecom:EffectiveTimePeriod/corecom:StartDateTime"/>
				</xsl:variable>
				<xsdLocal1:EffectiveStartDate>
					<xsl:value-of select="aiacommsdate:getDateUTCFormat($ServiceStartDate)"/>
				</xsdLocal1:EffectiveStartDate>
			</xsl:if>
			<xsl:if test="boolean(./corecom:Status/corecom:Code/text())">
				<xsdLocal1:DeliveryStatus>
					<xsl:value-of select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_LINESTATUS.dvm','COMMON',./corecom:Status/corecom:Code,$TargetSystemID,'INVALID VALUE')"/>
				</xsdLocal1:DeliveryStatus>
			</xsl:if>
			<xsl:choose>
				<xsl:when test="boolean(./corecom:ItemReference/corecom:SpecificationGroup/corecom:Specification/text())">
					<xsdLocal1:ListOfSWIOrderItemXA>
						<xsl:for-each select="./corecom:ItemReference/corecom:SpecificationGroup/corecom:Specification">
							<xsl:call-template name="PopulateItemXA">
								<!-- Use Sales Order Line AC-->
								<xsl:if test="@actionCode != ''">
									<xsl:with-param name="ActionCode"
                                                    select="dvm:lookupValue('oramds:/apps/AIAMetaData/dvm/SALESORDER_ACTIONCODE.dvm','COMMON',@actionCode,$TargetSystemID,'INVALID VALUE')"/>
								</xsl:if>
								<xsl:with-param name="Attribute"
                                                select="./corecom:Name"/>
								<xsl:with-param name="LICValue"
                                                select="./corecom:Value"/>
								<xsl:with-param name="DataType"
                                                select="./corecom:DataTypeCode"/>
							</xsl:call-template>
						</xsl:for-each>
					</xsdLocal1:ListOfSWIOrderItemXA>
				</xsl:when>
			</xsl:choose>
			<xsl:call-template name="SWIOrderItem_ext">
								<xsl:with-param name="currentNode" select="."/>
							</xsl:call-template>
		</xsdLocal1:SWIOrderItem>
	</xsl:template>

	<!-- Template for poulation the XA -->

	<xsl:template name="PopulateItemXA">
		<xsl:param name="ActionCode"/>
		<xsl:param name="Attribute"/>
		<xsl:param name="LICValue"/>
		<xsl:param name="DataType"/>
		<xsdLocal1:SWIOderItemXA>
			<xsl:if test="$ActionCode != ''">
				<xsdLocal1:ActionCode>
					<xsl:value-of select="$ActionCode"/>
				</xsdLocal1:ActionCode>
			</xsl:if>
			<xsl:if test="$Attribute != ''">
				<xsdLocal1:Attribute>
					<xsl:value-of select="$Attribute"/>
				</xsdLocal1:Attribute>
			</xsl:if>
			<xsl:if test="$LICValue != ''">
				<xsdLocal1:LICValue>
					<xsl:value-of select="$LICValue"/>
				</xsdLocal1:LICValue>
			</xsl:if>
			<xsl:if test="$DataType != ''">
				<xsdLocal1:DataType>
					<xsl:value-of select="$DataType"/>
				</xsdLocal1:DataType>
			</xsl:if>
		</xsdLocal1:SWIOderItemXA>
	</xsl:template>
</xsl:stylesheet>
